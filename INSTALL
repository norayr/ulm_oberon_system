Installation Instructions for Ulm's Oberon Library and the included
Compiler for the Intel Architecture.

Warning: This is alpha software. Some components of this package have
not been extensively tested, some of them are just plain experimental
or of temporary nature. This release provides an early access to the
current state of development for the impatient. Error reports and
suggestions are nevertheless welcome (see below for details).

Yet another warning: Do not try to run this package on systems with
less than 384 MB physical main memory.

(1) Unpack this archive and cd to its top-level directory.

(2) Decide where to install this package. A good candidate would
    be /usr/local/oberon but you are also free to chose another
    directory like $HOME/oberon if you prefer a private installation.
    Set the environment variable OBERON to this directory.
    (Please do not select an already used directory like /usr/local;
    if you want to find the binaries in /usr/local/bin, you are
    free to set BinDir to /usr/local/bin in the make command line
    below).

(3) Invoke GNU make:

       make DestDir=$OBERON

(4) Start the Oberon Name Server. This is a simple directory service
    that is used by cdbd and its clients later. To start this server
    run $OBERON/bin/start_pons. This must be done each time the machine
    is rebooted.

(5) Start the Compiler Database Daemon. The compiler loads source
    files from the database and stores its results to the database.
    Run the the script $OBERON/bin/start_cdbd to start this daemon.
    This must be done each time when the machine is rebooted.

    Don't be surprised if oberon.db becomes quite huge over time. Unless
    you delete the file oberon.db it should not be necessary to repeat
    the following steps after a reboot.

(6) Load all library sources into the database maintained by cdbd
    using the utility load_libsources:

       $OBERON/bin/load_libsources

    This needs only to be done once.

(7) You might want to include $OBERON/rc into /etc/profile or
    ~/.profile:

       . /usr/local/oberon/rc

    This includes $OBERON/bin in your PATH, $OBERON/man in your
    MANPATH, and sets ONS_ROOT so that the name space of your
    Oberon Name Server is found.

(7) Enjoy.

To compile your own programs do the following:

(1) Setup a directory for each project. Definitions should end
    in ``.od'' and modules in ``.om''. The basename of the file
    names should be derived from the module names. Conflicts to
    names of library modules should be avoided.
    (You might want to try this first with Welcome.o[dm] that
    are shipped within the root directory of this package).

(2) Check in all source files into the database:

       obci -a $OBERON/var/cdbd/write -b /pub/cdb/oberon *.o[dm]

    Whenever sources change, they need to be checked in again.
    It does not harm to check in sources that are already in the
    database.
    (Please note that /pub/cdb/oberon is not a path in your
    local file system but a path within the Oberon name space).

(3) Build programs by passing the name of your main module to
    obbuild:

       obbuild MyMainModule

    Note that the compiler finds all other modules required within
    the database and compiles them as well if this has not been
    done before. Please note also that the name of the main module 
    is given without its extension (``.od'' or ``.om'').

    Error messages are sent to standard error. In case of success,
    an executable binary that is named after the main module is stored
    into the current directory.

Please send bug reports and feature requests to
oberon@mathematik.uni-ulm.de.  If the request is purely specific
to the Linux/i386 platform you may as well send the mail to
ehrhardt@mathematik.uni-ulm.de. Sending spams (unsolicited commercial
emails, bulk emails, viruses or other junk) to these addresses is
prohibited.

Christian Ehrhardt and Andreas Borchert
