Installation Instructions for Ulm's Oberon Library and the included
Compiler for the Intel Architecture.

Warning: This is alpha software. Some components of this package have
not been extensively tested, some of them are just plain experimental
or of temporary nature. This release provides an early access to the
current state of development for the inpatient. Error reports and
suggestions are nevertheless welcome (see below for details).

(1) Unpack this archive.

(2) Make a directory /usr/local/oberon and copy the contents of
    this archive into that directory:

       OBERON=/usr/local/oberon
       mkdir $OBERON
       cp -a [a-z]* $OBERON

    You are free to select another directory as /usr/local/oberon.
    In this case, you need to fix the BASEDIR variable at the beginning
    of the scripts load_libsources, obbuild, start_cdbd, and start_pons
    in the bin directory. In the following steps we assume that we find
    the installation within $OBERON.

(3) Configure your environment:

    - PATH should include $OBERON/bin
    - MANPATH should include $OBERON/man
    - ONS_ROOT should be set to 127.0.0.1:9880

    You might want to add $OBERON/bin to your PATH and
    $OBERON/man to your MANPATH. You find example settings in the
    rc file. You can source rc within /etc/profile or ~/.profile
    or copy its contents.

(4) Start the Oberon Name Server. This is a simple directory service
    that is used by cdbd and its clients later. To start this server
    run $OBERON/bin/start_pons. This must be done each time the machine
    is rebooted.

(5) Start the Compiler Database Daemon. The compiler loads source
    files from the database and stores its results to the database.
    Run the the script $OBERON/bin/start_cdbd to start this daemon.
    This must be done each time when the machine is rebooted.

    NOTE: There's some bug somewhere that makes cdbd crash the first
    time it is started on a new system. If this happens just rerun the
    command above.

    Don't be surprised if oberon.db becomes quite huge over time. Unless
    you delete the file oberon.db it should not be necessary to repeat
    the following steps after a reboot.

(6) Load all library sources into the database maintained by cdbd
    using the utility load_libsources:

       load_libsources

    This needs only to be done once.

(7) Enjoy.

To compile your own programs do the following:

(1) Setup a directory for each project. Definitions should end
    in ``.od'' and modules in ``.om''. The basename of the file
    names should be derived from the module names. Conflicts to
    names of library modules should be avoided.

(2) Check in all source files into the database:

       obci -a $OBERON/var/cdbd/write *.o[dm]

    Whenever sources change, they need to be checked in again.
    It does not harm to check in sources that are already in the
    database.

(3) Build programs by passing the name of your main module to
    obbuild:

       obbuild MyMainModule

    Note that the compiler finds all other modules required within
    the database and compiles them as well if this has not been
    done before. Please note also that the name of the main module 
    is given without its extension (``.od'' or ``.om'').

    Error messages are sent to standard errors. In case of success,
    an executable binary that is named after the main module is stored
    into the current directory.

Please send bug reports and feature requests to
oberon@mathematik.uni-ulm.de.  If the request is purely specific
to the Linux/i386 platform you may as well send the mail to
ehrhardt@mathematik.uni-ulm.de. Sending spams (unsolicited commercial
emails, bulk emails, viruses or other junk) to these addresses is
prohibited.

Christian Ehrhardt and Andreas Borchert
