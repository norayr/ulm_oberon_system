.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-1995 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH mmo 1 "Last change: 6 December 2001" "Release 0.5" "Ulm's Oberon System"
.SH NAME
mmo \- make makefile for Oberon
.SH SYNOPSIS
.B mmo
.in +0.5i
.sp -1
.RB {( + | - ){ a | A | L }}
.RB [ - ( c | C | u )
.IR makefile ]
.RB {( + | - ) l
.IR library }
.RB [ -p
.IR proto ]
.br
.RB { -t
\fItarget\fP | \fB+t\fP \fItarget\fP \fImodule\fP...}
.RI { macro = val }
.RI { file }
.SH DESCRIPTION
.I Mmo
is a general tool for extracting dependency information from Oberon
source files and libraries.
By default, \fImmo\fP generates output in a form acceptable by
GNU \fImake\fP(1) onto standard output.
.PP
Makefiles generated by \fImmo\fP may be customized and updated.
Customization covers addition of own text to the makefile
(e.g. rules for source file printing and installing) and
changes of the parts generated by \fImmo\fP
(e.g. change of \fIoc(1)\fP options).
Makefiles are structured into sections by \fImmo\fP
to allow separation of parts generated by \fImmo\fP and parts
added from other sources.
.PP
Sections are either named and of interest for \fImmo\fP or
unnamed and remain unaffected on updates.
Sections are delimited by comments which start at the beginning of a line.
Named section headers consist of the leading "#" which introduces
the comment and a name and some optional specifications enclosed in braces,
e.g. "# {flags: +a -A -l -P}".
.PP
Makefile updating depends on the various settings found from earlier
\fImmo\fP-runs in the makefile and the options given at the command line.
Option settings at the command line become the defaults for the
next update.
.PP
Options at the command line and in the section named "options"
are introduced either by "+" (representing \fBTRUE\fP or add) or by
"-" (\fBFALSE\fP or delete).
Following options are recognized:
.Op a
Switches whether symbol files are to be archived into \fISYM\fP or not.
\fIoc\fP(1) requires \fISYM\fP to be created first; this could be
easily done by "ar q SYM".
Default is \fBFALSE\fP.
.Op A
If set, it causes objects to be maintained in a library
(default name: \fIlib.a\fP).
Default is \fBFALSE\fP.
.Op l lib
Adds or deletes the given library.
The library name must be equal to one of the directories found in
\fBOBPATH\fP or \fBOBLIB\fP.
The list of libraries is passed to \fIoc\fP(1) and used to
collect library dependencies.
.Op L
If set, it requests all dependencies to the library to be included
in the makefile.
To achieve this, \fBOBPATH\fP, \fBOBLIB\fP and
all libraries specified by +\fBl\fP are considered.
Dependencies enclose those to the symbol files and to the objects
of the libraries.
Default is \fBFALSE\fP.
.Op P
If set, all reference cycles
(e.g. module \fIa\fP imports \fIb\fP and module \fIb\fP imports \fIa\fP)
are printed to standard error.
The main problem of reference cycles is the undefined order of initialization;
so every reference cycle member must not use anything of the other members
during initialization.
Default is \fBFALSE\fP.
.Op t target
Adds or deletes a target which is the result of a ld-run of \fIoc\fP(1).
A target is given by a core of modules (which may be among the
sources or members of the library).
\fIMmo\fP calculates the transitive closure of the core set and
generates the appropriate linkage line.
The target name determines the name of the output file.
The name of the output file may be changed independently from the
target name by editing the makefile (change of \fBT_\fP\fItarget\fP).
On makefile creation the list of targets defaults to those
modules which are not imported by any other modules.
If \fBA\fP is set to \fBTRUE\fP, the list defaults to the empty list.
.PP
Modes of operation include makefile creation and makefile updates
in some variants:
.Mo -c makefile
Creates the given makefile.
Makefile creation depends on a prototype which is a short makefile
consisting of the wanted section headings and some additional rules
like cleanup and source file printing.
In fact, makefile creation works like makefile updates with
different source and target makefile.
The prototype is searched for in the current directory
(\fI.mmo_proto\fP), in the parent directory (\fI../.mmo_proto\fP),
in the home directory, and finally in the library directory
(\fI$OBLIB/mmo_proto\fP).
The list of sources to be considered may be specified at the
command line and defaults to all Oberon sources in the current
working directory.
.Mo -C makefile
Works like \fB-c\fP but requests no prototype to be taken.
Instead, all sections are generated by \fImmo\fP in the
appropriate order.
.Mo -p proto
Allows to specify a prototype for \fB-c\fP.
.Mo -u makefile
Updates the given makefile.
The list of sources may be given at the command line and
defaults to the list given earlier (\fIsrc\fP macro in the
"macros" section).
.PP
"-" may be given as makefile or prototype to cause
standard input or output to be taken.
"mmo -u -" reads a makefile from standard input and prints
the updated version to standard output.
.I Mmo
prints a newly created makefile to standard output if
none of this options has been given (i.e. \fImmo\fP -c -).
.PP
Some macro definitions may be overridden in the command line
(e.g. \fBOC\fP or \fBOCFLAGS\fP).
Macro definitions are given as \fImacroname\fP=\fIvalue\fP.
All remaining arguments are taken as Oberon source files.
.SH DIAGNOSTICS
No output is written to the target makefile in case of errors.
Beside messages printed to standard error, errors are
indicated by an exit code of 1.
.PP
Error messages include:
.Me "mmo: bad options found in makefile: \fIoptions\fP"
Results from errors in the specifying part of the "options" section.
Only boolean option may be given and command line syntax is required.
.Me "mmo: bad reference cycle: \fImodule\fP"
Reference cycles of imports of definitions are impossible to compile.
The given module name is one of the cycle members.
.Me "mmo: syntax error: \fIfilename\fP"
\fIMmo\fP parses the beginning of a source file (module header
and import list) and aborts on syntax errors.
.Me "mmo: unknown section name: \fIsection name\fP"
Named sections with unknown names disappear on updating and
cause this warning to be printed.
.SH FILES
.Tb xmmo_proto
.Tp \&.mmo_proto
prototype for makefile creations
.Tp *.ts
temporary files which are needed by \fImmo\fP rules
.Te
.SH "SEE ALSO"
GNU \fImake(1)\fP, \fIoc(1)\fP
.SH BUGS
The output of \fImmo\fP is not accepted by standard \fImake(1)\fP.
.PP
The \fB+L\fP option increases the time needed by GNU \fImake(1)\fP
significantly.
.\" ---------------------------------------------------------------------------
.\" $Id: mmo.1,v 1.6 2001/12/06 15:20:28 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: mmo.1,v $
.\" Revision 1.6  2001/12/06 15:20:28  borchert
.\" typo fixed
.\"
.\" Revision 1.5  1996/01/04  15:25:49  borchert
.\" typos fixed
.\"
.\" Revision 1.4  1991/05/07  17:15:11  borchert
.\" typo error fixed
.\"
.\" Revision 1.3  91/05/02  16:34:16  borchert
.\" .Op and .Mo macros changed
.\" 
.\" Revision 1.2  91/05/02  16:27:08  borchert
.\" shorter macro names for old [nt]roff
.\" 
.\" Revision 1.1  91/05/02  15:58:27  borchert
.\" Initial revision
.\" 
.\" ---------------------------------------------------------------------------
