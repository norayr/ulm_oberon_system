.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-2005 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH obload 1 "Last change: 5 February 2005" "Release 0.5" "Ulm's Oberon System"
.SH NAME
obload \- load Oberon object from CDB
.SH SYNOPSIS
.B obload
.RB [ -a
.IR auth ]
.RB [ -A
.IR arch ]
.RB { -b
.IR basedir }
.RB [ -i
.IR intensity ]
.RB [ -l
.IR loglevel ]
.RB [ -m ]
.RB [ -o
.IR output ]
.RB [ -O
.IR pattern ]
.RB [ -c | -C ]
.RB [ -D | -M ]
.RB { modname }
.SH DESCRIPTION
.I obload
generates (if non-existing or out-of-date) and loads (if requested)
a persistent object of the Oberon compiler for all given modules
(\fImodname\fP) whose sources must be present in the compiler database
(CDB, see \fIobci(1)\fP).
.LP
Objects generated by the compiler are persistent objects
representing abstract syntax trees (either architecture-independent or
architecture-dependent), or ready-to-run machine code.  Both, definitions
and modules may be translated into abstract syntax trees.
.LP
.I obload
works recursively in a manner comparable to \fImake(1)\fP.
If the target is missing or out-of-date regarding to the
most recent sources found in CDB,
.I obload
tries to rebuild it. If one of the abstract trees representing the
definitions for the modules imported by \fImodname\fP is missing
or out-of-date, it will be regenerated like the primary target.
.LP
Note that compilation options have to be passed to \fIobci(1)\fP
because different sources may require different options.
.LP
Following options are supported:
.TP 8
.SM
.BI \-a " auth"
specifies a file containing a persistent object of type
\fIShards.Lid\fP that is to be used for authorization.
.TP 8
.SM
.BI \-A " arch"
load an object for the architecture \fIarch\fP. Architectures are
to be specified in a syntax as required by \fIArchitectures(3)\fP.
.TP 8
.SM
.BI \-b " basedir"
defines the base path of the compiler data base (CDB). Default is
.IR /pub/cdb/oberon .
Note that any number of base paths may be given. Multiple base
paths are combined through \fITranslucentNames(3)\fP, i.e. results
are written into the last base path, and base paths specified later
on the command line take precedence over those given earlier.
.TP 8
.SM
.BI \-c
store all generated objects into CDB. By default,
architecture-independent abstract syntax trees of modules will
not be stored. Note that the use of this option can be more
time-consuming since re-generation of objects can be in some cases
faster than loading persistent objects from CDB.
.TP 8
.SM
.BI \-C
do not store anything into CDB.
.TP 8
.SM
.BI \-D
load an object containing an abstract syntax tree for
the definition (public interface) of \fImodname\fP (\fBdefault\fP).
.TP 8
.SM
.BI \-i " intensity"
allows to set the intensity level for \fIStorage.Intensity\fP
(see \fIStorage(3)\fP). This allows to fine-tune the balance of
memory usage vs CPU time by the garbage collection. By default,
the intensity is 8. Lower intensity values reduce memory usage
but cause CPU overhead by more frequent garbage collections.
Higher intensity values cause more memory to be used while saving
more CPU time. Please note however, that the address space can
also be a significant limit, i.e. at high intensity values it
is possible that no more address space is found by \fIMemory(3)\fP.
.TP 8
.SM
.BI \-l " loglevel"
requests log information as generated via \fICompilerLogs(3)\fP to
be displayed. This is mainly useful to follow the recursive process
of building. A log level of 0 (default) suppresses any logs. Larger
log levels cause more output to generated.
.TP 8
.SM
.BI \-m
asks to setup performance monitoring by \fISysMonitor(3)\fP.
Statistics are printed to standard output.
.TP 8
.SM
.BI \-M
load an object containing an architecture-independent abstract
syntax tree, or, if an architecture was specified, ready-to-run
machine code of \fImodname\fP.
.TP 8
.SM
.BI \-o " output"
asks the generated persistent object to be stored into \fIoutput\fP.
.TP 8
.SM
.BI \-O " pattern"
asks the requested results and their transitive closure
to be stored in multiple files
whose names are generated from \fIpattern\fP. All characters
within \fIpattern\fP are taken literally with the exception
of two-character sequences starting with ``%'':
.RS 8
.TP 8
.B "%a"
insert the string representing the architecture. ``gen'' is
inserted if it is architecture-independent.
.TP 8
.B "%c"
insert the string representing the architecture class. ``gen'' is
inserted if it is architecture-independent.
.TP 8
.B "%m"
insert the module name.
.TP 8
.B "%t"
insert the type, i.e. ``def'' for public interfaces, and
``mod'' for private implementations.
.TP 8
.B "%%"
insert a single ``%''.
.RE
.SH DIAGNOSTICS
All error messages generated by the compiler are hopefully
self-explanatory. Please do not expect error messages from the given
modules only but the transitive closure of imported modules as they
have possibly not been compiled yet. The layout of error messages is
different (and easier to read) if it goes directly to a tty if a standout
mode is supported. See \fICompilerErrors(3)\fP, \fIListers(3)\fP, and
\fITerminalListers(3)\fP for details.
.SH ENVIRONMENT
Following environment parameters allow to override the builtin
defaults:
.Tb CDB_BASEDIR
.Tp CDB_AUTH
default path of the authorization file.
.Tp CDB_BASEDIR
default path of CDB within the Oberon name space.
.Te
.SH "SEE ALSO"
.Tb CompilerObjects(3)
.Tp obci(1)
check in of Oberon sources into CDB
.Tp Architectures(3)
specification of target architectures
.Tp CompilerErrors(3)
events generated by the compiler
.Tp CompilerLogs(3)
generation of log messages for compiling and loading
.Tp CompilerObjects(3)
general form of persistent objects generated by the compiler
.Tp OberonSymbols(3)
architecture-independent abstract syntax trees for Oberon
.Tp Listers(3)
general interface for lists of compiler error messages
.Tp TerminalListers(3)
implementation of \fIListers(3)\fP using \fITerminals(3)\fP
.Te
.SH EXAMPLE
Following commands check in Oberon sources into the CDB and try
to load them:
.Pg
oberon$ A=/var/cdbd/db/write
oberon$ obci -a $A Hello.o[dm]
oberon$ obload -a $A -A SPARC -M -o Hello.obj Hello
.Pe
This command line, however, does not load the modules \fIHello\fP
depends on. This is possible through the ``-O'' option:
.Pg
oberon$ obload -a $A -A SPARC -M -O %m.obj Hello
.Pe
This transitive closure, however, omits those modules which are
nowhere explicitly imported but still required by the runtime system.
This module list can be retrieved using the ``-r'' option of
\fIgenobrts(1)\fP:
.Pg
oberon$ rtmodules=`$BINDIR/genobrts -r`
oberon$ obload -a $A -A SPARC -M -O %m.obj Hello $rtmodules
.Pe
.\" ---------------------------------------------------------------------------
.\" $Id: obload.1,v 1.5 2005/02/05 18:56:11 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: obload.1,v $
.\" Revision 1.5  2005/02/05 18:56:11  borchert
.\" environment parameters added
.\"
.\" Revision 1.4  2004/09/20 09:31:39  borchert
.\" - multiple module names can be given
.\" - ``-O pattern'' added
.\" - ``-i intensity'', ``-m'' added
.\" - EXAMPLE extended
.\"
.\" Revision 1.3  2004/09/20 08:47:17  borchert
.\" superfluous .TP/.SM pair removed
.\"
.\" Revision 1.2  2001/12/06 15:22:04  borchert
.\" typo fixed
.\"
.\" Revision 1.1  2000/03/29 20:18:45  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
