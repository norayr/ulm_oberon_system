.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-1994 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH RelatedEvents 3 "Last change: 10 July 2003" "Release 0.5" "Ulm's Oberon System"
.SH NAME
RelatedEvents \- relate events to objects
.SH SYNOPSIS
.Pg
TYPE Object = Disciplines.Object;
TYPE Event = POINTER TO EventRec;
TYPE EventRec =
   RECORD
      (Events.EventRec)
      object: Object;
      event: Events.Event;
   END;
.sp 0.3
TYPE Queue = POINTER TO QueueRec;
TYPE QueueRec =
   RECORD
      (Objects.ObjectRec)
      event: Events.Event;
      next: Queue;
   END;
.sp 0.7
VAR null: Object;
.sp 0.7
PROCEDURE GetEventType(object: Object; VAR eventType: Events.EventType);
PROCEDURE Forward(from, to: Object);
PROCEDURE QueueEvents(object: Object);
PROCEDURE Reset(object: Object);
.sp 0.3
PROCEDURE Save(object: Object);
PROCEDURE Restore(object: Object);
.sp 0.3
PROCEDURE GetQueue(object: Object; VAR queue: Queue);
PROCEDURE EventsPending(object: Object) : BOOLEAN;
PROCEDURE AppendQueue(object: Object; queue: Queue);
.sp 0.3
PROCEDURE Raise(object: Object; event: Events.Event);
.Pe
.SH DESCRIPTION
Many events are not to be handled globally
but are to be considered in the context of an abstract
data type.
.I RelatedEvents
implements object centered event handling,
i.e. the handling of events does not primarily depend
on the global event handlers of \fIEvents(3)\fP
but on the object it is related to.
.LP
.I RelatedEvents
supports four reaction types for related events.
Different reactions may be active at the same time.
.I GetEventType
returns an event type for the given object and
causes all events related to \fIobject\fP also to be passed
(in form of an indirect event of type \fIEvent\fP)
to \fIEvents.Raise\fP with this event type.
Initially, the priority of \fIeventType\fP equals
\fIPriorities.liberrors\fP \fB+ 1\fP.
.LP
.I Forward
requests all incoming events of \fIfrom\fP
to be forwarded to \fIto\fP.
.I QueueEvents
puts all events for \fIobject\fP in a queue
which can be examined later by \fIGetQueue\fP.
.I Reset
undoes previous calls of
\fIGetEventType\fP, \fIForward\fP and \fIQueueEvents\fP
and causes all subsequent events of \fIobject\fP
to be processed by \fIEvents(3)\fP.
.LP
.I Save
and
.I Restore
allow to save and restore the reaction state of the given object
and may be nested.
The reaction state includes all settings and the event queue.
\fISave\fP puts like \fIReset\fP the object into the default state.
.LP
.I GetQueue
removes and returns the event queue of \fIobject\fP.
.I EventsPending
returns \fBTRUE\fP
if there are any events in the queue of \fIobject\fP.
\fIGetQueue\fP and
\fIEventsPending\fP allow \fIobject\fP to be \fBNIL\fP.
.I AppendQueue
forwards all events of \fIqueue\fP to \fIobject\fP.
.LP
By default (or if \fIobject\fP equals \fBNIL\fP),
.I Raise
passes \fIevent\fP to \fIEvents.Raise\fP for usual
event handling.
If \fIGetEventType\fP, \fIForward\fP, or \fIQueueEvents\fP
have been called for \fIobject\fP,
object related event handling will take place as
described above.
.LP
The object \fInull\fP acts as a null device
like \fIStreams.null\fP:
It causes all related events and all
operations of \fIRelatedEvents\fP to be ignored.
.LP
\fIRelatedEvents\fP supports \fIForwarders\fP by
creating a backward chain which forwards events from
objects which are depended on to dependants,
i.e. \fIForwarders.Forward\fP causes events
to be forwarded from \fIto\fP to \fIfrom\fP.
This allows to react on events independently from
the knowledge of forward chains created by \fIForwarders\fP.
Note that this backward chain does not lead to
reference cycles due to \fIForward\fP calls which usually
forward events from dependants to objects which
are depended on.
.SH "SEE ALSO"
.Tb Conclusions(3)
.Tp Conclusions(3)
formatted output of event queues
.Tp Events(3)
global event handling
.Tp Forwarders(3)
general forwarding operation
.Tp Priorities(3)
event priority system
.Te
.SH BUGS
\fIForward\fP is not protected against reference cycles.
If \fIForward\fP points into the same direction
as an implicitly created backward link by
\fIForwarders.Forward\fP, then events may be delivered twice.
.\" ---------------------------------------------------------------------------
.\" $Id: RelatedEvents.3,v 1.7 2003/07/10 09:20:32 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: RelatedEvents.3,v $
.\" Revision 1.7  2003/07/10 09:20:32  borchert
.\" typo fixed
.\"
.\" Revision 1.6  1995/03/20 08:47:48  borchert
.\" RelatedEvents supports now Forwarders (but in the reverse direction)
.\"
.\" Revision 1.5  1994/09/12  16:14:35  borchert
.\" Save & Restore added
.\"
.\" Revision 1.4  1994/08/27  14:08:02  borchert
.\" null object added
.\"
.\" Revision 1.3  1994/02/25  10:15:00  borchert
.\" Assign replaced by GetEventType
.\"
.\" Revision 1.2  1992/01/07  07:26:14  borchert
.\" EventsPending added
.\"
.\" Revision 1.1  1991/11/14  08:14:06  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
