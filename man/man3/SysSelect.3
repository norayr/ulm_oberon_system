.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-1995 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH SysSelect 3 "Last change: 25 August 2005" "Release 0.5" "Ulm's Oberon System"
.SH NAME
SysSelect \- synchronous I/O multiplexing
.SH SYNOPSIS
.Pg
TYPE FileDescriptorSet = RECORD (Objects.ObjectRec) END;
VAR emptyset: FileDescriptorSet;
.sp 0.3
PROCEDURE CreateSet(VAR fdset: FileDescriptorSet);
PROCEDURE Incl(VAR fdset: FileDescriptorSet; fd: SysTypes.File);
PROCEDURE Excl(VAR fdset: FileDescriptorSet; fd: SysTypes.File);
PROCEDURE In(fdset: FileDescriptorSet; fd: SysTypes.File) : BOOLEAN;
.sp 0.3
PROCEDURE SelectWithTimeLimit(
             VAR readfds, writefds, exceptfds: FileDescriptorSet;
             timeout: SysTime.TimeVal; VAR ready: INTEGER;
             errors: RelatedEvents.Object;
             retry: BOOLEAN; VAR interrupted: BOOLEAN) : BOOLEAN;
.sp 0.3
PROCEDURE Select(VAR readfds, writefds, exceptfds: FileDescriptorSet;
                 VAR ready: INTEGER;
                 errors: RelatedEvents.Object;
                 retry: BOOLEAN; VAR interrupted: BOOLEAN) : BOOLEAN;
.sp 0.3
PROCEDURE Poll(VAR readfds, writefds, exceptfds: FileDescriptorSet;
               VAR ready: INTEGER;
               errors: RelatedEvents.Object) : BOOLEAN;
.sp 0.3
PROCEDURE InputAvailable(fd: SysTypes.File;
                         errors: RelatedEvents.Object) : BOOLEAN;
.Pe
.SH DESCRIPTION
.I SysSelect
interfaces the \fIselect(2)\fP system call.
This interface is now deprecated. \fISysPoll(3)\fP should be used
instead.
.PP
.I SysSelect
allows to examine sets of file descriptors whether they are
ready for reading or writing or if exceptional conditions are pending.
Further, the process can be blocked until one of the given
file descriptors becomes ready for the intended operation.
.LP
File descriptor sets are completely covered by \fISysSelect\fP
because the size of file descriptor sets is not known in advance
(and may even vary at runtime).
\fICreateSet\fP creates a new set and initializes it to the empty set.
\fIIncl\fP and \fIExcl\fP allow to include and exclude individual members.
\fIIn\fP checks \fIfd\fP to be a member of \fIfdset\fP.
.LP
\fISelectWithTimeLimit\fP
returns either if the time limit expires (\fIready\fP = \fB0\fP) or
if at least one of the file descriptors gets ready
(in this case \fIready\fP equals the number of ready
file descriptors).
\fIPoll\fP works like \fISelectWithTimeLimit\fP with a
time limit of \fB0\fP.
.LP
\fISelect\fP blocks until one of the file descriptors gets ready
(no time limit).
\fIInputAvailable\fP returns \fBTRUE\fP if a subsequent
\fISysIO.Read\fP does not block.
.SH DIAGNOSTICS
System call errors cause \fBFALSE\fP
to be returned and lead to events of \fISysErrors(3)\fP.
The \fIerrors\fP parameter is passed to \fISysErrors.Raise\fP.
.LP
The longtime variants of the system call may be interrupted.
Usually (if \fIretry\fP = \fBFALSE\fP),
this causes the appropriate error event to be raised
(error code \fISysErrors.intr\fP) and the system call to be aborted.
However, if \fIretry\fP is \fBTRUE\fP,
the system call will be repeated until no interrupt occurs.
\fIinterrupt\fP indicates in both cases whether interrupts
occurred or not.
.SH "SEE ALSO"
.Tb UnixFileConditions(3)
.Tp select(2)
underlying system call
.Tp SysErrors(3)
error handling
.Tp SysIO(3)
read and write operations
.Tp SysPoll(3)
newer interface for synchronous I/O multiplexing
.Tp SysSockets(3)
creation and preparation of sockets
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: SysSelect.3,v 1.8 2005/08/25 15:56:35 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: SysSelect.3,v $
.\" Revision 1.8  2005/08/25 15:56:35  borchert
.\" marked as deprecated, SysPoll should be used instead
.\"
.\" Revision 1.7  1996/09/17 07:56:17  borchert
.\" - SelectWithTimeLimit, Select & Poll return BOOLEAN-value
.\" - minor typos fixed
.\"
.\" Revision 1.6  1994/02/12  17:13:23  borchert
.\" InitSet renamed to CreateSet
.\"
.\" Revision 1.5  1992/03/24  09:21:16  borchert
.\" Sockets renamed to SysSockets
.\"
.\" Revision 1.4  1992/03/17  07:35:51  borchert
.\" object-parameter renamed to errors and rearranged
.\"
.\" Revision 1.3  1992/01/15  07:26:48  borchert
.\" retry & interrupted parameters added
.\"
.\" Revision 1.2  1991/11/18  08:19:44  borchert
.\" object parameters for RelatedEvents added
.\"
.\" Revision 1.1  1991/11/12  08:39:03  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
