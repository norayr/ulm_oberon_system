.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-1999 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH Listers 3 "Last change: 29 May 2000" "Release 0.5" "Ulm's Oberon System"
.SH NAME
Listers \- general interface for listers of compilation errors
.SH SYNOPSIS
.Pg
TYPE WriteLineProc =
   PROCEDURE (out: Streams.Stream;
	      line: Streams.Stream;
	      lineNumber, lineNumberWidth: Streams.Count;
	      m1begin, m1end, m2begin, m2end: Streams.Count) : BOOLEAN;
TYPE WriteMsgProc = PROCEDURE (out, msg: Streams.Stream) : BOOLEAN;
TYPE Interface = POINTER TO InterfaceRec;
TYPE InterfaceRec =
   RECORD
      (Objects.ObjectRec)
      writeLine: WriteLineProc;
      writeMsg: WriteMsgProc;
   END;
.sp 0.7
PROCEDURE Init(out: Streams.Stream; if: Interface);
.sp 0.7
PROCEDURE GenListing(out: Streams.Stream; errors: RelatedEvents.Object);
.Pe
.SH DESCRIPTION
.I Listers
processes events of compilation errors (see \fICompilerErrors(3)\fP)
by integrating source excerpts, marking relevant parts of the source,
and printing error messages using a general interface.
.LP
.I Init
ties an interface \fIif\fP to an output stream for the listing
generation. The interface is expected to meet the specification
following:
.Is "\fIout\fP: \fIStreams.Stream\fP"
.If writeLine "; \fIline\fP: \fIStreams.Stream\fP; \fIlineNumber\fP, \fIlineNumberWidth\fP: \fIStreams\fP.\fICount\fP; \fIm1begin\fP, \fIm1end\fP, \fIm2begin\fP, \fIm2end\fP: \fIStreams.Count\fP" "\fBBOOLEAN\fP"
print line number \fIlineNumber\fP with a maximal width of
\fIlineNumberWidth\fP,
print one line of source text from \fIline\fP,
a sub-stream (see \fISubStreams(3)\fP) representing just one line,
and mark the stretches specified by the relative positions
\fB[\fP\fIm1begin\fP, \fIm1end\fP\fB)\fP and
\fB[\fP\fIm2begin\fP, \fIm2end\fP\fB)\fP.
Stretches are to be ignored if their relative positions equal \fB-1\fP.
\fBFALSE\fP is to be returned in case of errors.
.If writeMsg "; \fImsg\fP: \fIStreams.Stream\fP" "\fBBOOLEAN\fP"
copy error message from \fImsg\fP to \fIout\fP. Note that \fIwriteMsg\fP
is free to integrate textual marks within the error message if
this was not done by \fIwriteLine\fP. In this case, the relative
positions passed before to \fIwriteLine\fP must be preserved using
disciplines (see \fIDisciplines(3)\fP) that are attached to the
output stream.
\fBFALSE\fP is to be returned in case of errors.
.Ef
.LP
If \fIInit\fP is not called for an output stream, a default implementation
will be used instead that is not able to mark stretches.
.LP
.I GenListing
extracts all error events that are an extension of
\fICompilerErrors.ErrorEvent\fP from \fIerrors\fP using
\fICompilerErrors.GetSortedErrors\fP and prints them in an
integrated form, using the interface passed to \fIInit\fP previously:
.IP \(bu
Nothing is printed in case of no errors.
.IP \(bu
All source lines referenced by error events will be printed immediately
before the error message.
.IP \(bu
Repeatition of source lines will be avoided in case of multiple errors
that share the same locations.
.IP \(bu
Byte positions will be printed instead if sources cannot be opened
for reading.
.SH DIAGNOSTICS
.I Listers
does not generate any error events itself but error events may
be raised by underlying stream implementations of a source
or output stream.
.SH "SEE ALSO"
.Tb TerminalListers(3)
.Tp CompilerErrors(3)
standardized events for compilation errors
.Tp TerminalListers(3)
implementation of \fIListers(3)\fP that is based upon \fITerminals(3)\fP
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: Listers.3,v 1.1 2000/05/29 08:08:15 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: Listers.3,v $
.\" Revision 1.1  2000/05/29  08:08:15  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
