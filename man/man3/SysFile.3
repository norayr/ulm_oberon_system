.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-2000 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH SysFile 3 "Last change: 11 December 2000" "Release 0.5" "Ulm's Oberon System"
.SH NAME
SysFile \- system calls related to files
.SH SYNOPSIS
.Pg
CONST readAccess = {SysStat.oread};
CONST writeAccess = {SysStat.owrite};
CONST execAccess = {SysStat.oexec};
CONST existence = {};
.sp 0.5
TYPE AccessMode = SET;
.sp 0.5
PROCEDURE Access(filename: ARRAY OF CHAR; amode: AccessMode;
                 errors: RelatedEvents.Object) : BOOLEAN;
PROCEDURE EffectiveAccess(filename: ARRAY OF CHAR;
                          amode: AccessMode;
                          errors: RelatedEvents.Object) : BOOLEAN;
.sp 0.7
PROCEDURE Link(filename1, filename2: ARRAY OF CHAR;
               errors: RelatedEvents.Object) : BOOLEAN;
PROCEDURE Unlink(filename: ARRAY OF CHAR;
                 errors: RelatedEvents.Object) : BOOLEAN;
PROCEDURE Rename(filename1, filename2: ARRAY OF CHAR;
                 errors: RelatedEvents.Object) : BOOLEAN;
.sp 0.7
PROCEDURE SymbolicLink(VAR filename1, filename2: ARRAY OF CHAR;
                       errors: RelatedEvents.Object) : BOOLEAN;
PROCEDURE ReadLink(filename: ARRAY OF CHAR; VAR buf: ARRAY OF CHAR;
                   errors: RelatedEvents.Object) : BOOLEAN;
.sp 0.7
PROCEDURE MakeDir(filename: ARRAY OF CHAR; mode: SET;
                  errors: RelatedEvents.Object) : BOOLEAN;
PROCEDURE RemoveDir(filename: ARRAY OF CHAR;
                    errors: RelatedEvents.Object) : BOOLEAN;
.sp 0.7
PROCEDURE SetFileCreationMask(mask: SET;
                              errors: RelatedEvents.Object) : BOOLEAN;
PROCEDURE GetFileCreationMask(VAR mask: SET;
                              errors: RelatedEvents.Object) : BOOLEAN;
.Pe
.SH DESCRIPTION
.I SysFiles
interfaces system calls which are related to files.
Input- and output operations are covered by \fISysIO(3)\fP.
.LP
.I Access
is mapped to \fIaccess(2)\fP
and checks \fIfilename\fP to be accessible with mode \fIamode\fP
for the real user id of the process.
.LP
Typically, effective and real user id only differ for
processes which have been started as s-bit commands
(s-bit stands for substitute user bit and is part of
the file attributes).
In these cases the effective user id equals the owner
of the command file and the real user id is inherited from
the parent process.
While in all other system calls accesses are checked
against the effective user id,
this system calls allows to check accessibility for
the real user id of the parent process.
.LP
.I EffectiveAccess
works like
.I Access
but checks the accessibility for the calling process
by considering the effective user id.
.LP
.I Link
creates a new directory entry named \fIfilename2\fP
which points to the file referenced by \fIfilename1\fP.
Both file references must belong to the same
file system.
.I Unlink
removes the directory entry named \fIfilename\fP.
The disc space allocated by the referenced file
is reclaimed by the operating system
if \fIfilename\fP was the last reference to the referenced
file.
.I Rename
works for files and directories where both pathnames
reside on the same file system. A new link named \fIfilename2\fP
is created and the old link named \fIfilename1\fP is removed,
just like a combination of \fILink\fP and \fIUnlink\fP that,
however, would not work for directories.
.LP
.I SymbolicLink
creates a new symbolic link named \fIfilename2\fP that
points to \fIfilename1\fP which is not required to exist
and may point to other file systems. Chains of symbolic
links are permitted up to a system-dependent maximum level
of indirection.
.I ReadLink
allows to read out the pathname a symbolic link points to.
.LP
.I MakeDir
creates a new directory with mode \fImode\fP
(see \fISysStat(3)\fP) that is matched against the umask.
.I RemoveDir
allows to remove empty directories.
.LP
.I SetFileCreationMask
and
.I GetFileCreationMask
set/get the umask of the current process. The complement
of the umask is ANDed against the protection mode of
newly created files or directories to yield the effective
protection mode. The umask is inherited to child processes.
.SH DIAGNOSTICS
System call failures lead to events of
.IR SysErrors(3) .
The \fIerrors\fP parameter is passed to \fISysErrors.Raise\fP.
All procedures return
.B FALSE
in error case.
Access test failures of \fIAccess\fP and \fIEffectiveAccess\fP
are interpreted as system call failures.
.SH "SEE ALSO"
.Tb SysErrors(3)
.Tp access(2)
\fIAccess\fP, \fIEffectiveAccess\fP
.Tp link(2)
\fILink\fP
.Tp mkdir(2)
\fIMakeDir\fP
.Tp readlink(2)
\fIReadLink\fP
.Tp rename(2)
\fIRename\fP
.Tp rmdir(2)
\fIRemoveDir\fP
.Tp stat(2)
\fIEffectiveAccess\fP
.Tp symlink(2)
\fISymbolicLink\fP
.Tp umask(2)
\fISetFileCreationMask\fP, \fIGetFileCreationMask\fP
.Tp unlink(2)
\fIUnlink\fP
.Tp SysErrors(3)
handling of failed system calls
.Tp SysIO(3)
opening, accessing and closing a file 
.Tp SysStat(3)
retrieval of file attributes
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: SysFile.3,v 1.7 2000/12/11 22:06:34 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: SysFile.3,v $
.\" Revision 1.7  2000/12/11  22:06:34  borchert
.\" [SG]etFileCreationMask added
.\"
.\" Revision 1.6  2000/11/17  16:05:41  borchert
.\" Rename added
.\"
.\" Revision 1.5  2000/11/16  23:32:42  borchert
.\" MakeDir and RemoveDir added
.\"
.\" Revision 1.4  2000/11/12  13:51:45  borchert
.\" SymbolicLink and ReadLink added
.\"
.\" Revision 1.3  1992/03/17  07:34:55  borchert
.\" object-parameter renamed to errors and rearranged
.\"
.\" Revision 1.2  1991/11/18  08:16:43  borchert
.\" object parameters for RelatedEvents added
.\"
.\" Revision 1.1  1991/11/05  09:27:21  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
