.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-1995 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH Errors 3 "Last change: 10 July 2003" "Release 0.5" "Ulm's Oberon System"
.SH NAME
Errors \- general interface for error handlers
.SH SYNOPSIS
.Pg
CONST debug = 0;
CONST message = 1;
CONST warning = 2;
CONST error = 3;
CONST fatal = 4;
CONST bug = 5;
CONST nkinds = 6;
TYPE Kind = SHORTINT; (* debug..bug *)
VAR kindText: ARRAY nkinds OF ARRAY 12 OF CHAR;
.sp 0.3
TYPE Handler = PROCEDURE (event: Events.Event; kind: Kind);
TYPE HandlerSet = POINTER TO HandlerSetRec;
TYPE HandlerSetRec = RECORD (Disciplines.ObjectRec) END;
.sp 0.3
TYPE WriteProcedure = PROCEDURE (s: Streams.Stream; event: Events.Event);
.sp 0.3
VAR null: HandlerSet; (* empty handler set *)
.sp 0.7
PROCEDURE CreateHandlerSet(VAR hs: HandlerSet);
PROCEDURE InstallHandler(hs: HandlerSet; kind: Kind; handler: Handler);
.sp 0.3
PROCEDURE AssignWriteProcedure(eventType: Events.EventType;
                               write: WriteProcedure);
PROCEDURE Write(s: Streams.Stream; event: Events.Event);
.sp 0.3
PROCEDURE CatchEvent(hs: HandlerSet; kind: Kind; type: Events.EventType);
.Pe
.SH DESCRIPTION
.I Errors
defines a general interface for event-driven error handling.
To allow some flexibility in the sort of reaction,
a classification of events is introduced:
.Tb message
.Tp debug
Intended for events which are convenient for debugging or tracing.
.Tp message
Suitable for notification events.
.Tp warning
Intended for notifications which indicate a problem
or errors which do not lead to failures.
.Tp error
Indicates a failure which allows further processing.
.Tp fatal
Intended for serious failures which should lead
to process termination.
.Tp bug
Suitable for programming errors which are comparable
to runtime faults.
Handlers of bug events are expected to abort execution.
.Te
.LP
A handler set defines a handler for each kind of events.
.I CreateHandlerSet
creates a new handler set and initializes it to the empty set.
By default, all events are ignored (empty handler).
.I InstallHandler
installs a handler for the given class of events for \fIhs\fP.
.LP
Many events contain additional components which contain
interesting information beyond the simple text of the
\fImessage\fP component.
.I AssignWriteProcedure
allows to attach a specific write procedure to an event type.
.I Write
calls either a previously assign write procedure
or, in the default case, copies \fIevent.message\fP to \fIs\fP.
.LP
.I CatchEvent
associates \fIkind\fP with the given event type and
causes the appropiate handler of \fIhs\fP to be called
if \fItype\fP is raised.
.SH "SEE ALSO"
.Tb Conclusions(3)
.Tp Conclusions(3)
defines a standard handler set
.Tp Events(3)
general event handling
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: Errors.3,v 1.3 2003/07/10 09:06:04 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: Errors.3,v $
.\" Revision 1.3  2003/07/10 09:06:04  borchert
.\" typo fixed
.\"
.\" Revision 1.2  1996/09/16 16:19:21  borchert
.\" formatting changed
.\"
.\" Revision 1.1  1991/11/25  09:09:06  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
