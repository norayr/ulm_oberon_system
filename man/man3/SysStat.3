.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-2000 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH SysStat 3 "Last change: 12 November 2000" "Release 0.5" "Ulm's Oberon System"
.SH NAME
SysStat \- examine inode structure
.SH SYNOPSIS
.Pg
CONST type = {16..19};
CONST prot = {23..31};
.sp 0.7
(* file types *)
CONST reg = {16};               (* regular *)
CONST dir = {17};               (* directory *)
CONST chr = {18};               (* character special *)
CONST fifo = {19};              (* fifo *)
CONST blk = {17..18};           (* block special *)
CONST symlink = {16, 18};       (* symbolic link *)
CONST socket = {16, 17};        (* socket *)
CONST door = {16, 17, 19};      (* door *)
.sp 0.7
(* special *)
CONST setuid = 20;              (* set user id on execution *)
CONST setgid = 21;              (* set group id on execution *)
CONST savetext = 22;            (* save swapped text even after use *)
.sp 0.7
(* protection *)
CONST uread = 23;               (* read permission owner *)
CONST uwrite = 24;              (* write permission owner *)
CONST uexec = 25;               (* execute/search permission owner *)
CONST gread = 26;               (* read permission group *)
CONST gwrite = 27;              (* write permission group *)
CONST gexec = 28;               (* execute/search permission group *)
CONST oread = 29;               (* read permission other *)
CONST owrite = 30;              (* write permission other *)
CONST oexec = 31;               (* execute/search permission other *)
.sp 0.7
CONST owner = {23..25};
CONST group = {26..28};
CONST other = {29..31};
CONST read = {23, 26, 29};
CONST write = {24, 27, 30};
CONST exec = {25, 28, 31};
CONST rwx = {23..31};
.sp 0.7
TYPE StatRec =
   RECORD
      device: SysTypes.Device; (* ID of device containing
                                  a directory entry for this file *)
      inode: SysTypes.Inode;   (* inode number *)
      mode: SET;               (* file mode; see mknod(2) *)
      nlinks: INTEGER;         (* number of links *)
      uid: INTEGER;            (* user id of the file's owner *)
      gid: INTEGER;            (* group id of the file's group *)
      rdev: SysTypes.Device;   (* ID of device
                                  this entry is defined only for
                                  character special or block
                                  special files
                               *)
      size: SysTypes.Offset;   (* file size in bytes *)
      atime: SysTypes.Time;    (* time of last access *)
      mtime: SysTypes.Time;    (* time of last data modification *)
      ctime: SysTypes.Time;    (* time of last file status change *)
      blksize: LONGINT;        (* preferred blocksize *)
      blocks: LONGINT;         (* # of blocks allocated *)
   END;
.sp 0.7
PROCEDURE Stat(path: ARRAY OF CHAR; VAR buf: StatRec;
               errors: RelatedEvents.Object) : BOOLEAN;
.sp 0.2
PROCEDURE Lstat(path: ARRAY OF CHAR; VAR buf: StatRec;
                errors: RelatedEvents.Object) : BOOLEAN;
.sp 0.2
PROCEDURE Fstat(fd: SysTypes.File; VAR buf: StatRec;
                errors: RelatedEvents.Object) : BOOLEAN;
.Pe
.SH DESCRIPTION
.IR Stat ,
.IR Lstat ,
and
.I Fstat
interface the \fIstat\fP, \fIlstat\fP, and \fIfstat\fP UNIX system calls.
All return the status information in
.IR buf ,
a record of type
.IR StatRec.
.PP
The protection bits are defined for Oberon in a
convenient manner.
The low-order 2-byte-word of
.I mode
determines the type and protection of the file.
.I type
specifies the mask for the file type and
.I prot
the mask for the protection.
.PP
Possible file types are:
.Tb symlink
.Tp reg
regular file
.Tp dir
directory
.Tp chr
character special
.Tp fifo
named pipe
.Tp blk
block special
.Tp symlink
link
.Tp socket
socket file
.Te
Example: Check \fIstat\fP to represent a directory:
\fIstat.mode\fP * \fISysStat.type\fP = \fISysStat.dir\fP.
.PP
The file protection includes some special bits:
.Tb savetext
.Tp setuid
set user id on execution
.Tp setgid
set group id on execution
.Tp savetext
save swapped text even after use
.Te
and regular protection bits:
\fIuread\fP, \fIuwrite\fP, \fIuexec\fP, \fIgread\fP, \fIgwrite\fP,
\fIgexec\fP, \fIoread\fP, \fIowrite\fP, and \fIoexec\fP.
These bits are given by their bit number.
Example for "rw-r--r--": {\fIuread\fP, \fIuwrite\fP, \fIgread\fP, \fIoread\fP}.
.PP
Additional masks are given for \fIowner\fP, \fIgroup\fP, \fIother\fP,
\fIread\fP, \fIwrite\fP, \fIexec\fP, and \fIrwx\fP.
\fIowner\fP includes all bits dedicated to the owner,
\fIread\fP includes bits for reading (owner, group, and others),
\fIrwx\fP contains all regular protection bits.
Example for "rw-r--r--":
(\fISysStat.read\fP+\fISysStat.write\fP)*\fISysStat.owner\fP
+ \fISysStat.read\fP*(\fISysStat.group\fP+\fISysStat.other\fP).
.SH DIAGNOSTICS
System call failures lead to events of \fISysErrors(3)\fP.
The \fIerrors\fP parameter is passed to \fISysErrors.Raise\fP.
Both procedures return
.B FALSE
in error case.
.SH "SEE ALSO"
.Tb SysTypes(3)
.Tp stat(2)
\fIstat\fP and \fIfstat\fP system call
.Tp SysErrors(3)
handling of system call failures
.Tp SysTypes(3)
types needed for system calls
.Te
.SH BUGS
Some UNIX versions have less file types
(e.g. \fIsymlink\fP and \fIsocket\fP)
and no additional meanings for special bits (i.e. for directories).
.\" ---------------------------------------------------------------------------
.\" $Id: SysStat.3,v 1.1.2.4 2000/11/12 13:13:17 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: SysStat.3,v $
.\" Revision 1.1.2.4  2000/11/12  13:13:17  borchert
.\" - adaptions to Solaris 2.x
.\" - Lstat added
.\"
.\" Revision 1.1.2.3  1992/03/17  07:36:04  borchert
.\" object-parameter renamed to errors and rearranged
.\"
.\" Revision 1.1.2.2  1991/11/18  08:19:51  borchert
.\" object parameters for RelatedEvents added
.\"
.\" Revision 1.1.2.1  1991/01/04  12:29:44  borchert
.\" new branch for Sun 3 version
.\"
.\" Revision 1.1  90/08/31  17:02:22  borchert
.\" Initial revision
.\" 
.\" ---------------------------------------------------------------------------
