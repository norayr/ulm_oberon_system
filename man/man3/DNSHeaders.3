.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-2004 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH DNSHeaders 3 "Last change: 10 March 2004" "Release 0.5" "Ulm's Oberon System"
.SH NAME
DNSHeaders \- DNS header structure according to RFC 1035
.SH SYNOPSIS
.Pg
CONST headerlen = 12;
TYPE Header = ARRAY headerlen OF CHAR;
.sp 0.7
CONST minval = 0; maxval = 65535; (* of header ID and record counts *)
.sp 0.7
CONST query = 0;
CONST response = 1;
TYPE QRValue = SHORTINT; (* query or response *)
.sp 0.7
CONST standardQuery = 0;
CONST inverseQuery = 1;
CONST serverStatusRequest = 2;
CONST update = 5; (* RFC 2136 *)
TYPE OpCode = SHORTINT; (* standardQuery .. *)
.sp 0.7
CONST noError = 0;
CONST formatError = 1;
CONST serverFailure = 2;
CONST nameError = 3;
CONST notImplemented = 4;
CONST refused = 5;
CONST yxDomain = 6; (* RFC 2136 *)
CONST yxRrset = 7; (* RFC 2136 *)
CONST notAuth = 8; (* RFC 2136 *)
CONST notZone = 9; (* RFC 2136 *)
TYPE ResponseCode = SHORTINT; (* noError .. *)
.sp 0.7
PROCEDURE Init(VAR header: Header);
.sp 0.7
PROCEDURE SetID(VAR header: Header; id: INTEGER);
PROCEDURE GetID(header: Header) : INTEGER;
.sp 0.7
PROCEDURE SetQR(VAR header: Header; qr: QRValue);
PROCEDURE GetQR(header: Header) : QRValue;
.sp 0.7
PROCEDURE SetOpCode(VAR header: Header; opcode: OpCode);
PROCEDURE GetOpCode(header: Header) : OpCode;
.sp 0.7
PROCEDURE SetAAFlag(VAR header: Header; aa: BOOLEAN);
PROCEDURE GetAAFlag(header: Header) : BOOLEAN;
.sp 0.7
PROCEDURE SetTCFlag(VAR header: Header; tc: BOOLEAN);
PROCEDURE GetTCFlag(header: Header) : BOOLEAN;
.sp 0.7
PROCEDURE SetRDFlag(VAR header: Header; rd: BOOLEAN);
PROCEDURE GetRDFlag(header: Header) : BOOLEAN;
.sp 0.7
PROCEDURE SetRAFlag(VAR header: Header; ra: BOOLEAN);
PROCEDURE GetRAFlag(header: Header) : BOOLEAN;
.sp 0.7
PROCEDURE SetResponseCode(VAR header: Header; rc: ResponseCode);
PROCEDURE GetResponseCode(header: Header) : ResponseCode;
.sp 0.7
PROCEDURE SetQDCount(VAR header: Header; qdcount: INTEGER);
PROCEDURE GetQDCount(header: Header) : INTEGER;
.sp 0.7
PROCEDURE SetANCount(VAR header: Header; ancount: INTEGER);
PROCEDURE GetANCount(header: Header) : INTEGER;
.sp 0.7
PROCEDURE SetNSCount(VAR header: Header; nscount: INTEGER);
PROCEDURE GetNSCount(header: Header) : INTEGER;
.sp 0.7
PROCEDURE SetARCount(VAR header: Header; arcount: INTEGER);
PROCEDURE GetARCount(header: Header) : INTEGER;
.Pe
.SH DESCRIPTION
.I DNSHeaders
supports DNS header structures according to RFC 1035, section 4.1.1.
DNS headers are at the beginning of each DNS packet and consist
of \fIheaderlen\fP bytes.
.PP
Headers of type \fIHeader\fP can be read or written directly from
or to streams. However, to avoid alignment pitfalls, \fIStreams.ReadPart\fP
and \fIStreams.WritePart\fP with an explicitly given length of \fIheaderlen\fP
are to be used instead of \fIStreams.Read\fP and \fIStreams.Write\fP.
.PP
.I Init
initializes a header with default values (all zeroes).
.PP
.I SetID
and
.I GetID
set or retrieve a 16 bit identifier that is used to match
responses to outstanding queries.
.PP
.I SetQR
and
.I GetQR
set or retrieve a value of type \fIQRValue\fP that specifies the
message type. Possible values are \fIquery\fP and \fIresponse\fP.
.PP
.I SetOpCode
and
.I GetOpCode
set or retrieve the opcode of a query (of type \fIOpCode\fP).
Possible values are \fIstandardQuery\fP, \fIinverseQuery\fP,
\fIserverStatusRequest\fP, and \fIupdate\fP (RFC 2136).
.PP
.I SetAAFlag
and
.I GetAAFlag
set or retrieve a flag that is set to \fBTRUE\fP if a
response comes from an authoritative source.
.PP
.I SetTCFlag
and
.I GetTCFlag
set or retrieve a flag that tells whether a response packet
was truncated or not.
.PP
.I SetRDFlag
and
.I GetRDFlag
set or retrieve a flag for query packets that is to be
set to \fBTRUE\fP if recursion is desired.
.PP
.I SetRAFlag
and
.I GetRAFlag
set or retrieve a flag for response packets that tells
whether recursive queries are supported or not.
.PP
.I SetResponseCode
and
.I GetResponseCode
set or retrieve the response code of type \fIResponseCode\fP.
Possible values are \fInoError\fP, \fIformatError\fP, \fIserverFailure\fP,
\fInameError\fP, \fInotImplemented\fP, \fIrefused\fP, and the response
codes of extensions like that of RFC 2136.
.PP
The number of records in various sections can be set or retrieved
using following procedures:
.Tb "SetQDCount, GetQDCount"
.Tp "SetQDCount, GetQDCount"
query records section
.Tp "SetANCount, SetANCount"
answer records section
.Tp "SetNSCount, GetNSCount"
authority records section
.Tp "SetARCount, GetARCount"
additional records section
.Te
.SH "SEE ALSO"
.Tb DNSRecords(3)
.Tp DNSRecords(3)
construction and retrieval of DNS records.
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: DNSHeaders.3,v 1.1 2004/03/10 07:27:39 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: DNSHeaders.3,v $
.\" Revision 1.1  2004/03/10 07:27:39  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
