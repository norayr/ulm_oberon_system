.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-2005 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH SysStackTraces 3 "Last change: 25 August 2005" "Release 0.5" "Ulm's Oberon System"
.SH NAME
SysStackTraces \- print stack traces
.SH SYNOPSIS
.Pg
PROCEDURE PrintBackTrace(s: Streams.Stream; cr: Coroutines.Coroutine);
PROCEDURE PrintAllBackTraces(s: Streams.Stream);
.Pe
.SH DESCRIPTION
.I SysStackTraces
allows to print out simple backtraces of invocation chains of coroutines.
This is mainly useful on platforms where no helpful debugger is available.
.PP
Each line in a backtrace specifies the contents of two major registers
(frame pointer and program counter) in hex and the qualified name of
the procedure.
.PP
.I PrintBackTrace
prints the backtrace for \fIcr\fP onto \fIs\fP.
The results are undefined if \fIcr\fP is the current coroutine.
.PP
.I PrintAllBackTraces
prints the backtraces of all coroutines onto \fIs\fP. Multiple
back traces are separated by empty lines.
.SH EXAMPLE
Following module, if imported, provides a backtrace of the
offending coroutine in case of a runtime error or similar
event that caused \fIProcess.Abort\fP to be called:
.Pg
MODULE CrashHandler;

   IMPORT Coroutines, Errors, Events, Process, Streams, SysStackTraces,
      SYSTEM, Write;

   PROCEDURE PrintBackTrace(VAR cr: Coroutines.Coroutine);
   BEGIN
      SYSTEM.CRSPAWN(cr);
      SysStackTraces.PrintBackTrace(Streams.stderr, Coroutines.source);
      SYSTEM.CRSWITCH(Coroutines.source);
   END PrintBackTrace;

   PROCEDURE AbortHandler(event: Events.Event);
      VAR
         cr: Coroutines.Coroutine;
   BEGIN
      Write.StringS(Streams.stderr, Process.name);
      Write.StringS(Streams.stderr, ": ");
      Errors.Write(Streams.stderr, event);
      Write.LnS(Streams.stderr);
      Write.LineS(Streams.stderr, "backtrace of current coroutine:");
      PrintBackTrace(cr); SYSTEM.CRSWITCH(cr);
   END AbortHandler;

BEGIN
   Events.Handler(Process.abort, AbortHandler);
END CrashHandler.
.Pe
Please note that \fISysStackTraces.PrintBackTrace\fP creates
a new coroutine for printing the backtrace as a coroutine shall not
print its own backtrace.
.SH "SEE ALSO"
.Tb SysModules(3)
.Tp SysModules(3)
is used to map program counters into module / procedure combinations
.Tp SysStacks(3)
allows the examination of coroutine stacks
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: SysStackTraces.3,v 1.1 2005/08/25 15:01:16 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: SysStackTraces.3,v $
.\" Revision 1.1  2005/08/25 15:01:16  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
