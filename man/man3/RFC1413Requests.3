.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-2005 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH RFC1413Requests 3 "Last change: 24 January 2005" "Release 0.5" "Ulm's Oberon System"
.SH NAME
RFC1413Requests \- request identification from RFC 1413 servers
.SH SYNOPSIS
.Pg
CONST connectFailed = 0;
CONST sendFailed = 1;
CONST gotNoResponse = 2;
CONST invalidResponse = 3;
CONST invalidPort = 4;
CONST noUser = 5;
CONST unknownError = 6;
CONST hiddenUser = 7;
CONST otherError = 8;
CONST timeoutConnect = 9;
CONST timeoutResponse = 10;
CONST errors = 11;
TYPE ErrorCode = SHORTINT;
TYPE ErrorEvent = POINTER TO ErrorEventRec;
TYPE ErrorEventRec =
   RECORD
      (Events.EventRec)
      errorcode: ErrorCode;
      foreignAddress: IPv4Addresses.SocketAddress;
      localAddress: IPv4Addresses.SocketAddress;
      response: ARRAY 512 OF CHAR;
   END;
VAR error: Events.EventType;
VAR errormsg: ARRAY errors OF Events.Message;
.sp 0.7
PROCEDURE GetIdent(foreignAddress: IPv4Addresses.SocketAddress;
                   localAddress: IPv4Addresses.SocketAddress;
                   timelimit: Times.Time;
                   VAR opsys, charset: ARRAY OF CHAR;
                   VAR ident: ARRAY OF CHAR;
                   VAR errors: RelatedEvents.Object) : BOOLEAN;
.Pe
.SH DESCRIPTION
.I RFC1413Requests
support client queries to RFC 1413 servers. A query specifies
the foreign and local port number of an IPv4 TCP connection and
is directed to port 113 at the IP address of the foreign server.
If supported by the foreign server and successful, an identification
is returned, consisting of an operating system, character set, and
a user identification.
.LP
.I GetIdent
sends a query to the host specified in \fIforeignAddress\fP
using the port numbers out of \fIforeignAddress\fP and
\fIlocalAddress\fP. The \fItimelimit\fP parameter specifies
how long \fIGetIdent\fP will wait until it gives up. \fBNIL\fP
may be passed to \fItimelimit\fP. In this case, a default value
of 5 seconds is taken.
.LP
A successful response from an RFC 1413 server includes three
fields: the specification of an operating system (e.g. ``UNIX''),
a character set (e.g. ``US-ASCII''), and an identification string
which is represented in the character set specified by \fIcharset\fP.
.LP
In case of failures, \fBFALSE\fP is returned, and error events
are made available through \fIerrors\fP.
.SH DIAGNOSTICS
Following error codes are generated by \fIRFC1413Requests\fP
beside the error events returned by the underlying modules:
.Tb timeoutResponse
.Tp connectFailed
The connect operation to the remote RFC 1413 server failed.
Most likely no RFC 1413 server is running on the given server.
.Tp sendFailed
A connection was successful but it was impossible to send a request.
.Tp gotNoResponse
A request was successfully sent but no response was received.
.Tp invalidResponse
A request was successfully sent but the response did not conform
to the response syntax specified in RFC 1413.
.Tp invalidPort
The remote RFC 1413 server complained that
either the local or foreign port was improperly specified.
.Tp noUser
The remote RFC 1413 server complained that
the connection specified by the port pair is not currently
in use or currently not owned by an identifiable entity.
.Tp unknownError
The remote RFC 1413 returned another unspecified error.
.Tp hiddenUser
The remote RFC 1413 server complained that
the server was able to identify the user of this
port, but the information was not returned at the
request of the user.
.Tp otherError
The remote RFC 1413 returned a non-standard error message.
.Tp timeoutConnect
A timeout occurred during the connection phase. This is most
likely due to a firewall that dropped the SYN packet.
.Tp timeoutResponse
A timeout occurred while waiting for the response.
.Te
.SH EXAMPLE
Following code snippets assume following variables:
.Pg
VAR
   errors: RelatedEvents.Object;
   port: INTEGER;
   socket: IPv4TCPSockets.Socket;
   s: Streams.Stream;
   local, peer: IPv4Addresses.SocketAddress;
   opsys, charset, ident: ARRAY 65 OF CHAR;
.Pe
The listening socket is set up as usual. Note that
we retrieve the local address by \fIIPv4TCPSockets.GetName\fP:
.Pg
NEW(errors); RelatedEvents.QueueEvents(errors);
IF ~IPv4TCPSockets.Listen(socket, port, errors) OR
      ~IPv4TCPSockets.GetName(socket, local, errors) THEN
   Conclusions.Conclude(errors, Errors.fatal, "");
END;
.Pe
In case of an incoming connection we can attempt to retrieve
the RFC 1413 information:
.Pg
IF IPv4TCPSockets.Accept(socket, s, Streams.onebuf, peer) THEN
   IF RFC1413Requests.GetIdent(peer, local, NIL,
	 opsys, charset, ident, errors) THEN
      (* got RFC 1413 identification *)
   ELSE
      (* unable to retrieve RFC 1413 identification *)
   END;
   (* ... *)
END;
.Pe
.SH "SEE ALSO"
.Tb IPv4TCPSockets
.Tp IPv4Addresses
address types for IPv4 sockets.
.Tp IPv4TCPSockets
interfaces IPv4 TCP sockets.
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: RFC1413Requests.3,v 1.1 2005/01/24 10:06:42 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: RFC1413Requests.3,v $
.\" Revision 1.1  2005/01/24 10:06:42  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
