.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-2001 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH PrioritySchedulers 3 "Last change: 21 May 2001" "Release 0.5" "Ulm's Oberon System"
.SH NAME
PrioritySchedulers \- scheduler with priorities
.SH SYNOPSIS
.Pg
TYPE TaskGroup = POINTER TO TaskGroupRec;
TYPE TaskGroupRec = RECORD (Schedulers.TaskGroupRec) END;
TYPE Task = POINTER TO TaskRec;
TYPE TaskRec = RECORD (Schedulers.TaskRec) END;
TYPE Priority = INTEGER;
.sp 0.7
PROCEDURE CreateTaskGroup(VAR tg: Tasks.TaskGroup);
.sp 0.7
PROCEDURE SetPriority(task: Task; priority: Priority);
PROCEDURE GetPriority(task: Task; VAR priority: Priority);
.Pe
.SH DESCRIPTION
.I PrioritySchedulers
provides a scheduler on base of \fISchedulers(3)\fP that
supports priorities.
.LP
Each scheduler created by \fICreateTaskGroup\fP
maintains an internal integer-valued clock that starts from 0 and
is incremented by 1 on each dispatch. The internal priority of
a task maintained by \fIPrioritySchedulers\fP is defined to
be the sum of its external priority (set by \fISetPriority\fP,
is 0 by default) and the difference between the current time
and the time the task was executed last.
.LP
The scheduler dispatches
always the task that is ready for execution and has the top-most
internal priority. In case of a tie, the higher external priority
wins.
.LP
If all tasks belonging to a task group share the same priority,
the scheduler behaves identical to \fIRoundRobin(3)\fP.
.LP
.I CreateTaskGroup
creates a task group that is governed by \fISchedulers(3)\fP and
\fIPrioritySchedulers\fP.
.LP
.I SetPriority
allows to change the priority of \fItask\fP.
The current priority of a task maintained by \fIPrioritySchedulers\fP
may be retrieved using \fIGetPriority\fP.
.SH DIAGNOSTICS
.I PrioritySchedulers
does not generate any error events.
.SH "SEE ALSO"
.Tb PriorityJobs(3)
.Tp PriorityJobs(3)
variant of \fIJobs(3)\fP that is based upon \fIPrioritySchedulers\fP
.Tp RoundRobin(3)
simple round robin scheduler without priorities
.Tp Schedulers(3)
framework for simple schedulers
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: PrioritySchedulers.3,v 1.1 2001/05/21 16:17:11 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: PrioritySchedulers.3,v $
.\" Revision 1.1  2001/05/21 16:17:11  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
