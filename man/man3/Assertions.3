.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-1995 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH Assertions 3 "Last change: 10 July 2003" "Release 0.5" "Ulm's Oberon System"
.SH NAME
Assertions \- event handling for failed assertions
.SH SYNOPSIS
.Pg
TYPE Identifier = ARRAY 32 OF CHAR;
TYPE Event = POINTER TO EventRec;
TYPE EventRec =
   RECORD
      (Events.EventRec)
      object: RelatedEvents.Object;
      module: Identifier;
      proc: Identifier;
   END;
TYPE EventType = POINTER TO EventTypeRec;
TYPE EventTypeRec = RECORD (Events.EventTypeRec) END;
.sp 0.7
VAR failedAssertion: Events.EventType;
.sp 0.7
PROCEDURE Define(VAR type: Events.EventType; module: ARRAY OF CHAR);
.sp 0.3
PROCEDURE Raise(object: RelatedEvents.Object;
                type: Events.EventType;
                proc: ARRAY OF CHAR;
                text: ARRAY OF CHAR);
.Pe
.SH DESCRIPTION
.I Assertions
generates events for failed assertions.
These events are intended for programming errors
either in the library or the calling module.
.LP
.I Define
creates an event type for the given module and
should be called during initialization time.
Initially, the priority is set to \fIPriorities.assertions\fP.
.LP
.I Raise
raises \fIfailedAssertion\fP with priority \fIPriority.assertions\fP.
Further, an event of the given type is passed to \fIRelatedEvents\fP.
Both events contain all paramters of \fIRaise\fP and the module
identifier which has been passed to \fIDefine\fP.
By default, \fIfailedAssertion\fP is ignored.
.SH "SEE ALSO"
.Tb RelatedEvents(3)
.Tp Events(3)
error handling if \fIobject\fP = \fBNIL\fP
.Tp RelatedEvents(3)
error handling if \fIobject\fP # \fBNIL\fP
.Te
.SH BUGS
\fIAssertions\fP is now obsolete due to new standard procedure
\fBASSERT\fP of the Oberon programming language.
Therefore it is recommended to replace constructions like
.Pg
IF (* failure detected? *) THEN
   Assertions.Raise(...);
END;
.Pe
by
.Pg
ASSERT( ~(* failure detected? *) );
.Pe
\fBASSERT\fP calls in case of failures
\fIRTErrors.FailedAssertion\fP which, in turn,
raises an event of the type \fIRTErrors.error\fP[\fIRTErrors.assertion\fP]
(see \fIRTErrors(3)\fP).
.\" ---------------------------------------------------------------------------
.\" $Id: Assertions.3,v 1.3 2003/07/10 09:05:27 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: Assertions.3,v $
.\" Revision 1.3  2003/07/10 09:05:27  borchert
.\" typo fixed
.\"
.\" Revision 1.2  1996/09/16 16:17:02  borchert
.\" declared as being obsolete (due to standard procedure ASSERT)
.\"
.\" Revision 1.1  1991/11/22  09:13:23  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
