.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-1996 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH Times 3 "Last change: 13 September 1996" "Release 0.5" "Ulm's Oberon System"
.SH NAME
Times \- reference scale for time measuring systems
.SH SYNOPSIS
.Pg
CONST relative = Scales.relative;
CONST absolute = Scales.absolute;
TYPE Time = POINTER TO TimeRec;
TYPE TimeRec = RECORD (Scales.MeasureRec) END;
.sp 0.3
TYPE TimeValueRec =
   RECORD
      (Objects.ObjectRec)
      epoch: Scales.Value;
      second: Scales.Value;
      usec: Scales.Value; 
   END;
.sp 0.3
VAR scale: Scales.Scale; (* reference scale *)
VAR family: Scales.Family; (* family of time scales *)
.sp 0.7
PROCEDURE Create(VAR time: Time; type: SHORTINT);
PROCEDURE CreateAndSet(VAR time: Time; type: SHORTINT;
                       epoch, second, usec: Scales.Value);
PROCEDURE SetValue(time: Time; value: TimeValueRec);
PROCEDURE GetValue(time: Time; VAR value: TimeValueRec);
.Pe
.SH DESCRIPTION
.I Times
is a reference scale implementation for time measuring systems.
.I Times
is based upon \fIScales(3)\fP, \fIOperations(3)\fP and
\fIPersistentObjects(3)\fP.
Its main use is to allow independence from a particular
time representation while arithmetic and other operations are still possible.
.LP
.I Time
serves as common base type of all time representations.
While the measure type of \fITimes\fP is a non-exported extension of \fITime\fP
the representation itself is exported as \fITimeValueRec\fP.
Absolute time measures are represented like relative measures but are
to be interpreted to be relative to Jan. 1, 1970, 0:00 GMT.
.LP
Measures of the reference time are given in non-negative
seconds and microseconds.
Since this covers only about 68 years,
an epoch has been added to allow larger time ranges.
Epoches have a length of \fBMAX\fP(\fIScales.Value\fP) + 1 seconds.
Negative epoches represent times before 1970 (in case of absolute measures)
or earlier times (in case of relative measures).
.LP
The variables \fIscale\fP and \fIfamily\fP constitute
the reference scale and the associated family.
The units of \fIscale\fP are "epoch", "second" and "usec".
They correspond to the components of \fITimeValueRec\fP.
.LP
\fICreate\fP creates and initializes a measure of the reference scale.
\fICreateAndSet\fP creates and initializes \fItime\fP
to the time value specified by
\fIepoch\fP, \fIsecond\fP and \fIusec\fP.
.LP
\fISetValue\fP and \fIGetValue\fP allow to access time measures
which belong to \fIfamily\fP but not necessarily to \fIscale\fP.
\fISetValue\fP normalizes \fIvalue\fP
in case of negative values of \fIsecond\fP or \fIusec\fP.
.SH "SEE ALSO"
.Tb PersistentObjects(3)
.Tp Clocks(3)
general interface for clocks
.Tp Operations(3)
operations for time measures
.Tp PersistentObjects(3)
interface for persistent objects
.Tp Scales(3)
general management of measure systems and various error checks
.Tp TimeConditions(3)
conditions which allow to wait for a given time
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: Times.3,v 1.6 1996/09/13 08:25:16 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: Times.3,v $
.\" Revision 1.6  1996/09/13  08:25:16  borchert
.\" better style and a more precise beginning date of the current epoch
.\"
.\" Revision 1.5  1994/02/12  17:10:38  borchert
.\" Init & InitAndSet renamed to Create & CreateAndSet
.\"
.\" Revision 1.4  1992/04/22  10:37:27  borchert
.\" decade changed to epoch
.\"
.\" Revision 1.3  1992/01/13  08:09:52  borchert
.\" Init changed
.\" InitAndSet added
.\" references to Clocks and TimeConditions added
.\"
.\" Revision 1.2  1992/01/09  11:03:44  borchert
.\" decade changed to epoch
.\"
.\" Revision 1.1  1992/01/02  10:53:27  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
