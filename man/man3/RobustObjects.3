.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-1995 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH RobustObjects 3 "Last change: 15 February 2002" "Release 0.5" "Ulm's Oberon System"
.SH NAME
RobustObjects \- proxy objects which survive their original objects
.SH SYNOPSIS
.Pg
CONST typeGuardFailure = 0;
CONST notARobustObject = 1;
CONST errors = 2;
.sp 0.3
TYPE ErrorCode = SHORTINT;
TYPE ErrorEvent = POINTER TO ErrorEventRec;
TYPE ErrorEventRec =
   RECORD
      (Events.EventRec)
      errorcode: ErrorCode;
   END;
.sp 0.3
VAR error: Events.EventType;
VAR errormsg: ARRAY errors OF Events.Message;
.sp 0.7
PROCEDURE Export(object: Services.Object; status: Names.Status;
                 path: ARRAY OF CHAR; auth: Shards.Lid;
                 errors: RelatedEvents.Object) : BOOLEAN;
PROCEDURE ExportR(object: Services.Object; status: Names.Status;
                  root: Names.Node; path: ARRAY OF CHAR;
                  auth: Shards.Lid; errors: RelatedEvents.Object) : BOOLEAN;
.sp 0.7
PROCEDURE Import(VAR object: Services.Object; path: ARRAY OF CHAR;
                 auth: Shards.Lid; errors: RelatedEvents.Object) : BOOLEAN;
PROCEDURE ImportR(VAR object: Services.Object;
                  root: Names.Node; path: ARRAY OF CHAR;
                  auth: Shards.Lid; errors: RelatedEvents.Object) : BOOLEAN;
PROCEDURE GuardedImportR(VAR object: Services.Object; guard: Services.Type;
                         root: Names.Node; path: ARRAY OF CHAR;
                         auth: Shards.Lid;
                         errors: RelatedEvents.Object) : BOOLEAN;
PROCEDURE GuardedImport(VAR object: Services.Object; guard: Services.Type;
                        path: ARRAY OF CHAR; auth: Shards.Lid;
                        errors: RelatedEvents.Object) : BOOLEAN;
.Pe
.SH DESCRIPTION
By default, proxy objects of \fIRemoteObjects(3)\fP terminate if the
connection to their original object breaks down, or if the other
side terminates.
.I RobustObjects
offers a mechanism (based on \fINames(3)\fP,
\fIPathConditions(3)\fP and some extension features of \fIRemoteObjects(3)\fP)
which allows to suspend the proxy object (instead of terminating it)
in such cases until the original object is accessible again
by the name service (see \fINames(3)\fP).
.PP
This mechanism requires the support of both sides:
.IP \(bu
The exporting side has to declare its object as a ``robust object''
by calling either \fIExport\fP or \fIExportR\fP with an absolute
path which is also accessible by other processes.
.IP \(bu
The importing side should import the object by \fIImport\fP
or \fIImportR\fP to take advantage of the recovery mechanism
of \fIRobustObjects\fP with usually the same path as given
by \fIExport\fP or \fIExportR\fP on the other side.
Alternatively, \fIGuardedImport\fP or \fIGuardedImportR\fP
may be used to be safe against type guard failures.
.PP
The paths are interpreted as described by \fIPathConditions(3)\fP
and taken relatively to \fIroot\fP (if \fIExportR\fP, \fIImportR\fP,
or \fIGuardedImportR\fP is used).
The authorization lid \fIauth\fP is used to access all components
of the parts and passed to \fIPathConditions(3)\fP.
\fIExport\fP and \fIExportR\fP pass \fIstatus\fP
(just \fINames.examine\fP and \fINames.change\fP are
to be given if non-\fBNIL\fP)
to the equally named parameter of \fINames.CreateNode\fP.
Note that all operations block until the whole path
becomes accessible (see \fIPathConditions(3)\fP).
.PP
The suspension and reanimation
of proxy objects is signalled by \fIResources(3)\fP:
\fIResources.communicationStopped\fP and
\fIResources.communicationResumed\fP.
No operations are processed while the proxy object is suspended.
The proxy object terminates
if the recovery mechanism fails due to fatal errors.
.PP
Note that ``robust objects'' may be freely exported and
imported by using \fIRemoteObjects(3)\fP directly.
But they get their special property only if \fIImport\fP,
\fIImportR\fP, \fIGuardedImport\fP, or \fIGuardedImportR\fP
have been called on the exporting side
and \fIExport\fP or \fIExportR\fP on the importing side.
.SH DIAGNOSTICS
.I RobustObjects
relates error events to the \fIerror\fP
parameters, and, in case of recovery problems, to the proxy object.
Following error events may be generated by \fIRobustObjects\fP itself:
.Tb typeGuardFailure
.Tp typeGuardFailure
This error event is raised by \fIGuardedImport\fP and \fIGuardedImportR\fP
if the given type guard fails.
.Tp notARobustObject
All import operations of \fIRobustObjects\fP will fail if
the object has not been exported by \fIExport\fP or \fIExportR\fP
and generate this error event instead.
.Te
.SH "SEE ALSO"
.Tb PathConditions(3)
.Tp PathConditions(3)
conditions which allow to wait until a path becomes valid
.Tp Names(3)
name hierachies of objects which may be shared on
the base of name servers
.Tp RemoteObjects(3)
access of remote objects and interface for recovery mechanisms
.Te
.SH BUGS
It is theoretically possible that on recovery an object is imported
which was already imported before.
In this case there will be two proxy objects pointing to the
same original object.
This problem can be avoided by the exporting side if it does
not make the original object available before
\fIExport\fP or \fIExportR\fP is called.
.PP
Typing errors in path names may cause all operations to
hang infinitively.
.\" ---------------------------------------------------------------------------
.\" $Id: RobustObjects.3,v 1.3 2002/02/15 05:34:31 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: RobustObjects.3,v $
.\" Revision 1.3  2002/02/15 05:34:31  borchert
.\" typos fixed
.\"
.\" Revision 1.2  1996/11/14 08:13:16  borchert
.\" - LongLivingObjects renamed to RobustObjects
.\" - error events and guarded imports added
.\"
.\" Revision 1.1  1995/12/30  21:09:16  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
