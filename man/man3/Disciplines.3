.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-1995 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH Disciplines 3 "Last change: 16 September 1996" "Release 0.5" "Ulm's Oberon System"
.SH NAME
Disciplines \- attach additional data structures to abstract datatypes
.SH SYNOPSIS
.Pg
TYPE Identifier = LONGINT;
.sp 0.3
TYPE Discipline = POINTER TO DisciplineRec;
TYPE DisciplineRec =
   RECORD
      (Objects.ObjectRec)
      id: Identifier;
   END;
.sp 0.3
TYPE Object = POINTER TO ObjectRec;
TYPE ObjectRec =
   RECORD
      (Objects.ObjectRec)
   END;
.sp 0.7
PROCEDURE Unique() : Identifier;
PROCEDURE Add(object: Object; discipline: Discipline);
PROCEDURE Remove(object: Object; id: Identifier);
PROCEDURE Seek(object: Object; id: Identifier;
               VAR discipline: Discipline) : BOOLEAN;
.Pe
.SH DESCRIPTION
.I Disciplines
allows to attach additional data structures to 
abstract datatypes like \fIStreams\fP.
These added data structures permit to
parametrize operations and thus to define disciplines.
.PP
Every module which implements a discipline should
call \fIUnique\fP during its initialization.
The returned identifier is needed later to locate
the data structures contributed by a specific module.
.PP
.I Adds
attaches \fIdiscipline\fP to \fIobject\fP.
The identifier is given by the \fIid\fP component of
\fIdiscipline\fP.
Adding a discipline with the same identifier twice
to the same object causes the discipline to be replaced.
One discipline may be attached to any number of objects.
.PP
.I Remove
removes the discipline with the given \fIid\fP from
\fIobject\fP, if it exists.
.PP
.I Seek
seeks for a discipline with the given \fIid\fP
and returns it in \fIdiscipline\fP, if it exists.
Otherwise, \fBFALSE\fP is returned.
.SH EXAMPLE
\fIStreams.Stream\fP is an extension of \fIDisciplines.Object\fP
which allows to attach parameters to streams:
.Pg
   TYPE
      LineTermDiscipline = POINTER TO LineTermDisciplineRec;
      LineTermDisciplineRec =
	 RECORD
	    (Disciplines.DisciplineRec)
	    lineterm: CHAR;
	 END;

   VAR linetermid: Disciplines.Identifier;

   PROCEDURE SetLineTerminator(s: Streams.Stream; lineterm: CHAR);
      VAR
	 disc: LineTermDiscipline;
   BEGIN
      NEW(disc); disc.id := linetermid; disc.lineterm := lineterm;
      Disciplines.Add(s, disc);
   END SetLineTerminator;

   PROCEDURE WriteLn(s: Streams.Stream) : BOOLEAN;
      VAR
	 disc: LineTermDiscipline;
   BEGIN
      IF Disciplines.Seek(s, linetermid, disc) THEN
	 RETURN Streams.WriteByte(s, disc.lineterm)
      ELSE
	 (* take default value *)
	 RETURN Streams.WriteByte(s, ASCII.nl)
      END;
   END WriteLn;

BEGIN (* initialization *)
   linetermid := Disciplines.Unique();
   (* ... *)
.Pe
.SH "SEE ALSO"
.Tb PersistentDisciplines(3)
.Tp PersistentDisciplines(3)
support of persistent disciplines
.Tp Resources(3)
state changes of objects
.Tp Services(3)
major extension of \fIDisciplines.Object\fP
.Tp StreamDisciplines(3)
example for a public discipline
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: Disciplines.3,v 1.5 1996/09/16 16:18:54 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: Disciplines.3,v $
.\" Revision 1.5  1996/09/16  16:18:54  borchert
.\" SEE ALSO section extended
.\"
.\" Revision 1.4  1994/09/08  14:30:55  borchert
.\" hint added that disciplines may be added to any number of objects
.\"
.\" Revision 1.3  1993/04/06  12:41:07  borchert
.\" error in basetype of example fixed
.\"
.\" Revision 1.2  1991/06/18  14:56:33  borchert
.\" typo errors fixed
.\"
.\" Revision 1.1  91/06/18  14:44:52  borchert
.\" Initial revision
.\" 
.\" ---------------------------------------------------------------------------
