.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-1995 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH Conclusions 3 "Last change: 16 September 1996" "Release 0.5" "Ulm's Oberon System"
.SH NAME
Conclusions \- convert errors and events into conclusions
.SH SYNOPSIS
.Pg
VAR handlerSet: Errors.HandlerSet;
VAR errors: INTEGER; (* number of errors *)
VAR fatalcode: INTEGER; (* exit code on fatal events *)
.sp 0.7
PROCEDURE CatchEvent(type: Events.EventType; kind: Errors.Kind);
.sp 0.3
PROCEDURE Conclude(object: RelatedEvents.Object; kind: Errors.Kind;
                   text: ARRAY OF CHAR);
PROCEDURE ConcludeS(s: Streams.Stream;
                    object: RelatedEvents.Object; kind: Errors.Kind;
                    text: ARRAY OF CHAR);
.Pe
.SH DESCRIPTION
.I Conclusions
provides a handler set (see \fIErrors(3)\fP) for error events
and printing routines for object related event queues.
Further, \fIConclusions\fP installs an abort handler for
\fIEvents\fP which prints out the message text and calls
\fIProcess.Abort\fP.
.LP
Beside message printing following actions are being taken
in dependence of the event classification:
.Tb error
.Tp error
Causes \fIerrors\fP to be incremented.
.Tp fatal
Causes program termination with an exit code of \fIfatalcode\fP.
.Tp bug
Causes the program to be aborted.
.Te
.LP
.I CatchEvent
installs the appropiate error handler of \fIConclusions\fP
for \fItype\fP in dependence of \fIkind\fP.
This is equivalent to
\fIErrors.CatchEvent\fP(\fIhandlerSet\fP, \fIkind\fP, \fItype\fP).
.LP
.I ConcludeS
prints the queue of events which are related to \fIobject\fP
to \fIs\fP in LIFO-order.
.I ConcludeS
adds the basename of the command (see \fIUnixArguments(3)\fP),
the classification (except for \fImessage\fP)
and \fItext\fP (if non-empty) to the first message.
Further messages are printed in subsequent lines.
"*no messages found*" is printed for empty queues.
.I Conclude
calls \fIConcludeS\fP with \fIs\fP = \fIStreams.stderr\fP.
.SH EXAMPLE
Following example demonstrates \fIConclude\fP for
usual situations like failed \fIOpen\fP operation:
.Pg
VAR errors: RelatedEvents.Object; s: Streams.Stream;
(* ... *)
NEW(errors); RelatedEvents.QueueEvents(errors);
IF ~UnixFiles.Open(s, filename, "r", Streams.onebuf, errors) THEN
   (* print message and terminate *)
   Conclusions.Conclude(errors, Errors.fatal, filename);
END;
.Pe
.SH "SEE ALSO"
.Tb RelatedEvents(3)
.Tp Errors(3)
general error handler interface
.Tp Process(3)
process termination and abortion
.Tp RelatedEvents(3)
object related events
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: Conclusions.3,v 1.5 1996/09/16 16:18:30 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: Conclusions.3,v $
.\" Revision 1.5  1996/09/16  16:18:30  borchert
.\" formatting changed
.\"
.\" Revision 1.4  1992/04/22  10:35:53  borchert
.\" Conclusions calls Process.Abort instead of SysProcess.Abort
.\"
.\" Revision 1.3  1992/03/24  08:26:30  borchert
.\" Process renamed to SysProcess
.\" Arguments renamed to UnixArguments
.\"
.\" Revision 1.2  1992/02/18  07:42:16  borchert
.\" Files renamed to UnixFiles
.\"
.\" Revision 1.1  1991/11/25  09:11:04  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
