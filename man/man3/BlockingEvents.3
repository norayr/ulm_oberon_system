.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-1994 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH BlockingEvents 3 "Last change: 26 October 1995" "Release 0.5" "Ulm's Oberon System"
.SH NAME
BlockingEvents \- blocking distribution of events
.SH SYNOPSIS
.Pg
TYPE EventType = POINTER TO EventTypeRec;
TYPE EventTypeRec = RECORD (Events.EventTypeRec) END;
.sp 0.7
PROCEDURE Define(VAR type: EventType);
.sp 0.3
PROCEDURE Register(type: EventType; VAR condition: Conditions.Condition);
PROCEDURE Unregister(condition: Conditions.Condition);
PROCEDURE TestAndGet(condition: Conditions.Condition;
                     VAR event: Events.Event) : BOOLEAN;
PROCEDURE Done(condition: Conditions.Condition);
.sp 0.3
PROCEDURE Raise(event: Events.Event);
.Pe
.SH DESCRIPTION
.I BlockingEvents
allows to block the distributor of an event until all recipients
have seen it.
.I BlockingEvents
is to be seen in comparison to \fIEventConditions(3)\fP
which does not block the task which raises an event.
.PP
.I Register
allows a task to register its interest for all events of an
event type which has been earlier created by \fIDefine\fP.
.I Register
returns like \fIEventConditions.Create\fP a condition which
allows to wait until an event of the given event type is raised.
The registration may be undone by calling \fIUnregister\fP.
.I TestAndGet
returns
.B TRUE
and the next event if there are any events in the event queue
of \fIcondition\fP.
.I Done
must be called for processed events which has been returned by
.IR TestAndGet .
.PP
.I Events.Raise
does not necessarily block the caller due to the priority system.
Therefore \fIBlockingEvents.Raise\fP should be called instead.
But note that \fIBlockingEvents.Raise\fP does not call
\fIEvents.Raise\fP and thus does not cause other handlers to
be called.
.PP
Blocking events are not without danger.
If registered parties ``forget'' to call \fITestAndGet\fP
and/or \fIDone\fP the event raising task will be deadlocked.
For this reason all registered tasks should \fIalways\fP
include the condition returned by \fIRegister\fP into the
condition set passed to \fITasks.WaitForOneOf\fP.
It is not necessary, however,
to check for events immediately before calling \fIUnregister\fP
because \fIUnregister\fP calls \fIDone\fP for all not yet
processed events of the associated event queue.
.SH DIAGNOSTICS
.I BlockingEvents
does not generate itself any diagnostics.
.I TestAndGet
returns always \fBFALSE\fP
if the given condition has not been returned by \fIRegister\fP
previously.
.SH "SEE ALSO"
.Tb EventConditions(3)
.Tp Conditions(3)
definition of waiting conditions
.Tp EventConditions(3)
non-blocking alternative to \fIBlockingEvents\fP
.Tp Events(3)
general event handling
.Tp Tasks(3)
task management
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: BlockingEvents.3,v 1.2 1995/10/26 10:30:31 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: BlockingEvents.3,v $
.\" Revision 1.2  1995/10/26  10:30:31  borchert
.\" terminating .Te was missing
.\"
.\" Revision 1.1  1994/09/06  14:06:55  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
