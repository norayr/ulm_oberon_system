.\" --------------------------------------
.\" Oberon System Documentation   AFB 8/90
.\" (c) University of Ulm, SAI, D-7900 Ulm
.\" --------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH SysIO 3 "Last change: 17 March 1992" "Release 0.5" "Ulm's Oberon System"
.SH NAME
SysIO \- system calls for input and output
.SH SYNOPSIS
.Pg
(* file control options: arguments of Fcntl and Open *)
CONST rdonly = {};
CONST wronly = { 31 };
CONST rdwr = { 30 };
CONST ndelay = { 29 };
CONST append = { 28 };
CONST creat = { 23 };
CONST trunc = { 22 };
CONST excl = { 21 };
.sp 0.7
(* Whence = (fromStart, fromPos, fromEnd); *)
CONST fromStart = 0;
CONST fromPos = 1;
CONST fromEnd = 2;
.sp 0.7
(* file descriptor flags *)
CONST closeonexec = { 31 };
.sp 0.7
(* Fcntl requests *)
CONST dupfd = 0;
CONST getfd = 1;
CONST setfd = 2;
CONST getfl = 3;
CONST setfl = 4;
CONST getlk = 5;
CONST setlk = 6;
CONST setlkw = 7;
.sp 0.7
TYPE File = SysTypes.File;
TYPE Address = SysTypes.Address;
TYPE Count = SysTypes.Count;
TYPE Protection = INTEGER;
TYPE Whence = INTEGER;
.sp 0.7
PROCEDURE Open(VAR fd: File;
               filename: ARRAY OF CHAR; options: SET;
               errors: RelatedEvents.Object;
               retry: BOOLEAN; VAR interrupted: BOOLEAN) : BOOLEAN;
PROCEDURE OpenCreat(VAR fd: File;
                    filename: ARRAY OF CHAR; options: SET;
                    protection: Protection;
                    errors: RelatedEvents.Object;
                    retry: BOOLEAN; VAR interrupted: BOOLEAN) : BOOLEAN;
PROCEDURE Close(fd: File;
                errors: RelatedEvents.Object;
                retry: BOOLEAN; VAR interrupted: BOOLEAN) : BOOLEAN;
.sp 0.3
PROCEDURE Read(fd: File; buf: Address; cnt: Count;
               errors: RelatedEvents.Object;
               retry: BOOLEAN; VAR interrupted: BOOLEAN) : Count;
PROCEDURE Write(fd: File; buf: Address; cnt: Count;
                errors: RelatedEvents.Object;
                retry: BOOLEAN; VAR interrupted: BOOLEAN) : Count;
.sp 0.3
PROCEDURE Seek(fd: File; offset: Count; whence: Whence;
               errors: RelatedEvents.Object) : BOOLEAN;
PROCEDURE Tell(fd: File; VAR offset: Count;
               errors: RelatedEvents.Object) : BOOLEAN;
.sp 0.3
PROCEDURE Isatty(fd: File) : BOOLEAN;
PROCEDURE Dup(fd: File; VAR newfd: File;
              errors: RelatedEvents.Object) : BOOLEAN;
PROCEDURE Dup2(fd, newfd: File;
               errors: RelatedEvents.Object) : BOOLEAN;
PROCEDURE Fcntl(fd: File; request: INTEGER; VAR arg: INTEGER;
                errors: RelatedEvents.Object;
                retry: BOOLEAN; VAR interrupted: BOOLEAN) : BOOLEAN;
PROCEDURE FcntlSet(fd: File; request: INTEGER; flags: SET;
                   errors: RelatedEvents.Object;
                   retry: BOOLEAN; VAR interrupted: BOOLEAN) : BOOLEAN;
PROCEDURE FcntlGet(fd: File; request: INTEGER; VAR flags: SET;
                   errors: RelatedEvents.Object) : BOOLEAN;
.sp 0.3
PROCEDURE Pipe(VAR readfd, writefd: File;
               errors: RelatedEvents.Object) : BOOLEAN;
.Pe
.SH DESCRIPTION
.I SysIO
interfaces those UNIX system calls which are related to input and output.
.PP
\fIFile\fP represents file descriptors which
serve as handle for input and output on system call level
and are small integers.
.PP
The \fIopen(2)\fP system calls has two or three parameters.
The third parameter is needed in case of file creation to specify
the file protection.
File creation is indicated by or-ing \fIcreat\fP to \fIoptions\fP.
.I Open
and
.I OpenCreat
open
.I filename
(must be 0X-terminated)
under the control of
.IR options :
.Tb rdonly
.Tp rdonly
read-only access
.Tp wronly
write-only access
.Tp rdwr
read and write access
.Tp ndelay
assures immediate return
.Tp append
write accesses cause implicit positioning to end of file
.Tp creat
file is to be created
.Tp trunc
file is to be truncated to zero length
.Tp excl
assures exclusive creation
.Te
Options may be given in combination,
e.g. \fIcreat\fP+\fIexcl\fP+\fIrdwr\fP.
See \fISysStat\fP for protection modes.
.PP
.I Isatty
tests
.I fd
for being associated to a terminal device.
This is done by an
.I ioctl(2)
system call.
.I Isatty
does not generate any events.
.PP
.I Dup
and
.I Dup2
realize the equally named system calls of UNIX Edition VII
and Berkeley Systems.
They are replaced by \fIfcntl(2)\fP on UNIX System V systems
but are supported by \fISysIO\fP for portability.
.I Dup
returns a new file descriptor in
.I newfd
which is a synomym for
.IR fd
(i.e. both point to the same entry of the open file table).
.I Dup2
works like
.I Dup
but causes
.I newfd
to be the synonym.
If
.I newfd
was opened it is closed first.
.PP
.I Fcntl
implements the equally named system call.
.I FcntlSet
and
.I FcntlGet
are more convenient interfaces to \fIFcntl\fP.
Following requests are supported:
.Tb setlkw
.Tp dupfd
duplicate file descriptor
.Tp getfd
get file desc flags (\fIcloseonexec\fP)
.Tp setfd
set file desc flags (\fIcloseonexec\fP)
.Tp getfl
get file flags
.Tp setfl
set file flags (\fIndelay\fP, \fIappend\fP)
.Tp getlk
get file lock
.Tp setlk
set file lock
.Tp setlkw
set file lock and wait
.Te
.PP
\fIClose\fP, \fIRead\fP, \fIWrite\fP, \fISeek\fP, \fITell\fP,
and \fIPipe\fP realize the equally named system calls.
Valid values of the
.I whence
parameter of
.I Seek
are
.Tb fromStart
.Tp fromStart
absolute positioning
.Tp fromPos
relative positioning to current position
.Tp fromEnd
relative positioning to end of file
.Te
.SH DIAGNOSTICS
System call failures lead to events of
.IR SysErrors(3) .
The \fIerrors\fP parameter is passed to \fISysErrors.Raise\fP.
All procedures return
.B FALSE
or -1 (\fISysTypes.Count\fP) in error case.
.LP
Some of the system calls may be interrupted.
In normal case (\fIretry\fP = \fBFALSE\fP)
this causes the appropiate error event to be raised
(error code \fISysErrors.intr\fP) and the system call to be aborted.
If \fIretry\fP is \fBTRUE\fP,
the system call will be repeated until no interrupt occured.
\fIinterrupt\fP indicates in both cases whether interrupts
occured or not.
.SH "SEE ALSO"
.Tb SysErrors(3)
.Tp close(2)
\fIClose\fP
.Tp fcntl(2)
\fIFcntl\fP, \fIFcntlSet\fP, and \fIFcntlGet\fP
.Tp open(2)
\fIOpen\fP and \fIOpenCreat\fP
.Tp pipe(2)
\fIPipe\fP
.Tp read(2)
\fIRead\fP
.Tp seek(2)
\fISeek\fP
.Tp tell(2)
\fITell\fP
.Tp write(2)
\fIWrite\fP
.Tp SysErrors(3)
handling of failed system calls
.Tp SysStat(3)
protection modes
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: SysIO.3,v 1.7 1992/03/17 07:35:18 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: SysIO.3,v $
.\" Revision 1.7  1992/03/17  07:35:18  borchert
.\" object-parameters renamed to errors and rearranged
.\"
.\" Revision 1.6  1992/02/18  07:32:04  borchert
.\" MaxOpenFiles removed from the description
.\"
.\" Revision 1.5  1992/01/15  07:26:34  borchert
.\" retry & interrupted parameters added
.\" MaxOpenFiles removed
.\"
.\" Revision 1.4  1991/11/18  08:19:31  borchert
.\" object parameters for RelatedEvents added
.\"
.\" Revision 1.3  1991/06/19  16:28:27  borchert
.\" formatting changed
.\"
.\" Revision 1.2  90/12/30  17:04:05  borchert
.\" typo error fixed (SysError -> SysErrors)
.\" 
.\" Revision 1.1  90/08/31  17:02:22  borchert
.\" Initial revision
.\" 
.\" ---------------------------------------------------------------------------
