.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-1994 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH StreamDisciplines 3 "Last change: 10 July 2003" "Release 0.5" "Ulm's Oberon System"
.SH NAME
StreamDisciplines \- general-purpose disciplines for streams
.SH SYNOPSIS
.Pg
TYPE LineTerminator = ARRAY 4 OF CHAR;
.sp 0.3
VAR badfieldsepset: Events.EventType;
.sp 0.3
PROCEDURE SetLineTerm(s: Streams.Stream; lineterm: LineTerminator);
PROCEDURE GetLineTerm(s: Streams.Stream; VAR lineterm: LineTerminator);
.sp 0.3
PROCEDURE GetWhiteSpace(s: Streams.Stream; VAR whitespace: Sets.CharSet);
PROCEDURE SetWhiteSpace(s: Streams.Stream; whitespace: Sets.CharSet);
.sp 0.3
PROCEDURE SetFieldSepSet(s: Streams.Stream; fieldsepset: Sets.CharSet);
PROCEDURE GetFieldSepSet(s: Streams.Stream; VAR fieldsepset: Sets.CharSet);
PROCEDURE SetFieldSep(s: Streams.Stream; fieldsep: CHAR);
PROCEDURE GetFieldSep(s: Streams.Stream; VAR fieldsep: CHAR);
.sp 0.3
PROCEDURE SetIndentationWidth(s: Streams.Stream; indentwidth: INTEGER);
PROCEDURE GetIndentationWidth(s: Streams.Stream; VAR indentwidth: INTEGER);
PROCEDURE IncrIndentationWidth(s: Streams.Stream; incr: INTEGER);
.Pe
.SH DESCRIPTION
\fIStreamDisciplines\fP exports some general characteristics
of streams which are used by scanning and printing modules
like \fIRead(3)\fP or \fIWrite(3)\fP.
.LP
Line terminators are strings up to four characters which
must be pairwise different.
\fB0X\fP as line terminator is to be encoded as empty
line terminator (i.e. first element equals \fB0X\fP).
Default is \fIASCII.EOL\fP and may be modified by
\fISetLineTerm\fP.
The line terminator of \fIStreamDisciplines\fP is independent of
the line terminator of \fIStreams\fP which is used for
line buffered streams.
.LP
White space is the set of characters which is to be skipped
on read operations (e.g. \fIRead.Int\fP).
By default it contains
\fIASCII.tab\fP, \fIASCII.nl\fP,
\fIASCII.np\fP, and \fIASCII.sp\fP.
\fISetWhiteSpace\fP and \fIGetWhiteSpace\fP
allow to access the white space character set.
.LP
Lines could be viewed as records which consists of
fields which are separated by field separators.
The default field separators are
\fIASCII.tab\fP, \fIASCII.nl\fP,
\fIASCII.np\fP and \fIASCII.sp\fP.
\fISetFieldSetSet\fP and \fIGetFieldSepSet\fP
allow to set and retrieve the set of separators.
.LP
\fIGetFieldSep\fP returns one of the field separators
which is intended to be the output field separator.
\fISetFieldSep\fP adds \fIfieldsep\fP to the set of
field separators and selects \fIfieldsep\fP to be the
one returned by \fIGetFieldSep\fP.
\fIGetFieldSep\fP returns the field separator with
the lowest ordinal value if no separator has been selected
by \fISetFieldSep\fP.
.LP
The set of separators should be interpreted as set
of skipping characters between fields
if the set of whitespace characters is a subset of the set of field
separators.
In all other cases each field separator works as
delimiter between two fields,
i.e. empty fields are possible.
.LP
Field extracting procedures are expected
to strip off surrounding white space.
The set of white space charactes should be set to the empty set
if this behaviour is not preferred.
.LP
Some streams maintain an actual non-negative indentation width.
In this case each line should be preceded by a call of \fIWrite.Indent\fP.
The indentation width may be set, retrieved and modified
by \fISetIndentationWidth\fP, \fIGetIndentationWidth\fP, and
\fIIncrIndentationWidth\fP.
\fIStreamDisciplines\fP silently ignores calls which try to set
the indentation width to a negative value.
.SH DIAGNOSTICS
\fISetFieldSepSet\fP raises \fIbadfieldsepset\fP
on empty sets with priority \fIPriorities.liberrors\fP.
.SH "SEE ALSO"
.Tb Disciplines(3)
.Tp ASCII(3)
shortnames for ASCII characters
.Tp Disciplines(3)
attachments of additional data structures to objects
.Tp Events(3)
event and error handling
.Tp Read(3)
formatted input
.Tp Sets(3)
handling of larger sets
.Tp Streams(3)
general stream operations
.Tp Write(3)
formatted output
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: StreamDisciplines.3,v 1.7 2003/07/10 08:58:43 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: StreamDisciplines.3,v $
.\" Revision 1.7  2003/07/10 08:58:43  borchert
.\" some typos fixed
.\"
.\" Revision 1.6  1999/04/15 08:33:56  borchert
.\" SEE ALSO extended
.\"
.\" Revision 1.5  1996/09/16  16:59:35  borchert
.\" - references to Read & Write corrected
.\" - more general rule when a set of separators is to be considered
.\"   as set of skipping characters
.\"
.\" Revision 1.4  1994/07/04  14:47:24  borchert
.\" parameter for indentation width added
.\"
.\" Revision 1.3  1991/11/12  08:44:50  borchert
.\" Events.EventNumber replaced by Events.EventType
.\"
.\" Revision 1.2  1991/10/29  09:39:18  borchert
.\" encoding of 0X as line terminator added
.\"
.\" Revision 1.1  91/10/29  08:05:55  borchert
.\" Initial revision
.\" 
.\" ---------------------------------------------------------------------------
