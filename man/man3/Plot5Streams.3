.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-2004 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH Plot5Streams 3 "Last change: 22 April 2004" "Release 0.5" "Ulm's Oberon System"
.SH NAME
Plot5Streams \- traditional Berkeley plot streams
.SH SYNOPSIS
.Pg
PROCEDURE Create(VAR plotter: Plotters.Plotter; out: Streams.Stream);
.Pe
.SH DESCRIPTION
.I Plot5Streams
provides an implementation of \fIPlotters(3)\fP that generates
traditional Berkeley plot streams. Independent from the current architecture,
all binary numbers are generated in little-endian format.
.LP
Some options for viewing Berkeley plot streams:
.IP \(bu
The \fIplot(1)\fP command from the GNU plotutils is able to
convert Berkeley plot streams to a large number of file formats
and devices. Note, however, that ``-l'' has to be specified as
option because by default Berkeley plot streams are only correctly recognized
on little-endian architectures.
.IP \(bu
The BSD \fIplot(1b)\fP utility allows to convert plot streams
to a small number of formats.
.IP \(bu
The Solaris \fIpostplot(1)\fP filter allows to convert plot streams
into PostScript. This filter is part of the SUNWpsf package and
installed as \fI/usr/lib/lp/postscript/postplot\fP.
.LP
.I Create
creates a plotter that generates the Berkeley plot instructions
onto \fIout\fP. The plotter acts as forwarding object in the
sense of \fIForwarders(3)\fP, i.e. the plotter dies if \fIout\fP
terminates, and error events of \fIout\fP are forwarded to \fIplotter\fP.
.SH DIAGNOSTICS
All error events generated by the underlying stream are forwarded
to the plotter object. In case of failures, all subsequent operations
are silently suppressed.
.SH EXAMPLE
Following procedure opens a plot stream that sends all plot instructions
to the \fIplot(1)\fP utility using a pipeline:
.Pg
PROCEDURE CreateXPlotter(VAR plotter: Plotters.Plotter;
                         errors: RelatedEvents.Object) : BOOLEAN;
   VAR
      out: Streams.Stream;
BEGIN
   IF ~UnixPipes.Open(out, "/usr/local/bin/plot -l -T X",
         UnixPipes.write, Streams.onebuf, errors) THEN
      RETURN FALSE
   END;
   Plot5Streams.Create(plotter, out);
END CreateXPlotter;
.Pe
Note that \fIout\fP is automatically closed as soon as \fIplotter\fP
closes because \fIplotter\fP is the only object that references \fIout\fP.
.SH "SEE ALSO"
.Tb Plotters(5)
.Tp plot(1)
GNU plot utility
.Tp plot(1b)
traditional BSD plot utility
.Tp postplot(1)
Solaris plot stream to PostScript converter
.Tp Plotters(3)
general interface for simple plotters
.Te
.SH BUGS
Note that different plot utilities come with different interpretations
and different bugs. GNU \fIplot(1)\fP, for example, redefines
the current position after drawing an arc while \fIpostplot(1)\fP
does not change it.
.\" ---------------------------------------------------------------------------
.\" $Id: Plot5Streams.3,v 1.2 2004/04/22 13:03:59 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: Plot5Streams.3,v $
.\" Revision 1.2  2004/04/22 13:03:59  borchert
.\" typos fixed
.\"
.\" Revision 1.1  2004/04/08 12:34:06  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
