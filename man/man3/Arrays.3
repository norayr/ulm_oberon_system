.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-2004 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH Arrays 3 "Last change: 19 March 2004" "Release 0.5" "Ulm's Oberon System"
.SH NAME
Arrays \- associative arrays
.SH SYNOPSIS
.Pg
CONST ascending = 0;  (* in ascending order *)
CONST descending = 1; (* in descending order *)
TYPE Order = Iterators.Mode;    (* ascending, descending *)
.sp 0.7
TYPE Array = POINTER TO ArrayRec;
TYPE ArrayRec = RECORD (Services.ObjectRec) END;
.sp 0.7
PROCEDURE Create(VAR array: Array; key: Keys.Key);
PROCEDURE GetKey(array: Array; VAR key: Keys.Key);
PROCEDURE Set(array: Array; keyval: Keys.Value; object: Objects.Object);
PROCEDURE Get(array: Array; keyval: Keys.Value;
              VAR object: Objects.Object) : BOOLEAN;
PROCEDURE Remove(array: Array; keyval: Keys.Value);
PROCEDURE Exists(array: Array; keyval: Keys.Value) : BOOLEAN;
PROCEDURE Card(array: Array) : INTEGER;
PROCEDURE GetKeys(array: Array; order: Order;
                  from, to: Keys.Value; VAR it: Iterators.Iterator);
PROCEDURE GetEntries(array: Array; order: Order;
                     from, to: Keys.Value; VAR it: Iterators.Iterator);
.Pe
.SH DESCRIPTION
.I Arrays
provides sorted associative arrays (on base of \fIAVLTrees(3)\fP) where
objects do not need to include their key values.
.LP
.I Create
creates an array with \fIkey\fP as sorting key.
.I GetKey
returns the key previously passed to \fICreate\fP.
.LP
.I Set
sets the object of the array associated with \fIkeyval\fP to \fIobject\fP.
This causes previous associations of \fIkeyval\fP, if any, to be lost.
Note that \fIobject\fP must not be \fBNIL\fP.
.I Get
retrieves the object of the array associated with \fIkeyval\fP.
\fBFALSE\fP is returned, if no such association exists.
.I Remove
removes the association of \fIkeyval\fP within \fIarray\fP, if any.
.I Exists
returns \fBTRUE\fP if \fIarray\fP includes an object associated
with \fIkeyval\fP.
.I Card
returns the number of associations within \fIarray\fP.
.LP
.I GetKeys
returns an iterator that generates the keys of the array,
beginning from \fIfrom\fP up to and including \fIto\fP in sorted order.
\fBNIL\fP may be given to designate the lowest or highest key value,
respectively.
.I GetEntries
works similarly but returns the corresponding objects.
.SH DIAGNOSTICS
.I Arrays
does not generate error events on its own. Events by
the underlying \fIAVLTrees(3)\fP implementation are forwarded to
the array object.
.SH "SEE ALSO"
.Tb SortedBags(3)
.Tp AVLTrees(3)
the underlying implementation which provides sorted trees
for objects that include their key values and unique keys
.Tp SortedBags(3)
sorted trees for objects that include their key values
but where keys do not need to be unique
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: Arrays.3,v 1.1 2004/03/19 09:33:54 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: Arrays.3,v $
.\" Revision 1.1  2004/03/19 09:33:54  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
