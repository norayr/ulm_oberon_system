.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-1995 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH EventConditions 3 "Last change: 13 December 1995" "Release 0.5" "Ulm's Oberon System"
.SH NAME
EventConditions \- wait until a given event is raised
.SH SYNOPSIS
.Pg
PROCEDURE Create(VAR condition: Conditions.Condition;
                 eventType: Events.EventType);
.sp 0.3
PROCEDURE Drop(condition: Conditions.Condition);
.sp 0.3
PROCEDURE TestAndGet(condition: Conditions.Condition;
                     VAR event: Events.Event) : BOOLEAN;
.Pe
.SH DESCRIPTION
.I EventConditions
creates conditions which allow to wait until
events of a given type are passed to \fIEvents.Raise\fP.
.PP
.I Create
creates a condition which evaluates to \fBTRUE\fP
if one or more events of \fIeventType\fP have been
passed to \fIEvents.Raise\fP.
.I Create
defines a handler for \fIeventType\fP.
Additional handlers may be defined by other modules
but the reaction of \fIeventType\fP must not be
changed to \fIEvents.default\fP or \fIEvents.ignore\fP.
The handler queues all incoming events of \fIeventType\fP.
.PP
Multiple conditions may be defined for the same event type.
In this case all incoming events are put into each of
the queues.
.PP
.I Drop
removes the associated queue of \fIcondition\fP.
This is useful if \fIcondition\fP is no longer needed because it
reduces the number of queues for the associated event type and
assures that the queue can be subject to the garbage collector.
.PP
.I TestAndGet
returns \fBTRUE\fP and the next event
if there are any events in the event queue of \fIcondition\fP.
.SH "SEE ALSO"
.Tb BlockingEvents(3)
.Tp BlockingEvents(3)
similar to \fIEventConditions\fP but blocks the event raiser
until all interested parties have seen the event
.Tp Conditions(3)
interface for conditions
.Tp Events(3)
event handling
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: EventConditions.3,v 1.3 1995/12/13 10:15:55 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: EventConditions.3,v $
.\" Revision 1.3  1995/12/13  10:15:55  borchert
.\" fix of documentation error:
.\" eventType parameter of Create is not a VAR-parameter
.\"
.\" Revision 1.2  1993/06/11  08:32:44  borchert
.\" Drop added
.\"
.\" Revision 1.1  1992/01/19  14:45:07  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
