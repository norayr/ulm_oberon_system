.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-2004 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH Math 3 "Last change: 9 August 2006" "Release 0.5" "Ulm's Oberon System"
.SH NAME
Math \- mathematical constants and functions
.SH SYNOPSIS
.Pg
CONST e = 2.7182818284590452354;
CONST log2e = 1.4426950408889634074;
CONST log10e = 0.43429448190325182765;
CONST ln2 = 0.69314718055994530942;
CONST ln10 = 2.30258509299404568402;
CONST pi = 3.14159265358979323846;
CONST pidiv2 = 1.57079632679489661923;
CONST pidiv4 = 0.78539816339744830962;
CONST onedivpi = 0.31830988618379067154;
CONST twodivpi = 0.63661977236758134308;
CONST twodivsqrtpi = 1.12837916709551257390;
CONST sqrt2 = 1.41421356237309504880;
CONST sqrt1div2 = 0.70710678118654752440;
.sp 0.7
CONST domain = 0;
CONST sing = 1;
CONST overflow = 2;
CONST underflow = 3;
CONST errorcodes = 4;
.sp 0.2
TYPE ErrorCode = SHORTINT; (* domain..underflow *)
TYPE ErrorEvent = POINTER TO ErrorEventRec;
TYPE ErrorEventRec =
   RECORD
      (Events.EventRec)
      errorcode: ErrorCode;
   END;
.sp 0.2
VAR errormsg: ARRAY errorcodes OF Events.Message;
VAR error: Events.EventType;
.sp 0.7
PROCEDURE Sin(x: REAL) : REAL;
PROCEDURE Cos(x: REAL) : REAL;
PROCEDURE Tan(x: REAL) : REAL;
PROCEDURE Arctan(x: REAL) : REAL;
PROCEDURE Arctan2(y, x: REAL) : REAL;
PROCEDURE Ln(x: REAL) : REAL;
PROCEDURE Exp(x: REAL) : REAL;
PROCEDURE Sqrt(x: REAL) : REAL;
.sp 0.7
PROCEDURE SinE(x: REAL; errors: RelatedEvents.Object) : REAL;
PROCEDURE CosE(x: REAL; errors: RelatedEvents.Object) : REAL;
PROCEDURE TanE(x: REAL; errors: RelatedEvents.Object) : REAL;
PROCEDURE ArctanE(x: REAL; errors: RelatedEvents.Object) : REAL;
PROCEDURE Arctan2E(y, x: REAL; errors: RelatedEvents.Object) : REAL;
PROCEDURE LnE(x: REAL; errors: RelatedEvents.Object) : REAL;
PROCEDURE ExpE(x: REAL; errors: RelatedEvents.Object) : REAL;
PROCEDURE SqrtE(x: REAL; errors: RelatedEvents.Object) : REAL;
.sp 0.7
PROCEDURE SinL(x: LONGREAL) : LONGREAL;
PROCEDURE CosL(x: LONGREAL) : LONGREAL;
PROCEDURE TanL(x: LONGREAL) : LONGREAL;
PROCEDURE ArctanL(x: LONGREAL) : LONGREAL;
PROCEDURE Arctan2L(y, x: LONGREAL) : LONGREAL;
PROCEDURE LnL(x: LONGREAL) : LONGREAL;
PROCEDURE ExpL(x: LONGREAL) : LONGREAL;
PROCEDURE SqrtL(x: LONGREAL) : LONGREAL;
.sp 0.7
PROCEDURE SinLE(x: LONGREAL; errors: RelatedEvents.Object) : LONGREAL;
PROCEDURE CosLE(x: LONGREAL; errors: RelatedEvents.Object) : LONGREAL;
PROCEDURE TanLE(x: LONGREAL; errors: RelatedEvents.Object) : LONGREAL;
PROCEDURE ArctanLE(x: LONGREAL; errors: RelatedEvents.Object) : LONGREAL;
PROCEDURE Arctan2LE(y, x: LONGREAL; errors: RelatedEvents.Object) : LONGREAL;
PROCEDURE LnLE(x: LONGREAL; errors: RelatedEvents.Object) : LONGREAL;
PROCEDURE ExpLE(x: LONGREAL; errors: RelatedEvents.Object) : LONGREAL;
PROCEDURE SqrtLE(x: LONGREAL; errors: RelatedEvents.Object) : LONGREAL;
.Pe
.SH DESCRIPTION
.I Math
offers commonly used mathematical constants and functions.
All functions are offered in four variants: for \fBREAL\fP
and \fBLONGREAL\fP and with or without an \fIerrors\fP parameter.
.SH DIAGNOSTICS
Errors lead to events which are related to the \fIerrors\fP
parameter, or, if not given, directly to \fIEvents.Raise\fP.
Because these events are not ignored by default,
this could cause program termination if \fIerror\fP is
not ignored or there doesn't exist a handler for it.
.PP
Following error codes are implemented:
.Tb underflow
.Tp domain
The argument \fIx\fP of the function is outside of the valid domain.
.Tp sing
Argument singularity, usually division by zero.
.Tp overflow
Overflow range exception, i.e. the result is too large
to be representable.
.Tp underflow
Underflow range exception.
.Te
.PP
The current implementation
defines an event handler for \fISysSignals.FPE\fP
to catch floating point exceptions.
For this to work, the event handler for \fISysSignals.FPE\fP
must not be removed.
The event handler of \fIMath\fP ignores exceptions caused by
other modules.
.SH "SEE ALSO"
.Tb RelatedEvents(3)
.Tp IEEE(3)
support of IEEE floating point format
.Tp RelatedEvents(3)
error handling
.Tp SysSignals(3)
floating point exception
.Te
.SH CREDITS
The implementation of this module has been derived from the GNU C Library
which, in turn, has been partially derived from sources of the University
of California.
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: Math.3,v 1.3 2006/08/09 15:58:36 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: Math.3,v $
.\" Revision 1.3  2006/08/09 15:58:36  borchert
.\" signatures of Arctan2, Arctan2E, Arctan2L, and Arctan2LE fixed
.\"
.\" Revision 1.2  2004/04/07 21:58:37  borchert
.\" Arctan2 added
.\"
.\" Revision 1.1  1993/06/11 14:59:57  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
