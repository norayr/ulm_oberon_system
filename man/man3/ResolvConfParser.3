.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-2004 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH ResolvConfParser 3 "Last change: 10 March 2004" "Release 0.5" "Ulm's Oberon System"
.SH NAME
ResolvConfParser \- parse resolv.conf configuration files
.SH SYNOPSIS
.Pg
TYPE Configuration = POINTER TO ConfigurationRec;
TYPE ConfigurationRec = RECORD (Disciplines.DisciplineRec) END;
.sp 0.7
TYPE SortListMember = POINTER TO SortListMemberRec;
TYPE SortListMemberRec =
      RECORD
         (Objects.ObjectRec)
         ipaddr: IPv4Addresses.Address;
         netmask: IPv4Addresses.Address;
         netmaskDefined: BOOLEAN;
      END;
.sp 0.7
TYPE NameServer = POINTER TO NameServerRec;
TYPE NameServerRec =
      RECORD
         (Objects.ObjectRec)
         ipaddr: IPv4Addresses.Address;
      END;
.sp 0.7
TYPE Option = POINTER TO OptionRec;
TYPE OptionRec =
      RECORD
         (Objects.ObjectRec)
         name: ConstStrings.String;
         value: INTEGER; (* 1 for set BOOLEAN options *)
      END;
.sp 0.7
CONST dottedDecimalExpected = 0;
CONST keywordExpected = 1;
CONST domainExpected = 2;
CONST multipleDomains = 3;
CONST integerExpected = 3;
CONST errors = 5;
TYPE ErrorCode = SHORTINT; (* dottedEcimalExpected... *)
TYPE ErrorEvent = POINTER TO ErrorEventRec;
TYPE ErrorEventRec =
      RECORD
         (Events.EventRec)
         errorcode: ErrorCode;
         line, col: INTEGER;
      END;
VAR error: Events.EventType;
VAR errormsg: ARRAY errors OF Events.Message;
.sp 0.7
PROCEDURE Parse(VAR conf: Configuration;
                s: Streams.Stream;
                errors: RelatedEvents.Object) : BOOLEAN;
.sp 0.7
PROCEDURE IterateNameServers(conf: Configuration;
                             VAR it: Iterators.Iterator);
.sp 0.7
PROCEDURE IterateSearchList(conf: Configuration;
                            VAR it: Iterators.Iterator);
.sp 0.7
PROCEDURE IterateSortLists(conf: Configuration;
                           VAR it: Iterators.Iterator);
.sp 0.7
PROCEDURE IterateOptions(conf: Configuration;
                         VAR it: Iterators.Iterator);
.sp 0.7
PROCEDURE GetOption(conf: Configuration;
                    name: ARRAY OF CHAR;
                    VAR value: INTEGER) : BOOLEAN;
.sp 0.7
PROCEDURE GetLocalDomain(conf: Configuration;
                         VAR domain: ARRAY OF CHAR) : BOOLEAN;
.Pe
.SH DESCRIPTION
.I ResolvConfParser
parses configuration files that conform to \fIresolv.conf(5)\fP.
This module does not impose the limits of the traditional
resolver library for C. The number of nameservers is not limited
and conflicting configurations like ``domain'' and ``search''
can co-exist.
.PP
.I Parse
parses \fIs\fP and creates a configuration \fIconf\fP.
.PP
.I IterateNameServers
creates an iterator that returns objects of type \fINameServer\fP
for each of the ``nameserver'' declarations within the configuration
\fIconf\fP.
.PP
.I IterateSearchList
creates an iterator that returns objects of type \fIConstStrings.String\fP
for each of the domains that are specified within the ``search''
declaration.
.PP
.I IterateSortLists
creates an iterator that returns objects of type \fISortListMember\fP
for each of the networks that are specified within the ``sortlist''
declaration.
.PP
Iterators created by
.I IterateOption
return an object of type \fIOption\fP for all options that
are declared with an ``option'' directive.
.I GetOption
allows to retrieve option values by option names. \fBFALSE\fP
is returned if an option named \fIname\fP was not found within
the configuration.
.PP
.I GetLocalDomain
returns the domain specified with the ``domain'' directive,
if provided.
.SH DIAGNOSTICS
.I Parse
generates error events and returns \fBFALSE\fP in case of syntax errors:
.Tb dottedDecimalExpected
.Tp dottedDecimalExpected
a dotted decimal (e.g. ``127.0.0.1'') was expected but not found
.Tp keywordExpected
a keyword (e.g. ``nameserver'') was expected but not found
.Tp domainExpected
a valid domain name was expected but not found
.Tp multipleDomains
more than one ``domain'' declaration was found
.Tp integerExpected
an integer value was expected but not found
.Te
.SH FILES
.Tb /etc/resolv.conf
.Tp /etc/resolv.conf
The standard location for this configuration file.
.Te
.SH "SEE ALSO"
.Tb DNSStdResolvers(3)
.Tp DNSStdResolvers(3)
implements \fIDNSResolvers(3)\fP using configuration files of this type
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: ResolvConfParser.3,v 1.1 2004/03/10 15:42:11 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: ResolvConfParser.3,v $
.\" Revision 1.1  2004/03/10 15:42:11  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
