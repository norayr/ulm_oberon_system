.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-2004 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH InetTCP 3 "Last change: 24 September 2004" "Release 0.5" "Ulm's Oberon System"
.SH NAME
InetTCP \- TCP/IP based implementation of \fINetworks(3)\fP
.SH SYNOPSIS
.Pg
TYPE Address = IPv4TCPSockets.SocketAddress;
.sp 0.7
PROCEDURE CreateAddress(VAR address: Networks.Address; ipaddr: Address);
PROCEDURE ConvertAddress(address: Networks.Address; VAR ipaddr: Address);
PROCEDURE SetAddress(address: Networks.Address; ipaddr: Address);
.Pe
.SH DESCRIPTION
.I InetTCP
is a \fINetworks(3)\fP implementation
which is based upon \fIIPv4TCPSockets(3)\fP.
\fICreateAddress\fP takes an IPv4 address and
converts it into a newly created general network address.
\fIConvertAddress\fP allows the reverse conversion but requires
\fIaddress\fP to be returned earlier by \fICreateAddress\fP.
\fISetAddress\fP allows to change a network address.
Again, \fIaddress\fP must originate from \fIInetTCP\fP.
General network addresses are persistent objects which
allow the interface of \fINetworks(3)\fP to be used which
is independent from a particular network implementation.
.SH DIAGNOSTICS
Passing an invalid general network address
(i.e. an address which does not originate from \fIInetTCP\fP)
to \fIConvertAddress\fP or
\fISetAddress\fP causes a type guard to fail.
.SH "SEE ALSO"
.Tb IPv4TCPSockets(3)
.Tp IPv4TCPSockets(3)
interface for IPv4 TCP sockets
.Tp Networks(3)
general abstraction for network connections
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: InetTCP.3,v 1.3 2004/09/24 15:34:06 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: InetTCP.3,v $
.\" Revision 1.3  2004/09/24 15:34:06  borchert
.\" Internet renamed to IPv4TCPSockets
.\"
.\" Revision 1.2  1996/09/16 16:19:39  borchert
.\" minor fix for man3tohtml
.\"
.\" Revision 1.1  1995/03/13  09:55:37  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
