.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-1999 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH CompilerErrors 3 "Last change: 28 May 2000" "Release 0.5" "Ulm's Oberon System"
.SH NAME
CompilerErrors \- standardized events for compilation errors
.SH SYNOPSIS
.Pg
TYPE ErrorEvent = POINTER TO ErrorEventRec;
TYPE ErrorEventRec =
   RECORD
      (Events.EventRec)
      loc1, loc2, reference: CompilerObjects.Location;
      longmsg: Streams.Stream;
   END;
VAR error: Events.EventType;
.sp 0.7
PROCEDURE Raise(errors: RelatedEvents.Object;
                at: CompilerObjects.Location;
                message: ARRAY OF CHAR);
.sp 0.7
PROCEDURE Open(VAR s: Streams.Stream);
PROCEDURE At1(s: Streams.Stream; location: CompilerObjects.Location);
PROCEDURE At2(s: Streams.Stream; location: CompilerObjects.Location);
PROCEDURE Ref(s: Streams.Stream; location: CompilerObjects.Location);
PROCEDURE AtObject1(s: Streams.Stream; object: CompilerObjects.Object);
PROCEDURE AtObject2(s: Streams.Stream; object: CompilerObjects.Object);
PROCEDURE RefObject(s: Streams.Stream; object: CompilerObjects.Object);
PROCEDURE Close(s: Streams.Stream; errors: RelatedEvents.Object);
.sp 0.7
PROCEDURE GetSortedErrors(errors: RelatedEvents.Object;
                          VAR it: Iterators.Iterator);
.Pe
.SH DESCRIPTION
.I CompilerErrors
provides standardized events for compilation errors that allow
modules like \fIListers(3)\fP to generate integrated error listings.
.LP
As all error events generated by \fICompilerErrors\fP are passed
to \fIRelatedEvents(3)\fP, an error object is needed that collects
all error events, i.e. \fIRelatedEvents.QueueEvents\fP must be called
for it. This object may be an otherwise empty object or any other
extension of \fIRelatedEvents.Object\fP that is permitted to receive
other error events as well.
.LP
Error events are created in a short and simple way by \fIRaise\fP,
or, in case of more elaborate messages, by \fIOpen\fP, various
location referencing procedures, and \fIClose\fP. Finally,
\fIGetSortedErrors\fP may be called to extract all compilation
error events from \fIerrors\fP (but leaving all other events),
sorted by their primary location.
.LP
All error events generated by \fICompilerErrors\fP have
following components:
.Tb reference
.Tp type
Shared event type that is always set to \fICompilerErrors.error\fP.
.Tp message
Abbreviated error message of type \fIEvents.Message\fP.
.Tp loc1
Primary location, always non-\fBNIL\fP.
Used as key by \fIGetSortedErrors\fP.
.Tp loc2
Is set if two items belong to this error event.  May be \fBNIL\fP.
\fIloc2\fP is expected to be close to \fIloc1\fP and
must belong to the same source.
Example: Two expressions combined by an operator that are not compatible
to each other.
.Tp reference
A more distant location that is given as reference.
It may even belong to another source as \fIloc1\fP.
May be \fBNIL\fP.
Example: First declaration in case of multiple declarations.
.Tp longmsg
Non-abbreviated error message.
.Te
.LP
.I Raise
creates a simple error event referencing just one location and
giving a message.
.LP
.I Open
creates a stream where the error message may be written to
and which, in addition, supports following operations:
\fIAt1\fP, \fIAt2\fP, and \fIRef\fP set the primary, secondary, and
reference location, respectively.
\fIAtObject1\fP, \fIAtObject2\fP, and \fIRefObject\fP work
similarly but take the location from \fIobject.loc\fP instead.
Note that either \fIAt1\fP or \fIAtObject1\fP must be called.
If the error message has been printed to \fIs\fP and all
locations are defined, \fIClose\fP generates the error event
and relates it to \fIerrors\fP.
.LP
.I GetSortedErrors
removes all error events that are extensions of
\fICompilerErrors.ErrorEvent\fP from \fIerrors\fP and returns them
in sorted order (by their primary location) through \fIit\fP.
.SH DIAGNOSTICS
.I CompilerErrors
does not generate any additional error events on its own.
Assertions fail in case of
.IP \(bu
multiple definitions of a location,
.IP \(bu
missing source references or source headers in locations,
.IP \(bu
overlapping locations,
.IP \(bu
empty error messages,
.IP \(bu
missing definition of the primary location, and
.IP \(bu
foreign streams that are passed to \fIAt1\fP and all other
location-defining operations.
.SH "SEE ALSO"
.Tb CompilerObjects(3)
.Tp CompilerObjects(3)
base type of locations
.Tp Listers(3)
general interface for error listers
.Tp RelatedEvents(3)
object-oriented event handling
.Te
.SH BUGS
.I CompilerErrors
does not offer a pretty-printing interface procedure
using \fIErrors.AssignWriteProcedure\fP (see \fIErrors(3)\fP) as
this task is better left to listing generators.
.\" ---------------------------------------------------------------------------
.\" $Id: CompilerErrors.3,v 1.1 2000/05/28 15:34:48 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: CompilerErrors.3,v $
.\" Revision 1.1  2000/05/28  15:34:48  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
