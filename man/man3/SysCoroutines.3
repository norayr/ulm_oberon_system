.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-2005 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH SysCoroutines 3 "Last change: 25 August 2005" "Release 0.5" "Ulm's Oberon System"
.SH NAME
SysCoroutines \- system-dependent coroutine layout
.SH SYNOPSIS
Implementation on the SPARCv8/Solaris architecture:
.Pg
TYPE (* $O- $P- coroutine structure *)
   Coroutine = POINTER TO CoroutineRec;
   CoroutineRec = RECORD
      interrupts: INTEGER;
      started: INTEGER; (* 0, 1, or 2 *)
      ucontext: ARRAY 448 OF BYTE;
   END;
   (* $O= $P= *)
.Pe
.PP
Implementation on the I386/Linux architecture:
.Pg
TYPE (* $O- $P- coroutine structure *)
   Coroutine = POINTER TO CoroutineRec;
   CoroutineRec = RECORD
      interrupts: INTEGER;
      started: INTEGER; (* 0, 1, or 2 *)
      ucontext: ARRAY 24 OF BYTE;
   END;
   (* $O= $P= *)
.Pe
.SH DESCRIPTION
.I SysCoroutines
declares the system-dependent structures of coroutines. This is
intended for modules like \fISysStorage(3)\fP or \fISysInterrupts(3)\fP.
.PP
Following fields are included:
.Tb interrupts
.Tp interrupts
counts the number of asynchronous interrupts whose handler have
not been finished yet. This counter is maintained by \fISysInterrupts(3)\fP.
Coroutines with non-zero interrupt counters are considered as
non-tracable by the garbage collection.
.Tp started
has a value of 0 for coroutines whose \fIucontext\fP has not been
initialized yet, 1 for coroutines with a saved context but that were
never switched to, and 2 after the first activation of a coroutine.
.Tp ucontext
contains the system-dependent context that is either maintained
by inline architecture (on the I386 architecture, for example) or
by system calls (on the SPARC architecture).
.Te
.SH EXAMPLE
.Pg
PROCEDURE Started(cr: Coroutines.Coroutine) : INTEGER;
   VAR
      scr: SysCoroutines.Coroutine;
BEGIN
   scr := SYSTEM.VAL(SysCoroutines.Coroutine, cr);
   RETURN scr.started
END Started;
.Pe
.SH "SEE ALSO"
.Tb SysInterrupts(3)
.Tp Coroutines(3)
opaque type \fICoroutines.Coroutine\fP
.Tp SysInterrupts(3)
maintenance of interrupt nest level of coroutines
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: SysCoroutines.3,v 1.1 2005/08/25 09:16:48 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: SysCoroutines.3,v $
.\" Revision 1.1  2005/08/25 09:16:48  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
