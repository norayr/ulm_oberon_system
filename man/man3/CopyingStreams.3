.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-1996 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH CopyingStreams 3 "Last change: 27 May 2000" "Release 0.5" "Ulm's Oberon System"
.SH NAME
CopyingStreams \- provide seek capability on pure input streams
.SH SYNOPSIS
.Pg
CONST cannotAllocMemory = 0;
CONST invalidInputStream = 1;
CONST outOfMemory = 2;
CONST posOutOfRange = 3;
CONST errors = 4;
.sp 0.3
TYPE ErrorCode = SHORTINT; (* cannotAllocMemory..posOutOfRange *)
TYPE ErrorEvent = POINTER TO ErrorEventRec;
TYPE ErrorEventRec =
   RECORD
      (Events.EventRec)
      errorcode: ErrorCode;
   END;
.sp 0.3
VAR error: Events.EventType;
VAR errormsg: ARRAY errors OF Events.Message;
.sp 0.7
PROCEDURE Open(VAR s: Streams.Stream; input: Streams.Stream;
               errors: RelatedEvents.Object) : BOOLEAN;
.Pe
.SH DESCRIPTION
.I CopyingStreams
offers streams with seek and tell capability on base of
pure input streams which do not have these capabilities.
This is achieved by copying the input into memory.
The length of the stream equals the number of bytes
read from the underlying input stream.
The stream is extended by reading from the end position
but not by seeking beyond the current stream length.
.PP
\fICopyingStreams\fP keeps the whole input in
an contiguous and extensible area (see \fIMemory(3)\fP).
This implementation is hence very efficient but memory-intensive
because memory will be allocated in chunks of the page size.
Input streams that are known for their small size are
better copied into in-memory streams of \fITexts(3)\fP
or \fILargeTexts(3)\fP.
.PP
Copying streams support \fISubStreams(3)\fP directly and
provide therefore an efficient base for substreams of
previous input data (e.g. for command line histories).
.PP
.I Open
creates a copying stream on base of \fIinput\fP.
Note that \fIinput\fP must not be used otherwise to
avoid gaps in the copy of \fIs\fP.
The returned stream is linked with the input stream
by \fIForwarders(3)\fP.
.SH DIAGNOSTICS
Errors may result from the stream implementation of the
input stream and the associated memory management.
Following errors may be generated by \fICopyingStreams\fP itself:
.Tb invalidInputStream
.Tp cannotAllocMemory
Due to a fatal problem at initialization time,
\fICopyingStreams\fP is in general unable to allocate memory.
.Tp invalidInputStream
The input stream which was given to \fIOpen\fP does
not support the \fIStreams.read\fP capability.
.Tp outOfMemory
\fICopyingStreams\fP is unable to read further from the input
stream because the internal copy cannot be extended.
The problem may result from lack of virtual memory of
the operating system or from a problem of the address
space management because the internal copy must be kept contiguous.
.Tp posOutOfRange
Seek positions are valid only if they range from \fB0\fP
to the end of the internal copy.
It is not possible to enforce reading from the underlying
stream by seeking beyond the current stream length.
.Te
.SH "SEE ALSO"
.Tb Forwarders(3)
.Tp Forwarders(3)
support of filter objects
.Tp Memory(3)
address space management
.Tp Streams(3)
general stream operations
.Tp SubStreams(3)
streams representing an interval of another stream
.Tp Texts(3)
memory-efficient in-memory streams
(see \fILargeTexts(3)\fP as well)
.Te
.SH BUGS
Because the in-memory copy of the underlying stream
is not allocated by the garbage collector, streams
of \fICopyingStreams\fP must be closed explicitly to
allow the allocated memory to be reclaimed.
.PP
The interface is portable but not the current implementation
because portability was traded against efficiency.
.\" ---------------------------------------------------------------------------
.\" $Id: CopyingStreams.3,v 1.2 2000/05/27 11:39:12 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: CopyingStreams.3,v $
.\" Revision 1.2  2000/05/27  11:39:12  borchert
.\" typing error corrected
.\"
.\" Revision 1.1  1996/12/09  14:04:00  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
