'\" t
.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-2004 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH SysTypes 3 "Last change: 3 June 2004" "Release 0.5" "Ulm's Oberon System"
.SH NAME
SysTypes \- standard types for system calls
.SH SYNOPSIS
.Pg
TYPE File = INTEGER;
TYPE Address = Types.Address;
TYPE UntracedAddress = Types.UntracedAddress;
TYPE Count = Types.Count;
TYPE Offset = LONGINT;
TYPE Device = INTEGER;
TYPE Inode = LONGINT;
TYPE Time = LONGINT;
TYPE Size = Types.Size;
TYPE Word = INTEGER;
TYPE Byte = Types.Byte;
.sp 0.7
(* possible values of the idtype parameter (4 bytes), see <sys/procset.h> *)
CONST idPid = 0; (* a process identifier *)
CONST idPpid = 1; (* a parent process identifier *)
CONST idPgid = 2; (* a process group (job control group) identifier *)
CONST idSid = 3; (* a session identifier *)
CONST idCid = 4; (* a scheduling class identifier *)
CONST idUid = 5; (* a user identifier *)
CONST idGid = 6; (* a group identifier *)
CONST idAll = 7; (* all processes *)
CONST idLwpid = 8; (* an LWP identifier *)
TYPE IdType = INTEGER; (* idPid .. idLwpid *)
.Pe
.SH DESCRIPTION
.I SysTypes
exports some types frequently used for system calls.
They correspond to types of \fI/usr/include/sys/types.h\fP:
.TS
l l l
lfI lfB l.
Oberon type	C-type	description
_
File	int	file descriptor
Address	caddr_t	core address type
Offset	off_t	file positions and offsets
Count	off_t	synonym for \fIOffset\fP
Device	dev_t	major and minor number
Inode	ino_t	inode number
Time	time_t	number of seconds since Jan 1, 1970
Size	size_t	number of bytes
.TE
.LP
The type \fIWord\fP is defined to be equivalent to \fBint\fP of the
C language.
C traditionally defines the \fBint\fP data type to have the same width
as the CPU bus (i.e. a machine word).
.SH "SEE ALSO"
.Tb Types(3)
.Tp Types(3)
compiler dependent type definitions
.Te
.SH BUGS
The reason for
.I Count
is historical:
unrevised Oberon does not support parameter names in procedure types.
So different type identifiers were used to distinguish parameters.
.\" ---------------------------------------------------------------------------
.\" $Id: SysTypes.3,v 1.4 2004/06/03 08:07:25 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: SysTypes.3,v $
.\" Revision 1.4  2004/06/03 08:07:25  borchert
.\" IdType added (for Solaris 2.x)
.\"
.\" Revision 1.3  1994/02/23 08:51:55  borchert
.\" some types of SysTypes depends now on Types
.\"
.\" Revision 1.2  91/10/08  16:43:08  borchert
.\" SysTypes.Word added
.\" (was necessary for odb)
.\" 
.\" Revision 1.1  90/08/31  17:02:23  borchert
.\" Initial revision
.\" 
.\" ---------------------------------------------------------------------------
