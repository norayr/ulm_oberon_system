.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-2001 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH FTPServers 3 "Last change: 23 April 2001" "Release 0.5" "Ulm's Oberon System"
.SH NAME
FTPServers \- framework for the inner core of a FTP server
.SH SYNOPSIS
.Pg
TYPE Message = POINTER TO MessageRec;
TYPE MessageRec =
      RECORD
         (Messages.MessageRec)
         request: FTPRequests.Request;
         response: FTPResponses.Response;
         markEventType: Events.EventType;
      END;
.sp 0.7
TYPE Server = POINTER TO ServerRec;
TYPE ServerRec =
      RECORD
         (Services.ObjectRec)
         authorized: BOOLEAN;
         finished: BOOLEAN;
      END;
.sp 0.7
PROCEDURE Create(VAR server: Server);
PROCEDURE ProcessRequest(server: Server;
                         request: FTPRequests.Request;
                         markEventType: Events.EventType;
                         VAR response: FTPResponses.Response);
.Pe
.SH DESCRIPTION
.I FTPServers
provides a framework for the inner core of a FTP server that
processes FTP requests without access to the network connection.
.LP
During the initialization phase of a FTP server for a new
network connection,
.IP \(bu
a new server object is to be created using \fICreate\fP,
.IP \(bu
an arbitrary number of message handlers may be installed
for it using \fIMessages(3)\fP, and
.IP \(bu
the initial state is to be set, if necessary.
.LP
State is maintained by various handlers that were installed by
\fIMessages.InstallHandler\fP on base of disciplines, and some public
server components:
.Tb authorized
.Tp authorized
indicates whether FTP commands beyond \fIFTPCommands.user\fP,
\fIFTPCommands.pass\fP, and \fIFTPCommands.acct\fP are to be
accepted (initially \fBFALSE\fP).
.Tp finished
is initially \fBFALSE\fP, and set to \fBTRUE\fP on encountering
the \fIFTPCommands.quit\fP command.
.Te
.LP
.I ProcessRequest
checks whether \fIrequest\fP is acceptable at the current
state (in dependence of \fIauthorized\fP), processes some
simple commands itself, and converts all other
requests into messages (of type \fIMessage\fP) and sends them
to \fIserver\fP, using \fIMessages.Send\fP.
Following commands are implemented by \fIProcessRequest\fP:
.Tb
.Tp FTPCommands.quit
sets the public component \fIfinished\fP to \fBTRUE\fP, and
returns a 221 return code.
.Tp FTPCommands.noop
is answered by a 200 return code.
.Te
Attempts to re-authorize when \fIauthorized\fP is already \fBTRUE\fP
are answered with a response code of 230. All commands beyond
authorization commands are rejected with 530 as long \fIauthorized\fP
remains \fBFALSE\fP.
.LP
If, after processing of \fIMessages.Send\fP, the \fIresponse\fP
field of the message remains \fBNIL\fP, an error code is returned:
either 450 (as indication for temporary failures) if error events
were found, or 502 (as indication for an unknown or unsupported command).
.LP
Some commands of the FTP protocol request some intermediate responses,
called marks, on the command channel as the transfer on the separate
channel begins or ends. Marks are to be delivered by raising events
of type \fIFTPResponses.Event\fP using \fImarkEventType\fP as event type.
.SH "SEE ALSO"
.Tb FTPResponses(3)
.Tp FTPRequests(3)
persistent object type for incoming requests.
.Tp FTPResponses(3)
persistent object type for outgoing responses.
.Tp Messages(3)
general abstraction for message handlers.
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: FTPServers.3,v 1.1 2001/04/23 07:21:05 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: FTPServers.3,v $
.\" Revision 1.1  2001/04/23 07:21:05  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
