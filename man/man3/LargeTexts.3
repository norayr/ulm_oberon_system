.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-1996 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH LargeTexts 3 "Last change: 10 July 2003" "Release 0.5" "Ulm's Oberon System"
.SH NAME
LargeTexts \- in-memory streams (alternative implementation)
.SH SYNOPSIS
.Pg
CONST posBeyondCurrentLength = 0;
CONST invalidTruncPos = 1;
CONST errors = 2;
TYPE ErrorEvent = POINTER TO ErrorEventRec;
TYPE ErrorEventRec =
   RECORD
      (Events.EventRec)
      errorcode: SHORTINT;
   END;
VAR errormsg: ARRAY errors OF Events.Message;
VAR error: Events.EventType;
.sp 0.7
TYPE Text = POINTER TO TextRec;
TYPE TextRec = RECORD (Streams.StreamRec) END;
.sp 0.7
PROCEDURE Open(VAR text: Streams.Stream);
.Pe
.SH DESCRIPTION
.I LargeTexts
offers the same semantics as
.I Texts(3)
but with another implementation which assures faster operation
at the possible cost of more memory.
That means that ``Texts'' and ``Texts := LargeTexts'' are
interchangable in the import list of a module without further
modifications.
.SH DIAGNOSTICS
By default, error events for text streams are
being queued.
Write operations fail never and
read operations return \fBFALSE\fP only at the end
of the current text buffer.
Seek and trunc positions may fail due to invalid positions:
.Tb posBeyondCurrentLength
.Tp posBeyondCurrentLength
Negative seek positions and positions beyond the
current length are invalid
because \fITexts\fP does not support holes.
.Tp invalidTruncPos
The trunc position must be non-negative and
the current position must not be subject to a trunc operation.
.Te
.SH AUTHORS
The original implementation is due to Werner Stanglow
(was named \fIDbStrings\fP), the revisions and this
manual page are due to Andreas Borchert.
.SH "SEE ALSO"
.Tb Texts(3)
.Tp Texts(3)
alternative implementation
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: LargeTexts.3,v 1.2 2003/07/10 09:08:17 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: LargeTexts.3,v $
.\" Revision 1.2  2003/07/10 09:08:17  borchert
.\" typo fixed
.\"
.\" Revision 1.1  1996/11/20 07:24:32  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
