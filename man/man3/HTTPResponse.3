.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-1997 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH HTTPResponse 3 "Last change: 24 April 1998" "Release 0.5" "Ulm's Oberon System"
.SH NAME
HTTPResponse \- write HTTP-structures to a stream
.SH SYNOPSIS
.Pg
PROCEDURE StatusLine(s: Streams.Stream; code: INTEGER;
                     versionMajor, versionMinor: SHORTINT);
PROCEDURE Allow(s: Streams.Stream; methods: ARRAY OF CHAR);
PROCEDURE CacheControl(s: Streams.Stream; mechanism: SET);
PROCEDURE Connection(s: Streams.Stream; tokens: ARRAY OF CHAR);
PROCEDURE ContentBase(s: Streams.Stream; baseURL: ARRAY OF CHAR);
PROCEDURE ContentEncoding(s: Streams.Stream; encoding: ARRAY OF CHAR);
PROCEDURE ContentLanguage(s: Streams.Stream; languages: ARRAY OF CHAR);
PROCEDURE ContentLength(s: Streams.Stream; length: LONGINT);
PROCEDURE ContentLocation(s: Streams.Stream; location: ARRAY OF CHAR);
PROCEDURE ContentType(s: Streams.Stream; type, subType, params: ARRAY OF CHAR);
PROCEDURE Date(s: Streams.Stream; date: Times.Time);
PROCEDURE ActualDate(s: Streams.Stream);
PROCEDURE EntityTag(s: Streams.Stream; eTag: ARRAY OF CHAR; weak: BOOLEAN);
PROCEDURE Expires(s: Streams.Stream; date: Times.Time);
PROCEDURE LastModified(s: Streams.Stream; date: Times.Time);
PROCEDURE Location(s: Streams.Stream; url: ARRAY OF CHAR);
PROCEDURE Pragma(s: Streams.Stream; directives: ARRAY OF CHAR);
PROCEDURE Public(s: Streams.Stream; methods: ARRAY OF CHAR);
PROCEDURE RetryAfter(s: Streams.Stream; isDelta: BOOLEAN; delta: LONGINT;
                     date: Times.Time);
PROCEDURE Server(s: Streams.Stream; info: ARRAY OF CHAR);
PROCEDURE TransferEncoding(s: Streams.Stream; encoding: ARRAY OF CHAR);
PROCEDURE Upgrade(s: Streams.Stream; products: ARRAY OF CHAR);
PROCEDURE Vary(s: Streams.Stream; fieldNames: ARRAY OF CHAR);
PROCEDURE WWWAuthenticate(s: Streams.Stream;
                          scheme, realm, param: ARRAY OF CHAR);
PROCEDURE Error(s: Streams.Stream; code: INTEGER; reason: ARRAY OF CHAR);
.Pe
.SH DESCRIPTION
Writes HTTP-status-lines, HTTP-header fields or error texts to a stream. The
necessary <cr>- and <lf>-characters are added.
.PP
\fIStatusLine\fP writes a status line to stream \fIs\fP. The necessary reason
phrase is selected by the \fIcode\fP. Status-line-version is HTTP/1.1.
.PP
\fIAllow\fP, \fICacheControl\fP, \fIConnection\fP, \fIContentBase\fP,
\fIContentEncoding\fP, \fIContentLanguage\fP, \fIContentLength\fP,
\fIContentLocation\fP, \fIContentType\fP, \fIDate\fP, \fIEntityTag\fP,
\fIExpires\fP, \fILastModified\fP, \fILocation\fP, \fIPragma\fP, \fIPublic\fP,
\fIRetryAfter\fP, \fIServer\fP, \fITransferEncoding\fP, \fIUpgrade\fP,
\fIVary\fP and \fIWWWAuthenticate\fP write the name-corresponding header fields
to stream \fIs\fP. \fIActualDate\fP writes the actual date in a date header
field to stream \fIs\fP.
.PP
\fIError\fP writes an error-body to \fIs\fP. The text of this body will be
determined by the given \fIcode\fP-value and a \fIreason\fP which specifies the
problem. The mediatype of the message is text/html.
.SH "SEE ALSO"
.Tb Streams(3)
.Tp Streams(3)
stream operations
.Tp Times(3)
time stamps
.Te
.SH AUTHOR
Manfred Rue\*s, University of Ulm
.\" ---------------------------------------------------------------------------
.\" $Id: HTTPResponse.3,v 1.1 1998/04/24 17:47:07 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: HTTPResponse.3,v $
.\" Revision 1.1  1998/04/24  17:47:07  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
