.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-1995 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\" Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\" Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH TermKeys 3 "Last change: 4 January 1996" "Release 0.5" "Ulm's Oberon System"
.SH NAME
TermKeys \- support of function keys on ASCII terminals

.SH SYNOPSIS
.Pg
(* function keys *)
CONST f0 = 0;
CONST f1 = 1;
CONST f2 = 2;
CONST f3 = 3;
CONST f4 = 4;
CONST f5 = 5;
CONST f6 = 6;
CONST f7 = 7;
CONST f8 = 8;
CONST f9 = 9;
CONST f10 = 10;
CONST f11 = 11;
CONST f12 = 12;
CONST f13 = 13;
CONST f14 = 14;
CONST f15 = 15;
CONST f16 = 16;
CONST f17 = 17;
CONST f18 = 18;
CONST f19 = 19;
CONST f20 = 20;
.sp 0.3
CONST cursorup = 21;
CONST cursordown = 22;
CONST cursorleft = 23;
CONST cursorright = 24;
.sp 0.3
CONST insert = 25;
CONST delete = 26;
CONST home = 27;
CONST end = 28;
CONST previous = 29;
CONST next = 30;
.sp 0.3
CONST functionkeys = 31;
.sp 0.7
TYPE FunctionKeySet = ARRAY functionkeys+1 DIV Sets.setsize OF SET;
.sp 0.3
TYPE Key = POINTER TO KeyRec;
TYPE KeyRec =
   RECORD
      (PersistentObjects.ObjectRec)
   END;
.sp 0.3
TYPE SimpleKey = POINTER TO SimpleKeyRec;
TYPE SimpleKeyRec =
   RECORD
      (KeyRec)
      char: CHAR;
   END;
.sp 0.3
TYPE FunctionKey = POINTER TO FunctionKeyRec;
TYPE FunctionKeyRec =
   RECORD
      (KeyRec)
      code: INTEGER;
   END;
.sp 0.3
TYPE ReadProc = PROCEDURE(s: Streams.Stream; VAR key: Key): BOOLEAN;
.sp 0.3
TYPE Interface = POINTER TO InterfaceRec;
TYPE InterfaceRec =
   RECORD
      (Objects.ObjectRec)
      read: ReadProc;
   END;

PROCEDURE Init(s: Streams.Stream; available: FunctionKeySet; if: Interface);
PROCEDURE Read(s: Streams.Stream; VAR key: Key): BOOLEAN;
PROCEDURE Available(s: Streams.Stream; VAR keys: FunctionKeySet);

.Pe
.SH DESCRIPTION
.I TermKeys
adds the capability to read function keys from terminals that have a
keypad, which transmits sequences of bytes when keys are pressed.
\fITermKeys\fP therefore distinguishes two types of keys:

.PP
.I SimpleKey
is a key, which transmits a single character when pressed, 
(i.e. it's ASCII code).
.PP
.I FunctionKey
is a key which transmits a sequence of characters.
.PP
Every function key is assigned a number. \fITermKeys\fP predefines numbers
for a small set of keys. Implementations are free to add their own numbers 
for additional keys.
.PP
.I Init 
has to be called by the underlying terminal implementation with the set of 
available function keys in
.I available
and the interface procedure for reading in
.IR if .
.PP
.I Read
reads a key from the terminal. On success, \fIRead\fP returns TRUE. FALSE is
returned in case of errors or if the interface has not yet been initialized by
the underlying terminal implementation.
.PP
.I Available
returns the set of available function keys.
.SH "SEE ALSO"
.Tb Terminals(3)
.Tp Terminals(3)
abstraction for terminals
.Te
.SH AUTHOR
Ralf Beck
.\" ---------------------------------------------------------------------------
.\" $Id: TermKeys.3,v 1.6 1996/01/04 15:51:53 rbeck Exp rbeck $
.\" ---------------------------------------------------------------------------
.\" $Log: TermKeys.3,v $
.\" Revision 1.6  1996/01/04  15:51:53  rbeck
.\" *** empty log message ***
.\"
.\" Revision 1.5  1996/01/03  15:40:21  rbeck
.\" *** empty log message ***
.\"
.\" Revision 1.4  1996/01/02  15:43:15  rbeck
.\" *** empty log message ***
.\"
.\" Revision 1.3  1995/12/20  14:04:11  rbeck
.\" *** empty log message ***
.\"
.\" Revision 1.2  1995/12/14  14:31:48  rbeck
.\" *** empty log message ***
.\"
.\" Revision 1.1  1995/12/13  14:51:14  rbeck
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
