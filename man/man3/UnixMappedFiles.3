.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-1996 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH UnixMappedFiles 3 "Last change: 6 December 1996" "Release 0.5" "Ulm's Oberon System"
.SH NAME
UnixMappedFiles \- mapping of files into virtual memory
.SH SYNOPSIS
.Pg
CONST read = UnixFiles.read;
CONST write = UnixFiles.write;
CONST rdwr = UnixFiles.rdwr;
TYPE Mode = SHORTINT; (* read..rdwr *)
.sp 0.7
CONST illegalMode = 0;
CONST posOutOfRange = 1;
CONST beyondEndOfStream = 2;
CONST invalidRange = 3;
CONST errors = 4;
.sp 0.3
TYPE ErrorCode = SHORTINT; (* illegalMode..beyondEndOfStream *)
TYPE ErrorEvent = POINTER TO ErrorEventRec;
TYPE ErrorEventRec =
   RECORD
      (Events.EventRec)
      errorcode: ErrorCode;
   END;
.sp 0.3
VAR error: Events.EventType;
VAR errormsg: ARRAY errors OF Events.Message;
.sp 0.7
PROCEDURE Open(VAR s: Streams.Stream; filename: ARRAY OF CHAR;
               mode: Mode; errors: RelatedEvents.Object) : BOOLEAN;
.sp 0.3
PROCEDURE OpenFd(VAR s: Streams.Stream; fd: SysTypes.File;
                 mode: Mode; offset, length: Streams.Count;
                 errors: RelatedEvents.Object) : BOOLEAN;
.Pe
.SH DESCRIPTION
.I UnixMappedFiles
allows to
map a file or a memory object (in the sense of \fImmap(2)\fP)
into virtual memory for faster access than traditional i/o operations.
Note, however, that speed improvements are achieved for larger files
only because of the greater overhead at opening time.
Unlike the streams of \fIUnixFiles(3)\fP,
streams of \fIUnixMappedFiles\fP can neither shrink
(i.e. \fIStreams.Trunc\fP is not supported),
nor be extended.
.I UnixMappedFiles
supports \fISubStreams(3)\fP by a specific implementation.
.PP
.I Open
maps the given \fIfilename\fP into virtual memory and
returns a stream for it.
.I OpenFd
takes the given file descriptor \fIfd\fP
as memory object (must be valid for \fImmap(2)\fP)
and maps the subrange
\fB[\fP\fIoffset\fP, \fIoffset\fP\fB+\fP\fIlength\fP\fB)\fP
into memory.
Independent from \fIoffset\fP, valid positions of the stream
returned range from \fB0\fP to \fIlength\fP.
.SH DIAGNOSTICS
Many errors may be returned by the underlying modules
\fIMemory(3)\fP, \fISysMemory(3)\fP, and \fISysIO(3)\fP.
Following error events may be generated by \fIUnixMappedFiles\fP:
.Tb beyondEndOfStream
.Tp illegalMode
An invalid mode (neither \fIread\fP, \fIwrite\fP, nor \fIrdwr\fP)
was given to \fIOpen\fP or \fIOpenFd\fP.
.Tp posOutOfRange
Seek operations outside the valid range from \fB0\fP to \fIlength\fP
are not valid.
.Tp beyondEndOfStream
A write operation was attempted beyond the stream length.
In this case, even a partial write will not be done,
and \fB0\fP or \fBFALSE\fP will be returned instead.
.Tp invalidRange
This error will be returned on creation of substreams with
a range which is not inside \fB[0\fP..\fIlength\fP\fB]\fP.
.Te
.PP
An assertion of \fIOpenFd\fP checks \fIoffset\fP and
\fIlength\fP for being non-negative.
.SH "SEE ALSO"
.Tb SubStreams(3)
.Tp Memory(3)
address space management
.Tp SubStreams(3)
streams representing intervals of other streams
.Tp Streams(3)
general stream operations
.Tp SysMemory(3)
interface to \fImmap(2)\fP and related calls
.Tp UnixFiles(3)
more general interface to UNIX files
.Te
.SH BUGS
Note that the address space occupied by the mapped file
can be regained by \fIStreams.Close\fP only and never
due to the garbage collector (see \fISysStorage(3)\fP).
.\" ---------------------------------------------------------------------------
.\" $Id: UnixMappedFiles.3,v 1.1 1996/12/06 19:20:49 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: UnixMappedFiles.3,v $
.\" Revision 1.1  1996/12/06  19:20:49  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
