.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-2001 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH FTPDataStreams 3 "Last change: 10 July 2003" "Release 0.5" "Ulm's Oberon System"
.SH NAME
FTPDataStreams \- implementation of FTP data streams
.SH SYNOPSIS
.Pg
PROCEDURE AddHandler(session: FTPSessions.Session;
                     me, peer: Internet.InetAddress);
PROCEDURE SuppressEarlyConnects(session: FTPSessions.Session);
PROCEDURE Open(VAR s: Streams.Stream;
               session: FTPSessions.Session) : BOOLEAN;
.Pe
.SH DESCRIPTION
.I FTPDataStreams
provides a \fIMessages(3)\fP handler for \fIFTPSessions(3)\fP objects
that implements the FTP requests \fIFTPCommands.pasv\fP and
\fIFTPCommands.port\fP.
.LP
.I AddHandler
is to be called shortly after \fIFTPSessions.Create\fP for \fIsession\fP.
The IP address \fIme\fP is used for newly opened ports at the
server side (command \fIFTPCommands.pasv\fP) and \fIpeer\fP is
checked against the IP address given by the client side
(command \fIFTPCommands.port\fP).
.LP
By default, \fIFTPDataStreams\fP initiates immediately a connection
to a port specified by the PORT command to speed up FTP sessions.
Some FTP clients are not prepared for this and
.I SuppressEarlyConnects
requests to suppress this technique. But note that this suppression
takes automatically place on the first failure of a try to connect
early. Failures are usually survived by retrying a connect when
the data connect is needed.
.LP
.I Open
opens a previously established data stream connection for a file
transfer. \fIFTPDataStreams\fP does not distinguish between
uploads and downloads and provides a bidirectional stream instead.
.LP
.I FTPDataStreams
supports \fIFTPTimerEvents\fP by resetting the timer in case
of successful connections.
.SH DIAGNOSTICS
.I Open
returns \fBFALSE\fP if there is no data channel present, or
if the connection could not be established. Please note that
network problems in connecting to a given port (\fIFTPCommands.port\fP
command) may be delayed because all socket operations are done
asynchronously.
.SH "SECURITY CONSIDERATIONS"
Out-of-band channels for data transfers, while required by the
FTP protocol, enable a large number of possible attacks.
Despite that relaying of FTP data transfers was in mind by the
designers of the FTP protocol, it is rejected by the handler
to avoid the utilization of FTP servers for networks attacks
on arbitrary third-party network services. Hence \fIFTPCommands.port\fP
requests are accepted only if
.IP \(bu
the IP address matches that of \fIpeer\fP, and if
.IP \(bu
the port number exceeds or is equal to 1024
(to avoid attacks on privileged ports).
.LP
Sniffers that are observing the main connection could try
to open the ports that were specified by \fIFTPCommands.port\fP or
\fIFTPCommands.pasv\fP commands in parallel.
Following insufficient defense is provided for the \fIFTPCommands.pasv\fP
command:
.IP \(bu
Incoming connections for the port opened for a
\fIFTPCommands.pasv\fP request are rejected if they
do not origin from \fIpeer\fP.
.IP \(bu
The data stream is immediately dropped in case of multiple connections
even if this happens during a transfer.
.LP
Similar checks should be applied on the client side in
case of \fIFTPCommands.port\fP requests.
.SH "SEE ALSO"
.Tb FTPUnixFileSystems(3)
.Tp FTPUnixFileSystems(3)
handler that supports file transfers on base of this module.
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: FTPDataStreams.3,v 1.4 2003/07/10 09:07:11 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: FTPDataStreams.3,v $
.\" Revision 1.4  2003/07/10 09:07:11  borchert
.\" typo fixed
.\"
.\" Revision 1.3  2001/05/08 07:52:33  borchert
.\" FTPServers renamed to FTPSessions
.\"
.\" Revision 1.2  2001/05/03 15:47:37  borchert
.\" SuppressEarlyConnects added
.\"
.\" Revision 1.1  2001/04/23 17:25:37  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
