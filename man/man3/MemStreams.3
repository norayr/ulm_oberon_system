.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-1996 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH MemStreams 3 "Last change: 19 February 2004" "Release 0.5" "Ulm's Oberon System"
.SH NAME
MemStreams \- streams representing a memory area
.SH SYNOPSIS
.Pg
CONST read = 0; write = 1; rdwr = 2;
TYPE Mode = SHORTINT; (* read..rdwr *)
.sp 0.7
CONST beyondEndOfStream = 0;
CONST posOutOfRange = 1;
CONST invalidRange = 2;
CONST errors = 3;
.sp 0.3
TYPE ErrorCode = SHORTINT; (* illegalMode..beyondEndOfStream *)
TYPE ErrorEvent = POINTER TO ErrorEventRec;
TYPE ErrorEventRec =
   RECORD
      (Events.EventRec)
      errorcode: ErrorCode;
   END;
.sp 0.3
VAR error: Events.EventType;
VAR errormsg: ARRAY errors OF Events.Message;
.sp 0.7
PROCEDURE Open(VAR s: Streams.Stream;
               addr: Types.Address; length: Types.Size;
               mode: Mode);
.sp 0.7
PROCEDURE OpenU(VAR s: Streams.Stream;
                addr: Types.UntracedAddress; length: Types.Size;
                mode: Mode);
.Pe
.SH DESCRIPTION
.I MemStreams
allows to access a memory area by stream operations.
Memory streams may be created for any allocated area
of the virtual address space of the current process.
Areas which are under the control of the garbage collector
(see \fISysStorage(3)\fP) are to be passed to \fIOpen\fP,
otherwise \fIOpenU\fP is to be taken for untraced addresses.
.PP
.I MemStreams
may be particularly useful for other stream implementations
which keep their stream contents in-memory in a contiguous buffer
as substream implementation (see \fISubStreams(3)\fP).
.I MemStreams
itself supports \fISubStreams(3)\fP as well.
.PP
It is in the responsibility of the stream creator to assure
that the validity of the memory area is associated with
the validity of the stream, i.e. if the memory area should
become deallocated (no matter by which method), the stream
should terminate (see \fIResources(3)\fP).
Note that this link will be established automatically
if \fIMemStreams\fP is used as a substream implementation
(see \fISubStreams(3)\fP and \fIForwarders(3)\fP).
.LP
Besides the read and write operations, seek and tell,
also trunc operations are permitted which allow to reduce
the length of the stream.
.SH DIAGNOSTICS
Following error events may be generated by \fIMemStreams\fP:
.Tb beyondEndOfStream
.Tp posOutOfRange
Seek operations outside the valid range from \fB0\fP to \fIlength\fP
are not valid. Trunc operations are not permitted which are
outside the valid range or which exclude the current position.
.Tp beyondEndOfStream
A write operation was attempted beyond the stream length.
In this case, even a partial write will not be done,
and \fB0\fP or \fBFALSE\fP will be returned instead.
.Tp invalidRange
This error will be returned on creation of substreams with
a range which is not inside \fB[0\fP..\fIlength\fP\fB]\fP.
.Te
.PP
Note that passing an invalid mode to \fIOpen\fP or \fIOpenU\fP
will result in a runtime error.
.SH "SEE ALSO"
.Tb Forwarders(3)
.Tp Forwarders(3)
filter objects
.Tp Resources(3)
termination of objects and inter-object dependencies
.Tp Streams(3)
general stream operations
.Tp SubStreams(3)
general interface for substreams
.Tp Types(3)
base types including address types
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: MemStreams.3,v 1.2 2004/02/19 16:45:14 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: MemStreams.3,v $
.\" Revision 1.2  2004/02/19 16:45:14  borchert
.\" support of trunc operation added
.\"
.\" Revision 1.1  1996/12/09 10:38:59  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
