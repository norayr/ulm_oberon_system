.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-1995 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH SysModules 3 "Last change: 17 September 1996" "Release 0.5" "Ulm's Oberon System"
.SH NAME
SysModules \- modules and blocks of the current process
.SH SYNOPSIS
.Pg
(* $P- don't trace any pointers *)
(* names are read-only and 0X-terminated *)
TYPE Name = (* $O- *) POINTER TO ARRAY 1024 OF CHAR (* $O= *);
TYPE Address = Types.Address;
.sp 0.7
TYPE BlockList = (* $O- *) POINTER TO BlockListRec (* $O= *);
TYPE BlockListRec =
   RECORD
      next: BlockList; (* in memory order *)
      begin, end: Address; (* of program text *)
      tag: Address; (* pointer list only *)
      name: Name; (* name of procedure (or module) *)
   END;
.sp 0.7
TYPE Module = (* $O- *) POINTER TO ModuleRec (* $O= *);
TYPE ModuleRec =
   RECORD
      next: Module; (* in linkage order *)
      name: Name;
      init: PROCEDURE;
      begin, end: Address; (* of program text *)
      vars: Address; (* global variables *)
      blocks: BlockList; (* procedures and module body *)
      nofblocks: INTEGER; (* number of blocks *)
   END;
(* $P= *)
.sp 0.7
VAR modules: Module;
.Pe
.SH DESCRIPTION
.I SysModules
interfaces the list of modules and blocks which is
generated during compile time and the runtime initialization.
The data structure pointed to by \fImodules\fP is to
be considered read-only.
Please note that the pointer components of \fIModuleRec\fP
and \fIBlockListRec\fP are protected against traces by
the garbage collector (see \fISysStorage(3)\fP).
.PP
\fISysModules\fP is mainly used by the garbage collector
and by \fISysMain\fP which determines the initialization order.
.SH "SEE ALSO"
.Tb SysCommands(3)
.Tp SysCommands(3)
likewise generated list of commands
.Tp SysMain(3)
control of initialization order
.Tp SysStorage(3)
garbage collector
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: SysModules.3,v 1.3 1996/09/17 07:53:35 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: SysModules.3,v $
.\" Revision 1.3  1996/09/17  07:53:35  borchert
.\" - name component added to BlockList
.\" - compiler pragmas in definition copied to manual page
.\"
.\" Revision 1.2  1993/06/11  13:09:02  borchert
.\" Modules renamed to SysModules
.\"
.\" Revision 1.1  1993/01/11  08:31:48  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
