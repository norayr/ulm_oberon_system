.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-1995 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH UnixArgLists 3 "Last change: 16 September 1996" "Release 0.5" "Ulm's Oberon System"
.SH NAME
UnixArgLists \- construction of argument lists
.SH SYNOPSIS
.Pg
TYPE Arguments = SysArgs.Arguments;
TYPE Stream = POINTER TO StreamRec;
TYPE StreamRec = RECORD (Streams.StreamRec) END;
.sp 0.7
PROCEDURE Open(VAR list: Streams.Stream);
PROCEDURE Next(list: Streams.Stream);
PROCEDURE Close(VAR list: Streams.Stream; VAR arglist: Arguments);
.Pe
.SH DESCRIPTION
.I UnixArgLists
is a convenient module to generate argument lists
of type \fISysArgs.Arguments\fP suitable for calls of
.I SysProcess.Exec
and
.IR SysProcess.ExecEnv .
An argument list is a pointer to a vector of pointers to
0X-terminated character arrays.
.LP
.I Open
opens
.I list
for the first argument (write-only).
The returned stream is of type \fIUnixArgLists.Stream\fP.
.I Next
extends the argument list and opens for the next argument.
.I Close
is to be called instead of
.I Streams.Close
to get the argument list.
.PP
Argument lists of \fISysArgs\fP are untraced and therefore
allocated by \fIUntaggedStorage.New\fP.
Thus, they have to be explicitly deallocated by
\fIUntaggedStorage.Dispose\fP.
.SH EXAMPLE
.Pg
PROCEDURE ExecShell(cmd: ARRAY OF CHAR);
   VAR
      list: Streams.Stream;
      arglist: SysArgs.Arguments;
BEGIN
   UnixArgLists.Open(list);
   Write.StringS(list, "sh"); (* command name *)
   UnixArgLists.Next(list); Write.StringS(list, "-c");
   UnixArgLists.Next(list); Write.StringS(list, cmd);
   UnixArgLists.Close(list, arglist);
   SysProcess.Exec("/bin/sh", arglist);
   UntaggedStorage.Dispose(SYSTEM.VAL(Types.UntracedAddress, arglist));
END ExecShell;
.Pe
.SH "SEE ALSO"
.Tb UntaggedStorage(3)
.Tp SysProcess(3)
\fISysProcess.Exec\fP and \fISysProcess.ExecEnv\fP
.Tp SysArgs(3)
definition of \fISysArgs.Arguments\fP
.Tp UnixArguments(3)
processing of arguments
.Tp UntaggedStorage(3)
allocation/deallocation of of untagged areas
.Tp Write(3)
formatted output for streams
.Te
.SH BUGS
\fIStreams.Seek\fP and \fIStreams.Tell\fP are not valid operations
for an \fIUnixArgLists.Stream\fP.
.\" ---------------------------------------------------------------------------
.\" $Id: UnixArgLists.3,v 1.6 1996/09/16 16:12:37 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: UnixArgLists.3,v $
.\" Revision 1.6  1996/09/16  16:12:37  borchert
.\" formatting changed
.\"
.\" Revision 1.5  1994/06/21  15:08:49  borchert
.\" argument lists must be deallocated by UntaggedStorage.Dispose
.\"
.\" Revision 1.4  1992/03/24  09:22:45  borchert
.\" ArgList renamed to UnixArgLists
.\"
.\" Revision 1.3  1991/06/21  15:13:23  borchert
.\" example corrected
.\"
.\" Revision 1.2  91/06/19  15:46:46  borchert
.\" Open & Next: type of stream is now Streams.Stream
.\" ,
.\" 
.\" Revision 1.1  90/08/31  17:02:12  borchert
.\" Initial revision
.\" 
.\" ---------------------------------------------------------------------------
