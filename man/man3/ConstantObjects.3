.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-2000 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH ConstantObjects 3 "Last change: 31 May 2000" "Release 0.5" "Ulm's Oberon System"
.SH NAME
ConstantObjects \- simplified support of persistence for constant
context-independent objects
.SH SYNOPSIS
.Pg
PROCEDURE RegisterType(VAR type: Services.Type;
                       name, baseName: ARRAY OF CHAR);
PROCEDURE Init(object: PersistentObjects.Object;
               type: Services.Type;
               name: ARRAY OF CHAR);
.Pe
.SH DESCRIPTION
.I ConstantObjects
provides a simplified support of persistence for objects that
.IP \(bu
are created during the initialization time of a module,
.IP \(bu
remain constant,
.IP \(bu
may be considered identical independent from the process context, and
.IP \(bu
have their own type extension of \fIPersistentObjects(3)\fP.
.LP
The idea is that instead of transferring the whole contents
of a constant object by marshalling procedures a name is sufficient
to identify the same object in another process.
In addition, constant objects do not get cloned and keep therefore
referential integrity as objects imported or exported by
\fIRemoteObjects(3)\fP.
.LP
.I RegisterType
is to be called instead of \fIPersistentObjects.RegisterType\fP
for types of constant objects. Note that \fItype\fP must be
exclusively used as a type of constant objects in the sense of
this module.
.LP
.I Init
is to be called instead of \fIPersistentObjects.Init\fP
for constant objects. Note that \fIname\fP should be qualified
with the own module name to avoid name conflicts.
.SH DIAGNOSTICS
While various error events may be raised by \fILoader(3)\fP,
\fINetIO(3)\fP, \fIPersistentObjects(3)\fP, \fIStreams(3)\fP,
and the underlying
stream implementation, \fIConstantObjects\fP does not generate
any events itself.
.PP
Assertions fail if
.IP \(bu
\fIPersistentObjects.ReadInto\fP is called for constant objects, or if
.IP \(bu
\fIPersistentObjects.Init\fP was called instead of \fIInit\fP. This
is detected by the interface procedures for \fIPersistentObjects(3)\fP.
.SH "SEE ALSO"
.Tb PersistentObjects(3)
.Tp Loader(3)
dynamic loading of modules
.Tp PersistentObjects(3)
operations for persistent objects
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: ConstantObjects.3,v 1.1 2000/05/31 20:08:01 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: ConstantObjects.3,v $
.\" Revision 1.1  2000/05/31  20:08:01  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
