.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-1995 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH Forwarders 3 "Last change: 20 March 1995" "Release 0.5" "Ulm's Oberon System"
.SH NAME
Forwarders \- forward abstractions through filter objects
.SH SYNOPSIS
.Pg
TYPE Object = Services.Object;
TYPE ForwardProc = PROCEDURE (from, to: Object);
.sp 0.7
PROCEDURE Register(for: ARRAY OF CHAR; forward: ForwardProc);
PROCEDURE RegisterObject(object: Object; forward: ForwardProc);
PROCEDURE Update(object: Object; forward: ForwardProc);
.sp 0.3
PROCEDURE Forward(from, to: Object);
.Pe
.SH DESCRIPTION
.I Forwarders
supports the registration of abstractions which
are able to forward their operations through filter objects.
A filter object delegates all operations of the
associated main abstraction in a possibly modified form.
Usually, filters are not aware of all auxiliary
abstractions, and, on the other side, auxiliary
abstractions do not notice the creation of filter objects.
.PP
Each auxiliary abstraction (i.e. an abstraction
which does not depend on a static type extension)
should register its notification procedure with
\fIRegister\fP.
If the auxiliary abstraction may be applied to all
extensions of \fIServices.Object\fP, "" is to be passed
to \fIfor\fP.
Otherwise a valid type name which has been earlier
passed to \fIServices.CreateType\fP or \fIServices.InitType\fP
may be given to \fIfor\fP.
In this case, \fIforward\fP gets only called if
both objects, \fIfrom\fP and \fIto\fP, are
extensions of that type.
.PP
.I RegisterObject
may be called instead of \fIRegister\fP if
specific objects are supported only and
not all objects which are an extension of a specific type.
This is useful if an auxiliary abstraction is
available on request only.
.PP
.I Update
may be called by auxiliary abstractions when an
interface gets newly installed or changed in a way
which requires \fIforward\fP to be called again
for all dependants of \fIobject\fP.
Note that \fIUpdate\fP unlike \fIRegister\fP
does not assure that the objects passed to \fIforward\fP
will be of a specific extension.
.PP
Each module which acts as a filter should call \fIForward\fP
for each created filter object.
\fIfrom\fP is the filter object and \fIto\fP the
object where the operations of the main abstraction
are delegated to.
Note that \fIForward\fP calls \fIResources.DependsOn\fP
to register the dependency.
The dependency relation between \fIfrom\fP and \fIto\fP
will be automatically removed if either \fIfrom\fP
or \fIto\fP terminates.
.SH DIAGNOSTICS
Some errors are caught by assertions:
.IP \(bu
\fIRegister\fP checks that \fIfor\fP is "" or
a valid type name which is known to \fIServices\fP.
.IP \(bu
\fIForward\fP requires that \fIfrom\fP and \fIto\fP
have been earlier initialized by \fIServices.Init\fP.
.SH "SEE ALSO"
.Tb Resources(3)
.Tp Resources(3)
notification of state changes and management of dependency relations
.Tp Services(3)
type system of the library
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: Forwarders.3,v 1.1 1995/03/20 08:31:34 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: Forwarders.3,v $
.\" Revision 1.1  1995/03/20  08:31:34  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
