.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-2004 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH PersistentNodes 3 "Last change: 25 June 2004" "Release 0.5" "Ulm's Oberon System"
.SH NAME
PersistentNodes \- persistent hierarchy of nodes
.SH SYNOPSIS
.Pg
CONST dbfailure = 0;
CONST dbinconsistent = 1;
CONST transfailure = 2;
CONST noroot = 3;
CONST linkwithoutparent = 4;
CONST nonunique = 5;
CONST badlink = 6;
CONST errors = 7;
TYPE ErrorCode = SHORTINT; (* dbfailure ... *)
TYPE ErrorEvent = POINTER TO ErrorEventRec;
TYPE ErrorEventRec =
      RECORD
         (Events.EventRec)
         errorcode: ErrorCode;
      END;
VAR errormsg: ARRAY errors OF Events.Message;
VAR error: Events.EventType;
.sp 0.7
PROCEDURE Init(container: Containers.Container;
               permissions: Names.Permissions) : BOOLEAN;
.sp 0.7
PROCEDURE Open(VAR root: Names.Node;
               container: Containers.Container) : BOOLEAN;
.Pe
.SH DESCRIPTION
.I PersistentNodes
provides an implementation of \fINames(3)\fP where the
nodes remain persistent thanks to a persistent container.
All capabilities of \fINames(3)\fP are supported. Some notes
regarding this implementation:
.IP \(bu
.I Names.Insert
accepts nodes from other implementations or other containers.
However, these connections are not persistent and are lost
as soon as the container is re-opened. \fIRobustObjects(3)\fP
is recommended to let such objects reappear automatically
as soon as the persistent nodes reappear.
.IP \(bu
.I Names.Destroy
does not permit the root object to be destroyed. This is
rejected independent from the configured \fIShards(3)\fP pot
for the \fINames.destroy\fP access mode. In case of an attempt
to destroy a node by terminating it using \fIResources.Notify\fP,
all subsequent operations on any persistent node from the same container
will fail until the container is re-opened again.
.IP \(bu
Nodes that become unreachable by \fINames.Delete\fP or
\fINames.Destroy\fP operations will be garbage collected by the
next \fIOpen\fP operation.
.LP
.I Init
prepares a container for subsequent use of this module.
This causes all present objects in the container to be deleted
and an empty root node to be inserted with the given
set of access permissions.
.LP
.I Open
opens \fIcontainer\fP and, if successful, makes its
root node available. Some notes:
.IP \(bu
Containers that are passed to \fIOpen\fP are for exclusive
use of \fIPersistentNodes\fP only.
.IP \(bu
\fIPersistentNodes\fP maintains a transaction
(see \fIObjectTransactions(3)\fP) for each opened container which
does not permit any operations on \fIcontainer\fP in parallel.
.IP \(bu
All nodes that are retrieved
from the container terminate as soon as the container terminates.
.SH DIAGNOSTICS
.I PersistentNodes
generates various standard error events of \fINames(3)\fP
and following in addition:
.Tb linkwithoutparent
.Tp dbfailure
an operation on the underlying container failed.
.Tp dbinconsistent
inconsistencies were found by \fIOpen\fP within the
container
.Tp transfailure
the transaction object of \fIObjectTransactions(3)\fP
which is used for the container generated an error
.Tp noroot
no root object was found within the container
(special case of a database inconsistency)
.Tp linkwithoutparent
a link without a valid parent node was found within the container
(special case of a database inconsistency)
.Tp nonunique
two links shared the same name and belonged to the same parent node
(special case of a database inconsistency)
.Tp badlink
a link with an invalid reference was found within the container
(special case of a database inconsistency)
.Te
.SH "SEE ALSO"
.Tb Containers(3)
.Tp Containers(3)
abstraction for persistent object databases
.Tp Names(3)
Oberon name spaces
.Tp Shards(3)
general abstraction for authorizations
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: PersistentNodes.3,v 1.2 2004/06/25 08:38:47 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: PersistentNodes.3,v $
.\" Revision 1.2  2004/06/25 08:38:47  borchert
.\" typo fixed
.\"
.\" Revision 1.1  2004/03/31 16:41:20  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
