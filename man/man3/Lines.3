.\" ---------------------------------------------------------------------------
.\" Ulm's Oberon System Documentation
.\" Copyright (C) 1989-1994 by University of Ulm, SAI, D-89069 Ulm, Germany
.\" ---------------------------------------------------------------------------
.\"    Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\" 
.\"    Permission is granted to copy and distribute modified versions of
.\" this manual under the conditions for verbatim copying, provided also
.\" that the sections entitled "GNU General Public License" and "Protect
.\" Your Freedom--Fight `Look And Feel'" are included exactly as in the
.\" original, and provided that the entire resulting derived work is
.\" distributed under the terms of a permission notice identical to this
.\" one.
.\" 
.\"    Permission is granted to copy and distribute translations of this
.\" manual into another language, under the above conditions for modified
.\" versions, except that the sections entitled "GNU General Public
.\" License" and "Protect Your Freedom--Fight `Look And Feel'", and this
.\" permission notice, may be included in translations approved by the Free
.\" Software Foundation instead of in the original English.
.\" ---------------------------------------------------------------------------
.de Pg
.nf
.ie t \{\
.	sp 0.3v
.	ps 9
.	ft CW
.\}
.el .sp 1v
..
.de Pe
.ie t \{\
.	ps
.	ft P
.	sp 0.3v
.\}
.el .sp 1v
.fi
..
'\"----------------------------------------------------------------------------
.de Tb
.br
.nr Tw \w'\\$1MMM'
.in +\\n(Twu
..
.de Te
.in -\\n(Twu
..
.de Tp
.br
.ne 2v
.in -\\n(Twu
\fI\\$1\fP
.br
.in +\\n(Twu
.sp -1
..
'\"----------------------------------------------------------------------------
'\" Is [prefix]
'\" Ic capability
'\" If procname params [rtype]
'\" Ef
'\"----------------------------------------------------------------------------
.de Is
.br
.ie \\n(.$=1 .ds iS \\$1
.el .ds iS "
.nr I1 5
.nr I2 5
.in +\\n(I1
..
.de Ic
.sp .3
.in -\\n(I1
.nr I1 5
.nr I2 2
.in +\\n(I1
.ti -\\n(I1
If
\.I \\$1
\.B IN
\.IR caps :
.br
..
.de If
.ne 3v
.sp 0.3
.ti -\\n(I2
.ie \\n(.$=3 \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2) : \\$3;
.el \fI\\$1\fP: \fBPROCEDURE\fP(\\*(iS\\$2);
.br
..
.de Ef
.in -\\n(I1
.sp 0.3
..
'\"----------------------------------------------------------------------------
'\"	Strings - made in Ulm (tm 8/87)
'\"
'\"				troff or new nroff
'ds A \(:A
'ds O \(:O
'ds U \(:U
'ds a \(:a
'ds o \(:o
'ds u \(:u
'ds s \(ss
'\"
'\"     international character support
.ds ' \h'\w'e'u*4/10'\z\(aa\h'-\w'e'u*4/10'
.ds ` \h'\w'e'u*4/10'\z\(ga\h'-\w'e'u*4/10'
.ds : \v'-0.6m'\h'(1u-(\\n(.fu%2u))*0.13m+0.06m'\z.\h'0.2m'\z.\h'-((1u-(\\n(.fu%2u))*0.13m+0.26m)'\v'0.6m'
.ds ^ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z^\h'|\\n:u'
.ds ~ \\k:\h'-\\n(.fu+1u/2u*2u+\\n(.fu-1u*0.13m+0.06m'\z~\h'|\\n:u'
.ds C \\k:\\h'+\\w'e'u/4u'\\v'-0.6m'\\s6v\\s0\\v'0.6m'\\h'|\\n:u'
.ds v \\k:\(ah\\h'|\\n:u'
.ds , \\k:\\h'\\w'c'u*0.4u'\\z,\\h'|\\n:u'
'\"----------------------------------------------------------------------------
.ie t .ds St "\v'.3m'\s+2*\s-2\v'-.3m'
.el .ds St *
.de cC
.IP "\fB\\$1\fP"
..
'\"----------------------------------------------------------------------------
.de Op
.TP
.SM
.ie \\n(.$=2 .BI (+|\-)\\$1 " \\$2"
.el .B (+|\-)\\$1
..
.de Mo
.TP
.SM
.BI \\$1 " \\$2"
..
'\"----------------------------------------------------------------------------
.TH Lines 3 "Last change: 2 December 1996" "Release 0.5" "Ulm's Oberon System"
.SH NAME
Lines \- conversion of line positions in stream offsets and vice versa
.SH SYNOPSIS
.Pg
TYPE Location =
   RECORD
      (Objects.ObjectRec)
      (* location in input stream *)
      line, pos: Streams.Count; (* both starting from 0 *)
      offset: Streams.Count;
   END;
.sp 0.7
CONST streamNotScannedYet = 0;
CONST lineNumberOutOfRange = 1;
CONST positionOutOfRange = 2;
CONST invalidPos = 3;
CONST errorcodes = 4;
TYPE ErrorEvent = POINTER TO ErrorEventRec;
TYPE ErrorEventRec =
   RECORD
      (Events.EventRec)
      errorcode: SHORTINT;
   END;
VAR error: Events.EventType;
VAR errormsg: ARRAY errorcodes OF Events.Message;
.sp 0.7
PROCEDURE Scan(s: Streams.Stream);
PROCEDURE Scanned(s: Streams.Stream) : BOOLEAN;
.sp 0.3
PROCEDURE ConvertPos(s: Streams.Stream; pos: Streams.Count;
                     VAR loc: Location);
PROCEDURE ConvertLoc(s: Streams.Stream; loc: Location;
                     VAR pos: Streams.Count);
.sp 0.3
PROCEDURE SetPos(s: Streams.Stream; loc: Location);
PROCEDURE GetPos(s: Streams.Stream; VAR loc: Location);
.sp 0.7
PROCEDURE NumberOfLines(s: Streams.Stream) : Streams.Count;
.Pe
.SH DESCRIPTION
.I Lines
allows to convert ordinary stream positions to
line/column tuples and vice versa.
For this to work,
.I Scan
must be called initially at the position which is to be treated
as the beginning of the first line.
.I Scan
scans the entire stream from the current position and
builds up an internal line table which is attached to the stream.
All other operations lead to \fIstreamNotScannedYet\fP
if \fIScan\fP has not been called previously for the given stream.
Please note that \fIScan\fP doesn't rewind the stream.
.I Scan
should be called again,
if the stream contents gets changed,
if the stream has been extended,
or if the line terminator (see \fIStreamDisciplines(3)\fP) has been changed.
.PP
.I Scanned
returns \fBTRUE\fP if the given stream has been scanned yet
by \fILines\fP.
.PP
.I ConvertPos
takes a stream offset and converts it into a line/column tuple.
Please note that line numbers (component \fIline\fP)
and columns (component \fIpos\fP) are counted from \fB0\fP.
The given stream offset must not point inside a line terminator
or beyond the stream length.
.I ConvertLoc
takes a location and converts it into an absolute stream position.
.PP
.I Lines
offers the operations \fIGetPos\fP and \fISetPos\fP which are similar
to those of \fIStreams(3)\fP but take a location instead
of an absolute stream position.
.PP
.I NumberOfLines
returns the number of lines which have been found by \fIScan\fP.
.SH DIAGNOSTICS
Errors lead to events raised by \fILines\fP, \fIStreams\fP,
or an underlying implementation.
Following errors may be raised by \fILines\fP:
.Tb lineNumberOutOfRange
.Tp streamNotScannedYet
One of the operations has been called without a prior invocation
of \fIScan\fP for the given stream.
.Tp lineNumberOutOfRange
A line number was given to \fIConvertPos\fP or \fISetPos\fP
which was outside the range \fB[0..\fP\fINumberOfLines(s)\fP\fB)\fP.
.Tp positionOutOfRange
A position inside a line (column) was given which was
outside the range \fB[0..\fP\fIline length\fP\fB]\fP.
.Tp invalidPos
An absolute stream position was given to \fIConvertPos\fP or \fISetpos\fP
which pointed inside a line terminator or beyond the known stream length.
.Te
.SH "SEE ALSO"
.Tb StreamConditions(3)
.Tp RelatedEvents(3)
error handling
.Tp StreamConditions(3)
definition of line terminator
.Tp Streams(3)
stream operations and stream positions
.Te
.\" ---------------------------------------------------------------------------
.\" $Id: Lines.3,v 1.2 1996/12/02 14:26:42 borchert Exp $
.\" ---------------------------------------------------------------------------
.\" $Log: Lines.3,v $
.\" Revision 1.2  1996/12/02  14:26:42  borchert
.\" Scanned added
.\"
.\" Revision 1.1  1994/07/25  12:56:44  borchert
.\" Initial revision
.\"
.\" ---------------------------------------------------------------------------
