(* Ulm's Oberon Library
   Copyright (C) 1989-1994 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: InetTCP.od,v 1.4 2004/04/02 18:46:16 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: InetTCP.od,v $
   Revision 1.4  2004/04/02 18:46:16  borchert
   Internet.Address changed to IPv4TCPSockets.SocketAddress

   Revision 1.3  1995/03/11 21:11:34  borchert
   - renamed from Internet to InetTCP
   - direct socket accessing routines moved to (newly created) Internet

   Revision 1.2  1994/07/04  08:23:34  borchert
   GetName added
   AcceptCondition renamed to CreateAcceptCondition

   Revision 1.1  1994/02/23  07:25:11  borchert
   Initial revision

   ----------------------------------------------------------------------------
   AFB 10/91
   ----------------------------------------------------------------------------
*)

DEFINITION InetTCP;

   (* interface to Networks *)

   IMPORT IPv4TCPSockets, Networks;

   TYPE
      Address = IPv4TCPSockets.SocketAddress;

   PROCEDURE CreateAddress(VAR address: Networks.Address; ipaddr: Address);
   PROCEDURE ConvertAddress(address: Networks.Address; VAR ipaddr: Address);
   PROCEDURE SetAddress(address: Networks.Address; ipaddr: Address);

END InetTCP.
