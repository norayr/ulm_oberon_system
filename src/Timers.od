(* Ulm's Oberon Library
   Copyright (C) 1989-1994 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: Timers.od,v 1.1 1994/02/22 20:11:29 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: Timers.od,v $
   Revision 1.1  1994/02/22  20:11:29  borchert
   Initial revision

   ----------------------------------------------------------------------------
   AFB 1/92
   ----------------------------------------------------------------------------
*)

DEFINITION Timers;

   IMPORT Clocks, Disciplines, Events, Objects, Times;

   TYPE
      Timer = POINTER TO TimerRec;
      TimerRec = RECORD (Objects.ObjectRec) END;

   CONST
      invalidTimer = 0; (* timer is no longer valid *)
      queueLocked = 1; (* the queue is currently locked *)
      badClock = 2; (* clock is unable to maintain a timer *)
      errorcodes = 3;
   TYPE
      ErrorEvent = POINTER TO ErrorEventRec;
      ErrorEventRec =
	 RECORD
	    (Events.EventRec)
	    errorcode: SHORTINT;
	 END;
   VAR
      errormsg: ARRAY errorcodes OF Events.Message;
      error: Events.EventType;

   PROCEDURE Add(clock: Clocks.Clock; time: Times.Time; event: Events.Event;
		 VAR timer: Timer);
   PROCEDURE Remove(timer: Timer);
   PROCEDURE Schedule(clock: Clocks.Clock;
		      time: Times.Time; event: Events.Event);

   PROCEDURE NextEvent(clock: Clocks.Clock; VAR time: Times.Time) : BOOLEAN;

END Timers.
