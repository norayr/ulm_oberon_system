(* Ulm's Oberon Library
   Copyright (C) 1989-1994 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: Scan.od,v 1.1 1994/02/23 07:46:48 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: Scan.od,v $
   Revision 1.1  1994/02/23  07:46:48  borchert
   Initial revision

   ----------------------------------------------------------------------------
   AFB 6/89
   ----------------------------------------------------------------------------
*)

DEFINITION Scan;

   (* formatted scanning;
      Scan.F[0-9] reads from Streams.stdin

      formats are close to those of scanf(3)
   *)

   IMPORT Streams;

   PROCEDURE F(fmt: ARRAY OF CHAR);
   PROCEDURE F1(fmt: ARRAY OF CHAR; VAR p1: ARRAY OF BYTE);
   PROCEDURE F2(fmt: ARRAY OF CHAR; VAR p1, p2: ARRAY OF BYTE);
   PROCEDURE F3(fmt: ARRAY OF CHAR; VAR p1, p2, p3: ARRAY OF BYTE);
   PROCEDURE F4(fmt: ARRAY OF CHAR; VAR p1, p2, p3, p4: ARRAY OF BYTE);
   PROCEDURE F5(fmt: ARRAY OF CHAR; VAR p1, p2, p3, p4, p5: ARRAY OF BYTE);
   PROCEDURE F6(fmt: ARRAY OF CHAR; VAR p1, p2, p3, p4, p5, p6: ARRAY OF BYTE);
   PROCEDURE F7(fmt: ARRAY OF CHAR;
		VAR p1, p2, p3, p4, p5, p6, p7: ARRAY OF BYTE);
   PROCEDURE F8(fmt: ARRAY OF CHAR;
		VAR p1, p2, p3, p4, p5, p6, p7, p8: ARRAY OF BYTE);
   PROCEDURE F9(fmt: ARRAY OF CHAR;
		VAR p1, p2, p3, p4, p5, p6, p7, p8, p9: ARRAY OF BYTE);

   PROCEDURE S(in: Streams.Stream; fmt: ARRAY OF CHAR);
   PROCEDURE S1(in: Streams.Stream; fmt: ARRAY OF CHAR; VAR p1: ARRAY OF BYTE);
   PROCEDURE S2(in: Streams.Stream; fmt: ARRAY OF CHAR;
		VAR p1, p2: ARRAY OF BYTE);
   PROCEDURE S3(in: Streams.Stream; fmt: ARRAY OF CHAR;
		VAR p1, p2, p3: ARRAY OF BYTE);
   PROCEDURE S4(in: Streams.Stream; fmt: ARRAY OF CHAR;
		VAR p1, p2, p3, p4: ARRAY OF BYTE);
   PROCEDURE S5(in: Streams.Stream; fmt: ARRAY OF CHAR;
		VAR p1, p2, p3, p4, p5: ARRAY OF BYTE);
   PROCEDURE S6(in: Streams.Stream; fmt: ARRAY OF CHAR;
		VAR p1, p2, p3, p4, p5, p6: ARRAY OF BYTE);
   PROCEDURE S7(in: Streams.Stream; fmt: ARRAY OF CHAR;
		VAR p1, p2, p3, p4, p5, p6, p7: ARRAY OF BYTE);
   PROCEDURE S8(in: Streams.Stream; fmt: ARRAY OF CHAR;
		VAR p1, p2, p3, p4, p5, p6, p7, p8: ARRAY OF BYTE);
   PROCEDURE S9(in: Streams.Stream; fmt: ARRAY OF CHAR;
		VAR p1, p2, p3, p4, p5, p6, p7, p8, p9: ARRAY OF BYTE);

END Scan.
