(* Oberon Library      -    SunOS 4.1    -      AFB 8/90 *)
(* (C) University of Ulm, Sektion Informatik, D-7900 Ulm *)

DEFINITION MC68881;

   (* library interface to MC68881 instructions *)

   CONST
      available = FALSE; (* TRUE if MC68881 present *)

      (* rounding modes *)
      toNearest = 0;
      towardZero = 1;
      towardMinusInfinity = 2;
      towardPlusInfinity = 3;

      (* rounding precision *)
      extended = 0;
      single = 1;
      double = 2;

      (* exceptions *)
      branchOnUnordered = 0;
      signalingNotANumber = 1;
      operandError = 2;
      overflow = 3;
      underflow = 4;
      divideByZero = 5;
      inexactOperation = 6;
      inexactDecimalInput = 7;

   CONST
      floatlen = 4; (* length of a single precision real number *)

   (* monadic operations *)

   PROCEDURE FACOS(x: LONGREAL) : LONGREAL;
   PROCEDURE FASIN(x: LONGREAL) : LONGREAL;
   PROCEDURE FATAN(x: LONGREAL) : LONGREAL;
   PROCEDURE FATANH(x: LONGREAL) : LONGREAL;
   PROCEDURE FCOS(x: LONGREAL) : LONGREAL;
   PROCEDURE FCOSH(x: LONGREAL) : LONGREAL;
   PROCEDURE FETOX(x: LONGREAL) : LONGREAL;
   PROCEDURE FETOXM1(x: LONGREAL) : LONGREAL;
   PROCEDURE FGETEXP(x: LONGREAL) : LONGREAL;
   PROCEDURE FGETMAN(x: LONGREAL) : LONGREAL;
   PROCEDURE FLOG10(x: LONGREAL) : LONGREAL;
   PROCEDURE FLOG2(x: LONGREAL) : LONGREAL;
   PROCEDURE FLOGN(x: LONGREAL) : LONGREAL;
   PROCEDURE FLOGNP1(x: LONGREAL) : LONGREAL;
   PROCEDURE FSIN(x: LONGREAL) : LONGREAL;
   PROCEDURE FSINH(x: LONGREAL) : LONGREAL;
   PROCEDURE FSQRT(x: LONGREAL) : LONGREAL;
   PROCEDURE FTAN(x: LONGREAL) : LONGREAL;
   PROCEDURE FTANH(x: LONGREAL) : LONGREAL;
   PROCEDURE FTENTOX(x: LONGREAL) : LONGREAL;
   PROCEDURE FTWOTOX(x: LONGREAL) : LONGREAL;

   PROCEDURE GetExceptionEnable(VAR exceptions: SET);
   PROCEDURE SetExceptionEnable(exceptions: SET);

   PROCEDURE GetRoundingMode(VAR precision, mode: INTEGER);
   PROCEDURE SetRoundingMode(precision, mode: INTEGER);

   (* conversions to and from single precision (C's float);
      float must consist of at least floatlen bytes
   *)

   PROCEDURE RealToFloat(real: LONGREAL; VAR float: ARRAY OF BYTE);
   PROCEDURE FloatToReal(float: ARRAY OF BYTE; VAR real: LONGREAL);

END MC68881.
