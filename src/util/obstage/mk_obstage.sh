#!/bin/sh
#------------------------------------------------------------------------------
# compile and load all modules that are relevant for bootstrapping
# prerequisites: a working system is available with
# - bootstrap-independent scripts and commands in ibindir
#   (just genobrts and tof2elf are looked up here)
# - binaries in bindir
# - a running nameservice, contactable via onsroot
# - a CDB daemon is running at basedir with auth
# all output files (objs from the database, tofs generated by
# obtofgen, ELF objects created by tof2elf, and binaries are
# left in stagedir)
#------------------------------------------------------------------------------

cmdname=`basename $0`
usage="Usage: $cmdname stagedir ibindir bindir onsroot basedir auth"
if [ $# -ne 6 ]
then
   echo >&2 "$usage"; exit 1
fi
stagedir="$1"; shift
ibindir="$1"; shift
bindir="$1"; shift
onsroot="$1"; shift
basedir="$1"; shift
auth="$1"; shift

ONS_ROOT="$onsroot"
export ONS_ROOT

runtime=`$ibindir/genobrts -r`
core='
CDBCheckoutSource
CDBDaemon
MakeDirectory
NamesShell
NodeStatus
OberonCheckIn
OberonDependencies
OberonI386TransportableObjectFormatGenerator
OberonLoader
OberonZap
PathWaiter
PersistentNameServer
ShutdownNode
'

build() {
   module="$1"
   output="$2"
   $ibindir/genobrts -o start.s $module &&
   as -32 -o start.o start.s &&
   ld -m elf_i386 -e _entry -o $output start.o libo.a &&
   rm -f start.[os]
}

mkdir -p $stagedir &&
cd $stagedir &&
rm -f *.obj *.tof *.o libo.a &&
$bindir/obload -a $auth -b $basedir -A I386 -l 0 -M -O %m.obj \
      $core $runtime &&
for obj in *.obj
do
   tof=`basename $obj .obj`.tof
   $bindir/obtofgen -o $tof $obj || exit 1
done &&
for tof in *.tof
do
   o=`basename $tof .tof`.o
   $ibindir/tof2elf -o $o $tof || exit 1
done &&
ar q libo.a *.o &&
build CDBCheckoutSource obco &&
build CDBDaemon cdbd &&
build NamesShell nsh &&
build OberonCheckIn obci &&
build OberonDependencies obdeps &&
build OberonI386TransportableObjectFormatGenerator obtofgen &&
build OberonLoader obload &&
build OberonZap obzap &&
build PersistentNameServer pons &&
build NodeStatus onsstat &&
build ShutdownNode onsshut &&
build MakeDirectory onsmkdir &&
build PathWaiter onswait
