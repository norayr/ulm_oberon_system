DEFINITION TermLineGraphics;

   (* this module provides routines for simple drawing *)
   (* operations on ascii-terminals                    *)

   IMPORT Streams; 

   CONST (* graphics characters *)
      verticalLine = 0;
      horizontalLine = 1;
      lowerRightCorner = 2;
      upperRightCorner = 3;
      upperLeftCorner = 4;
      lowerLeftCorner = 5;
      cross = 6;
      leftTee = 7;
      rightTee = 8;
      bottomTee = 9;
      topTee = 10;
      chars = 11;

      (* character sets *)
      standard = 0; graphics = 1;

   TYPE
      GraphicsChar =
	 RECORD
	    set: SHORTINT; (* character set set to use *)
	    char: CHAR;    (* ASCII code of character *)
         END;
      
      CharSet = ARRAY chars OF GraphicsChar; (* set used for drawing *)

      SetProc = PROCEDURE (s: Streams.Stream; charset: SHORTINT);

   PROCEDURE Init(s: Streams.Stream; charset: CharSet; setCharset: SetProc);
   (* initialize the graphics characterset *)
   (* must be done by terminal implementation *)

   PROCEDURE Draw(s: Streams.Stream; char: SHORTINT);
   (* draw one of the characters above *)

   PROCEDURE HLine(s: Streams.Stream; line, column, length: INTEGER);
   (* draw a horizontal line from position (line, column) with *)
   (* length (length)                                          *)
   (* HLine doesn't check for validity of parameters           *)

   PROCEDURE VLine(s: Streams.Stream; line, column, length: INTEGER);
   (* draw a vertical line from position (line, column) with   *)
   (* length (length)                                          *)
   (* VLine doesn't check for validity of parameters           *)
   (* terminal must be in raw mode for proper operation        *)

   PROCEDURE Box(s: Streams.Stream; line, column, lines, columns: INTEGER);
   (* draw a box starting at position (line, column) with *)
   (* dimensions (lines, columns)                         *)
   (* Box doesn't check for validity of parameters        *)
   (* terminal must be in raw mode for proper operation   *)

END TermLineGraphics.
