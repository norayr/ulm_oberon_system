(* Ulm's Oberon Library
   Copyright (C) 1989-1994 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: IEEE.od,v 1.1 1994/02/23 07:45:17 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: IEEE.od,v $
   Revision 1.1  1994/02/23  07:45:17  borchert
   Initial revision

   ----------------------------------------------------------------------------
   AFB 7/89
   ----------------------------------------------------------------------------
*)

DEFINITION IEEE;

   (* this module is portable as far as a IEEE floating point processor
      is present
   *)

   VAR
      plusInfinity: REAL;
      minusInfinity: REAL;
      nan: REAL;		(* Not-A-Number *)
      snan: REAL;		(* Signaling Not-A-Number *)

   PROCEDURE Normalized(real: LONGREAL) : BOOLEAN;

   PROCEDURE Valid(real: LONGREAL) : BOOLEAN;
      (* returns TRUE if real is normalized or denormalized
	     but FALSE for infinity and Not-A-Numbers
      *)

   PROCEDURE NotANumber(real: LONGREAL) : BOOLEAN;
      (* returns TRUE if real is a (signaling) Not-A-Number *)

END IEEE.
