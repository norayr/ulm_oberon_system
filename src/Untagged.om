MODULE Untagged;

   IMPORT ConstStrings, Write, Streams;

   TYPE
      UTR = RECORD
         mod, name : ConstStrings.String;
      END;

   VAR
      uts : ARRAY 100 OF UTR;
      utn : LONGINT;

   PROCEDURE IsTagged (mod, name : ConstStrings.String) : BOOLEAN;
      VAR
         i : INTEGER;
   BEGIN
      i := 0;
      Write.String ("Testing: ");
      ConstStrings.Write (Streams.stdout, mod); Write.String (" ");
      ConstStrings.Write (Streams.stdout, name);
      WHILE i < utn DO
         IF (ConstStrings.Compare (mod, uts[i].mod) = 0)  &
	    (ConstStrings.Compare (name, uts[i].name) = 0) THEN
	    RETURN FALSE;
	 END;
         INC (i);
      END;
      RETURN TRUE;
   END IsTagged;
   
   PROCEDURE Register (moda, namea : ARRAY OF CHAR);
   BEGIN
      ConstStrings.Create (uts[utn].mod, moda);
      ConstStrings.Create (uts[utn].name, namea);
      INC (utn);
   END Register;

BEGIN
   utn := 0;
   Register ("SysStorage", "Region");
   Register ("SysStorage", "RegionRec");
   Register ("SysStorage", "DummyTag");
   Register ("SysStorage", "DummyTagRec");
   Register ("SysStorage", "Coroutine");
   Register ("SysStorage", "CoroutineRec");
   Register ("SysStorage", "Header");
   Register ("SysStorage", "HeaderRec");
   Register ("CopyingStreams", "Buffer");
   Register ("CopyingStreams", "BufferArray");
   Register ("Coroutines", "CoroutineTag");
   Register ("Coroutines", "CoroutineTagRec");
   Register ("SMStreams", "RingBuffer");
   Register ("SMStreams", "RingBufferRec");
   Register ("SMStreams", "RingFlags");
   Register ("SMStreams", "RingFlagsRec");
   Register ("SMStreams", "Exchange");
   Register ("SMStreams", "ExchangeType");
   Register ("SMStreams", "Flag");
   Register ("SMStreams", "FlagType");
   Register ("SMStreams", "OpenExchange");
   Register ("SMStreams", "OpenExchangeType");
   Register ("SysModules", "Module");
   Register ("SysModules", "ModuleRec");
   Register ("SysModules", "BlockList");
   Register ("SysModules", "BlockListRec");
   Register ("UnixArgLists", "Arguments");
   Register ("SysArgs", "Arguments");
   Register ("SysArgs", "Arguments");
   Register ("SysArgs", "Argument");
END Untagged.
