(* Ulm's Oberon Library
   Copyright (C) 1989-1994 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: Coroutines.od,v 1.1 1994/02/23 07:48:15 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: Coroutines.od,v $
   Revision 1.1  1994/02/23  07:48:15  borchert
   Initial revision

   ----------------------------------------------------------------------------
   AFB 2/90
   ----------------------------------------------------------------------------
*)

DEFINITION Coroutines;

   (* run time interface to coroutines *)

   IMPORT SYS := SYSTEM;

   TYPE
      Coroutine = SYS.COROUTINE;

      (* $P- $O- *)
      CoroutineTag = POINTER TO CoroutineTagRec;
      CoroutineTagRec = RECORD END;
      (* $P= $O= *)

   VAR
      defaultsize: LONGINT;
	 (* default stack size of a coroutine,
	    the size of the activation record of the procedure
	    calling CRSPAWN is added to default;
	    the default is taken if the second parameter of CRSPAWN
	    is omitted
	 *)
      tag: CoroutineTag; (* used for all coroutines *)

      main: Coroutine;
	 (* is allocated during initialisation of this module
	    and points to the main coroutine
	 *)

      source: Coroutine;
	 (* the last CRSWITCH operation was executed by this coroutine *)

      current: Coroutine;
	 (* coroutine currently active *)

END Coroutines.
