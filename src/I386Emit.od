DEFINITION I386Emit;

   IMPORT Conclusions, FragmentedStreams, Op := Operands,
      Gen := OpcodeGen, Pentium, Iterators, Disciplines,
      SYSTEM, Streams, ConstStrings, Read, Write, Regs := Registers,
      Relocations;

   TYPE

      FixedData = POINTER TO FixedDataRec;
      FixedDataRec = RECORD
         (Disciplines.ObjectRec)
	 align : LONGINT;
      END;


      StrTable = POINTER TO StrTableRec;
      StrTableRec = RECORD
	 (FixedDataRec)
      END;

   PROCEDURE CreateFixedData (VAR data : FixedData);

   PROCEDURE CreateStringTable (VAR rodata : StrTable);

   PROCEDURE OpenFixedData (rodata : FixedData; VAR s : Streams.Stream);

   PROCEDURE InstrMode (s : FragmentedStreams.Stream; mnem : Gen.Mnemonic;
		        nops : INTEGER; ops : ARRAY OF Op.Operand;
		        modeadd : SET; morereg : Regs.Value);

   PROCEDURE Instr (s : FragmentedStreams.Stream; mnem : Gen.Mnemonic;
		       nops : INTEGER; ops : ARRAY OF Op.Operand);
   PROCEDURE Instr0 (s : FragmentedStreams.Stream; mnem : Gen.Mnemonic);
   PROCEDURE Instr1 (s : FragmentedStreams.Stream; mnem : Gen.Mnemonic;
                       op : Op.Operand);
   PROCEDURE Instr2 (s : FragmentedStreams.Stream; mnem : Gen.Mnemonic;
                       op1, op2 : Op.Operand);
   PROCEDURE Instr3 (s : FragmentedStreams.Stream; mnem : Gen.Mnemonic;
                       op1, op2, op3 : Op.Operand);
                       

   PROCEDURE Jump (s : FragmentedStreams.Stream;
		   dest : FragmentedStreams.Label);

   PROCEDURE Call (s : FragmentedStreams.Stream;
		   dest : FragmentedStreams.Label);

   PROCEDURE CallExtern (s : FragmentedStreams.Stream; regs : Regs.RegSet;
                         ref : Relocations.SymRef);

   PROCEDURE Distance (s : FragmentedStreams.Stream;
			   origin, dest : FragmentedStreams.Label);

   PROCEDURE Bytes (s : Streams.Stream; data, sz : LONGINT);

   (* Write a string to the rodata block and return the offset of the
    * first byte. We find identical strings that are added more than
    * once and add only a single copy.
    * str must be a ConstString.String in the domain rodata.hash. If
    * you don't have such a string use EmitStringStream or EmitStringArray
    * instead.
    *)

   PROCEDURE StringBase (rodata : StrTable; str : ConstStrings.String;
			 VAR len : Streams.Count) : Streams.Count;

   PROCEDURE StringStream (rodata : StrTable; string : Streams.Stream;
			       VAR len : Streams.Count) : Streams.Count;

   PROCEDURE StringArray (rodata : StrTable; string : ARRAY OF CHAR;
			      VAR len : Streams.Count) : Streams.Count;

   PROCEDURE JumpCC (s : FragmentedStreams.Stream;
		         dest : FragmentedStreams.Label; cc : LONGINT);

   PROCEDURE Align (s : FragmentedStreams.Stream; val : INTEGER);

   PROCEDURE AlignFixed (data : FixedData; val : LONGINT) : LONGINT;

   PROCEDURE LongFixed (data : FixedData;
                         val : LONGINT) : LONGINT;

   PROCEDURE UnfixedObjects (s : FragmentedStreams.Stream;
			     start : FragmentedStreams.Label);

END I386Emit.
