(* Ulm's Oberon Library
   Copyright (C) 1989-1995 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: UnixCommand.od,v 1.2 1995/04/13 16:08:38 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: UnixCommand.od,v $
   Revision 1.2  1995/04/13  16:08:38  borchert
   cleanup & addition of error handling

   ----------------------------------------------------------------------------
*)

DEFINITION UnixCommandLine;

   IMPORT Args, Events;

   CONST
      missingValue = 0;    (* an option was given without associated value *)
      invalidValue = 1;    (* an invalid value was given *)
      unknownOption = 2;   (* unknown flag or option name *)
      unexpectedArgs = 3;  (* no further arguments expected *)
      helpRequested = 4;   (* explicit request of help information *)
      errors = 5;
   TYPE
      ErrorEvent = POINTER TO ErrorEventRec;
      ErrorEventRec =
	 RECORD
	    (Events.EventRec)
	    args: Args.Arguments;
	    code: SHORTINT; (* missingValue..unexpectedArgs *)
	    name: ARRAY 80 OF CHAR;
	 END;
   VAR
      error: Events.EventType;
      errormsg: ARRAY errors OF Events.Message;

   PROCEDURE Include(scanners: Args.ScannerList; priority: Args.Priority);

END UnixCommandLine.
