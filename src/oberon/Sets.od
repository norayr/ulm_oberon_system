(* Ulm's Oberon Library
   Copyright (C) 1989-1994 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: Sets.od,v 1.3 1999/06/06 06:44:40 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: Sets.od,v $
   Revision 1.3  1999/06/06  06:44:40  borchert
   bug fix: CharSet was too small

   Revision 1.2  1995/03/16  16:25:20  borchert
   assertions of Assertions replaced by real assertions

   Revision 1.1  1994/02/22  20:10:09  borchert
   Initial revision

   ----------------------------------------------------------------------------
   AFB 9/89
   ----------------------------------------------------------------------------
*)

DEFINITION Sets;

   CONST
      setsize = MAX(SET) + 1;

   TYPE
      CharSet = ARRAY ORD(MAX(CHAR)) + 1 DIV setsize OF SET;

   PROCEDURE InitSet(VAR set: ARRAY OF SET);

   PROCEDURE Complement(VAR set: ARRAY OF SET);

   PROCEDURE In(VAR set: ARRAY OF SET; i: LONGINT) : BOOLEAN;

   PROCEDURE Incl(VAR set: ARRAY OF SET; i: LONGINT);
   PROCEDURE Excl(VAR set: ARRAY OF SET; i: LONGINT);

   PROCEDURE CharIn(VAR charset: CharSet; ch: CHAR) : BOOLEAN;

   PROCEDURE InclChar(VAR charset: CharSet; ch: CHAR);
   PROCEDURE ExclChar(VAR charset: CharSet; ch: CHAR);

   PROCEDURE Intersection(set1, set2: ARRAY OF SET; VAR result: ARRAY OF SET);
   PROCEDURE SymDifference(set1, set2: ARRAY OF SET; VAR result: ARRAY OF SET);
   PROCEDURE Union(set1, set2: ARRAY OF SET; VAR result: ARRAY OF SET);
   PROCEDURE Difference(set1, set2: ARRAY OF SET; VAR result: ARRAY OF SET);

   PROCEDURE Equal(set1, set2: ARRAY OF SET) : BOOLEAN;
   PROCEDURE Subset(set1, set2: ARRAY OF SET) : BOOLEAN;

   PROCEDURE Card(set: ARRAY OF SET) : INTEGER;

END Sets.
