(* Ulm's Oberon Library
   Copyright (C) 1989-1998 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: OberonStdPr.od,v 1.1 1998/03/29 08:07:38 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: OberonStdPr.od,v $
   Revision 1.1  1998/03/29 08:07:38  borchert
   Initial revision

   ----------------------------------------------------------------------------
*)

DEFINITION OberonStdProcedures;

   (* architecture independent standard procedures and functions;
      note that not all of them are in common use or in each case
      visible
   *)

   IMPORT Sym := OberonSymbols;

   CONST
      abs = 0;             get = 11;            odd = 22;
      adr = 1;             halt = 12;           ord = 23;
      ash = 2;             inc = 13;            put = 24;
      assert = 3;          incl = 14;           rot = 25;
      bit = 4;             len = 15;            short = 26;
      cap = 5;             long = 16;           size = 27;
      chr = 6;             lsh = 17;            sysnew = 28;
      copy = 7;            max = 18;            val = 29;
      dec = 8;             min = 19;
      entier = 9;          move = 20;
      excl = 10;           new = 21;

      stdprocs = 30;
   TYPE
      StdProc = SHORTINT; (* abs .. val *)

   TYPE
      StdProcedure = POINTER TO StdProcedureRec;
      StdProcedureRec =
	 RECORD
	    (Sym.BuiltInProcedureRec)
	    stdproc: StdProc;
	 END;

   VAR
      absF: Sym.Ident;            longF: Sym.Ident;
      adrF: Sym.Ident;            lshF: Sym.Ident;
      ashF: Sym.Ident;            maxF: Sym.Ident;
      assertP: Sym.Ident;         minF: Sym.Ident;
      bitF: Sym.Ident;            moveP: Sym.Ident;
      capF: Sym.Ident;            newP: Sym.Ident;
      chrF: Sym.Ident;            oddF: Sym.Ident;
      copyP: Sym.Ident;           ordF: Sym.Ident;
      decP: Sym.Ident;            putP: Sym.Ident;
      entierF: Sym.Ident;         rotF: Sym.Ident;
      exclP: Sym.Ident;           shortF: Sym.Ident;
      getP: Sym.Ident;            sizeF: Sym.Ident;
      haltP: Sym.Ident;           sysnewP: Sym.Ident;
      incP: Sym.Ident;            valF: Sym.Ident;
      inclP: Sym.Ident;
      lenF: Sym.Ident;

END OberonStdProcedures.
