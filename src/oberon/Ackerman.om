MODULE Ackerman;

   IMPORT Conclusions, LargeIntegers, IntOperations, Operations, Write;

   VAR n, n2: LargeIntegers.LargeInteger;
      null, one: LargeIntegers.LargeInteger;

   PROCEDURE ack(x, y: Operations.Operand): Operations.Operand;
   BEGIN
      IF Operations.Compare(x, null) = 0 THEN
	 RETURN IntOperations.Inc(y);
      ELSIF Operations.Compare(y, null) = 0 THEN
	 RETURN ack(IntOperations.Dec(x), one);
      ELSE
	 RETURN ack(IntOperations.Dec(x), ack(x, IntOperations.Dec(y)));
      END;
   END ack;

BEGIN
   LargeIntegers.Create(null); LargeIntegers.Create(one);
   IntOperations.IntToOp(0, null);
   IntOperations.IntToOp(1, one);
   LargeIntegers.Create(n); LargeIntegers.Create(n2);
   LargeIntegers.Read(n); LargeIntegers.Read(n2);
   LargeIntegers.Write(ack(n, n2));
   Write.Ln;
END Ackerman.
