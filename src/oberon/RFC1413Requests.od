(* Ulm's Oberon Library
   Copyright (C) 1989-2005 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: RFC1413Requ.od,v 1.1 2005/01/24 09:27:12 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: RFC1413Requ.od,v $
   Revision 1.1  2005/01/24 09:27:12  borchert
   Initial revision

   ----------------------------------------------------------------------------
*)

DEFINITION RFC1413Requests;

   IMPORT Events, IPv4Addresses, RelatedEvents, Times;

   CONST
      connectFailed = 0;
      sendFailed = 1;
      gotNoResponse = 2;
      invalidResponse = 3;
      invalidPort = 4;
      noUser = 5;
      unknownError = 6;
      hiddenUser = 7;
      otherError = 8;
      timeoutConnect = 9;
      timeoutResponse = 10;
      errors = 11;
   TYPE
      ErrorCode = SHORTINT;
      ErrorEvent = POINTER TO ErrorEventRec;
      ErrorEventRec =
	 RECORD
	    (Events.EventRec)
	    errorcode: ErrorCode;
	    foreignAddress: IPv4Addresses.SocketAddress;
	    localAddress: IPv4Addresses.SocketAddress;
	    response: ARRAY 512 OF CHAR;
	 END;
   VAR
      error: Events.EventType;
      errormsg: ARRAY errors OF Events.Message;

   PROCEDURE GetIdent(foreignAddress: IPv4Addresses.SocketAddress;
		      localAddress: IPv4Addresses.SocketAddress;
		      timelimit: Times.Time;
		      VAR opsys, charset: ARRAY OF CHAR;
                      VAR ident: ARRAY OF CHAR;
		      VAR errors: RelatedEvents.Object) : BOOLEAN;

END RFC1413Requests.
