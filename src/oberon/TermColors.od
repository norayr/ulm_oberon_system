(* Ulm's Oberon Library
   Copyright (C) 1989-2004 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id$
   ----------------------------------------------------------------------------
   $Log$
   ----------------------------------------------------------------------------
*)

DEFINITION TermColors;

   (* support of a simple color scheme that follows the ANSI standard *)

   IMPORT Objects, Streams;

   CONST
      (* standard set of 8 colors *)
      black = 0;
      red = 1;
      green = 2;
      yellow = 3;
      blue = 4;
      magenta = 5;
      cyan = 6;
      white = 7;
      colors = 8;
   TYPE
      Color = SHORTINT; (* 0..colors-1 *)
      ColorName = ARRAY 8 OF CHAR;
   VAR
      name: ARRAY colors OF ColorName;

   TYPE
      SetPairProc =
	 PROCEDURE (s: Streams.Stream; foreground, background: Color);
      SetColorProc =
	 PROCEDURE (s: Streams.Stream; color: Color);
      ResetProc = PROCEDURE (s: Streams.Stream);
      Interface = POINTER TO InterfaceRec;
      InterfaceRec =
	 RECORD
	    (Objects.ObjectRec)
	    set: SetPairProc;
	    setForeground: SetColorProc;
	    setBackground: SetColorProc;
	    reset: ResetProc;
	 END;

   PROCEDURE Init(s: Streams.Stream; if: Interface);

   PROCEDURE Supported(s: Streams.Stream) : BOOLEAN;

   PROCEDURE Set(s: Streams.Stream; foreground, background: Color);
      (* switch to the given foreground/background pair *)

   PROCEDURE SetForeground(s: Streams.Stream; foreground: Color);
      (* set foreground color; attempt to keep background color *)

   PROCEDURE SetBackground(s: Streams.Stream; background: Color);
      (* set background color; attempt to keep foreground color *)

   PROCEDURE Get(s: Streams.Stream;
                 VAR foreground, background: Color) : BOOLEAN;
      (* returns last foreground/background pair passed to Set;
	 returns FALSE if Set has not been invoked yet
      *)

   PROCEDURE Reset(s: Streams.Stream);
      (* return to default colors *)

END TermColors.
