(* Ulm's Oberon Library
   Copyright (C) 1989-2005 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: RobustRoots.od,v 1.1 2005/04/28 08:05:08 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: RobustRoots.od,v $
   Revision 1.1  2005/04/28 08:05:08  borchert
   Initial revision

   ----------------------------------------------------------------------------
*)

DEFINITION RobustRoots;

   IMPORT Disciplines, Names, Networks, RelatedEvents, Shards;

   TYPE
      ImportedRoot = POINTER TO ImportedRootRec;
      ImportedRootRec = RECORD (Disciplines.ObjectRec) END;

   PROCEDURE Import(address: Networks.Address;
                    path: ARRAY OF CHAR;
		    auth: Shards.Lid;
		    errors: RelatedEvents.Object);

   PROCEDURE ImportR(address: Networks.Address;
                     root: Names.Node;
		     path: ARRAY OF CHAR;
		     auth: Shards.Lid;
		     errors: RelatedEvents.Object);

   PROCEDURE TemporaryImport(address: Networks.Address;
		             path: ARRAY OF CHAR;
		             auth: Shards.Lid;
		             errors: RelatedEvents.Object;
		             VAR import: ImportedRoot);

   PROCEDURE TemporaryImportR(address: Networks.Address;
		              root: Names.Node;
		              path: ARRAY OF CHAR;
		              auth: Shards.Lid;
		              errors: RelatedEvents.Object;
		              VAR import: ImportedRoot);

END RobustRoots.
