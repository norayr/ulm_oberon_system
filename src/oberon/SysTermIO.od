(* Ulm's Oberon Library
   Copyright (C) 1989-1994 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: SysTermIO.od,v 1.1 1994/02/23 08:01:08 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: SysTermIO.od,v $
   Revision 1.1  1994/02/23  08:01:08  borchert
   Initial revision

   ----------------------------------------------------------------------------
   AFB 1/90
   ----------------------------------------------------------------------------
*)

DEFINITION SysTermIO;

   IMPORT RelatedEvents, SysIO;

   (* see termio(7) for explanations *)

   CONST
      (* input modes *)
      ignbrk = { 0 };
      brkint = { 1 };
      ignpar = { 2 };
      parmrk = { 3 };
      inpck = { 4 };
      istrip = { 5 };
      inlcr = { 6 };
      igncr = { 7 };
      icrnl = { 8 };
      iuclc = { 9 };
      ixon = { 10 };
      ixany = { 11 };
      ixoff = { 12 };
      imaxbel = { 13 };
      (* output modes *)
      opost = { 0 };
      olcuc = { 1 };
      onlcr = { 2 };
      ocrnl = { 3 };
      onocr = { 4 };
      onlret = { 5 };
      ofill = { 6 };
      ofdel = { 7 };
      (* delays for newline *)
      nldly = { 8 };            (* mask *)
      nl0 = { };
      nl1 = { 8 };
      (* delays for carriage return *)
      crdly = { 9, 10 };        (* mask *)
      cr0 = { };
      cr1 = { 9 };
      cr2 = { 10 };
      cr3 = { 9, 10 };
      (* delays for tabs *)
      tabdly = { 11, 12 };      (* mask *)
      tab0 = { };
      tab1 = { 11 };
      tab2 = { 12 };
      tab3 = { 11, 12 };        (* expand tabs to spaces *)
      xtabs = { 11, 12 };
      (* delays for backspaces *)
      bsdly = { 13 };           (* mask *)
      bs0 = { };
      bs1 = { 13 };
      (* delays for vertical tabs *)
      vtdly = { 14 };           (* mask *)
      vt0 = { };
      vt1 = { 14 };
      (* delays for form feeds *)
      ffdly = { 15 };
      ff0 = { };
      ff1 = { 15 };

      (* control modes *)
      cbaud = { 0, 1, 2, 3, 12 };       (* mask *)
      b0 = {};
      b50 = { 0 };
      b75 = { 1 };
      b110 = { 0, 1 };
      b134 = { 2 };
      b150 = { 0, 2 };
      b200 = { 1, 2 };
      b300 = { 0, 1, 2 };
      b600 = { 3 };
      b1200 = { 0, 3 };
      b1800 = { 1, 3 };
      b2400 = { 0, 1, 3 };
      b4800 = { 2, 3 };
      b9600 = { 0, 2, 3 };
      b19200 = { 1, 2, 3 };
      b38400 = { 0, 1, 2, 3 };
      csize = { 4, 5 }; (* mask *)
      cs5 = {};
      cs6 = { 4 };
      cs7 = { 5 };
      cs8 = { 4, 5 };
      cstopb = { 6 };
      cread = { 7 };
      parenb = { 8 };
      parodd = { 9 };
      hupcl = { 10 };
      clocal = { 11 };
      
      (* line modes *)
      isig = { 0 };
      icanon = { 1 };
      xcase = { 2 };
      echo = { 3 };
      echoe = { 4 };
      echok = { 5 };
      echonl = { 6 };
      noflsh = { 7 };
      tostop = { 8 };
      echoctl = { 9 };
      echoprt = { 10 };
      echoke = { 11 };
      flusho = { 12 };
      pendin = { 13 };
      iexten = { 14 };

      (* control characters *)
      vintr = 0;
      vquit = 1;
      verase = 2;
      vkill = 3;
      veof = 4;
      vtime = 5;
      vmin = 6;
      vswtc = 7; vswtch = vswtc;
      vstart = 8;
      vstop = 9;
      vsusp = 10;
      veol = 11;
      vreprint = 12;
      vdiscard = 13;
      vwerase = 14;
      vlnext = 15;
      veol2 = 16;
      reserved1 = 17;
      reserved2 = 18;
      controlchars = 19;

   TYPE
      ControlChars = INTEGER; (* vintr..vswtch *)

   TYPE
      InputModes = SET;
      OutputModes = SET;
      ControlModes = SET;
      LineModes = SET;
      TermIO =
	 RECORD
	    inputmodes: InputModes;
	    outputmodes: OutputModes;
	    controlmodes: ControlModes;
	    linemodes: LineModes;
	    linedisc: CHAR;
	    cc: ARRAY controlchars OF CHAR;
	 END;

   PROCEDURE SetTermIO(fd: SysIO.File; termio: TermIO;
		       errors: RelatedEvents.Object) : BOOLEAN;

   PROCEDURE GetTermIO(fd: SysIO.File; VAR termio: TermIO;
		       errors: RelatedEvents.Object) : BOOLEAN;

   PROCEDURE Terminal(fd: SysIO.File) : BOOLEAN;
      (* returns TRUE if fd is associated with a terminal device *)

   PROCEDURE Baudrate(termio: TermIO) : INTEGER;

   PROCEDURE GetScreenSize(fd: SysIO.File; VAR lines, columns: INTEGER;
			   errors: RelatedEvents.Object): BOOLEAN;

END SysTermIO.
