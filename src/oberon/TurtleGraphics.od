(* Ulm's Oberon Library
   Copyright (C) 1989-2004 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: TurtleGraph.od,v 1.1 2004/05/11 09:22:03 borchert Exp borchert $
   ----------------------------------------------------------------------------
   $Log: TurtleGraph.od,v $
   Revision 1.1  2004/05/11 09:22:03  borchert
   Initial revision

   ----------------------------------------------------------------------------
*)

DEFINITION TurtleGraphics;

   IMPORT Plotters, Services, Streams;

   TYPE
      Graphic = POINTER TO GraphicRec;
      GraphicRec = RECORD (Services.ObjectRec) END;

   PROCEDURE Create(VAR graphic: Graphic; angle: REAL);

   PROCEDURE EnableRoundCorners(graphic: Graphic; cornerFraction: REAL);

   PROCEDURE PenDown(graphic: Graphic);
   PROCEDURE PenUp(graphic: Graphic);

   PROCEDURE Save(graphic: Graphic);
   PROCEDURE Restore(graphic: Graphic);

   PROCEDURE Left(graphic: Graphic);
   PROCEDURE Forward(graphic: Graphic);
   PROCEDURE Right(graphic: Graphic);

   PROCEDURE LeftBy(graphic: Graphic; angle: REAL);
   PROCEDURE RightBy(graphic: Graphic; angle: REAL);

   PROCEDURE ApplySymbols(graphic: Graphic; symbols: Streams.Stream);

   PROCEDURE Plot(graphic: Graphic; plotter: Plotters.Plotter);

END TurtleGraphics.
