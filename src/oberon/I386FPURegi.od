DEFINITION I386FPURegisters;

   IMPORT Conclusions, Regs := Registers, Op := Operands, FragmentedStreams,
	  Disciplines, Streams, Gen := OpcodeGen;


   CONST maxregs = 8;

   TYPE

      RegSet = POINTER TO RegSetRec;
      RegSetRec = RECORD
         (Disciplines.ObjectRec)
	 top : Regs.Register;
      END;

      Value = POINTER TO ValueRec;
      ValueRec = RECORD
         (Regs.ValueRec)
	 set : RegSet;
	 freg : Regs.Register; (* Distance counted from the stack top! *)
      END;

   PROCEDURE Create (VAR set : RegSet);
   PROCEDURE CreateValue (VAR reg : Regs.Value; set : RegSet);
   PROCEDURE PushReal (reg : Regs.Value; s : FragmentedStreams.Stream;
                       op : Op.Operand);
   PROCEDURE PushInt (reg : Regs.Value; s : FragmentedStreams.Stream;
		      op : Op.Operand);
   PROCEDURE StoreReal (reg : Regs.Value; s : FragmentedStreams.Stream;
   			op : Op.Operand);
   PROCEDURE StoreInt (reg : Regs.Value; s : FragmentedStreams.Stream;
		       op : Op.Operand);

   PROCEDURE PrepareReg (reg : Regs.Value);
   PROCEDURE PrepareOp (op : Op.Operand);
   PROCEDURE Instr1 (s : FragmentedStreams.Stream; mnem : Gen.Mnemonic;
   		     op1 : Op.Operand);
   PROCEDURE Instr2 (s : FragmentedStreams.Stream; mnem : Gen.Mnemonic;
   		     op1, op2 : Op.Operand);
   PROCEDURE Pop (reg : Regs.Value);

END I386FPURegisters.
