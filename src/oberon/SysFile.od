(* Ulm's Oberon Library
   Copyright (C) 1989-1994 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: SysFile.od,v 1.4 2000/12/11 21:56:04 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: SysFile.od,v $
   Revision 1.4  2000/12/11  21:56:04  borchert
   [SG]etFileCreationMask added

   Revision 1.3  2000/11/17  16:07:12  borchert
   Rename, MakeDir, and RemoveDir added

   Revision 1.2  2000/11/12  13:37:16  borchert
   SymbolicLink and ReadLink added

   Revision 1.1  1994/02/23  07:58:48  borchert
   Initial revision

   ----------------------------------------------------------------------------
   AFB 10/90
   ----------------------------------------------------------------------------
*)

DEFINITION SysFile;

   (* operations on files *)

   IMPORT RelatedEvents, SysStat;

   CONST
      readAccess = {SysStat.oread};
      writeAccess = {SysStat.owrite};
      execAccess = {SysStat.oexec};
      existence = {};
   TYPE
      AccessMode = SET;

   PROCEDURE Access(filename: ARRAY OF CHAR; amode: AccessMode;
		    errors: RelatedEvents.Object) : BOOLEAN;
      (* check accessibility using the real user and group ID *)

   PROCEDURE EffectiveAccess(filename: ARRAY OF CHAR;
			     amode: AccessMode;
			     errors: RelatedEvents.Object) : BOOLEAN;
      (* check accessibility using the effective user and group ID *)

   PROCEDURE Link(filename1, filename2: ARRAY OF CHAR;
		  errors: RelatedEvents.Object) : BOOLEAN;

   PROCEDURE Unlink(filename: ARRAY OF CHAR;
		    errors: RelatedEvents.Object) : BOOLEAN;

   PROCEDURE Rename(filename1, filename2: ARRAY OF CHAR;
		    errors: RelatedEvents.Object) : BOOLEAN;

   PROCEDURE SymbolicLink(VAR filename1, filename2: ARRAY OF CHAR;
		          errors: RelatedEvents.Object) : BOOLEAN;

   PROCEDURE ReadLink(filename: ARRAY OF CHAR; VAR buf: ARRAY OF CHAR;
		      errors: RelatedEvents.Object) : BOOLEAN;

   PROCEDURE MakeDir(filename: ARRAY OF CHAR; mode: SET;
		     errors: RelatedEvents.Object) : BOOLEAN;

   PROCEDURE RemoveDir(filename: ARRAY OF CHAR;
		       errors: RelatedEvents.Object) : BOOLEAN;

   PROCEDURE SetFileCreationMask(mask: SET;
				 errors: RelatedEvents.Object) : BOOLEAN;
   PROCEDURE GetFileCreationMask(VAR mask: SET;
				 errors: RelatedEvents.Object) : BOOLEAN;

END SysFile.
