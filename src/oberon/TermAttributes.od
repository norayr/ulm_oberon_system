(* Ulm's Oberon Library
   Copyright (C) 1989-2004 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: TermAttribu.od,v 1.1 2004/06/11 12:10:33 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: TermAttribu.od,v $
   Revision 1.1  2004/06/11 12:10:33  borchert
   Initial revision

   ----------------------------------------------------------------------------
*)

DEFINITION TermAttributes; (* Ralf Beck *)

   IMPORT Disciplines, Events, Objects, Streams;

   CONST 
      (* attributes *)
      standout = 0;
      underline = 1;
      reverse = 2;
      blink = 3;
      dim = 4;
      bold = 5;
      attributes = 6;

      (* errorcodes *)
      unknownAttribute = 0;
      notSupported = 1;
      errorcodes = 2;

   TYPE 
      AttributeSet = SET;  (* of attributes *)

      SetProc = PROCEDURE (s: Streams.Stream; atts: AttributeSet);

      Interface = POINTER TO InterfaceRec;
      InterfaceRec = 
         RECORD
            (Objects.ObjectRec)
            set: SetProc;
         END;
 
      ErrorEvent = POINTER TO ErrorEventRec;
      ErrorEventRec =
         RECORD
            (Events.EventRec)
            errorcode: SHORTINT;
         END;

   PROCEDURE Init(s: Streams.Stream; available: AttributeSet; if: Interface);
   (* init attributes, must be done by terminal implemenation *)
   (* available: available attributes                         *)
   (* if: Interface                                           *)

   PROCEDURE Set(s: Streams.Stream; attributes: AttributeSet);
   (* set group of attributes *)

   PROCEDURE Current(s: Streams.Stream): AttributeSet;
   (* return current attributes *)

   PROCEDURE Available(s: Streams.Stream): AttributeSet;
   (* return available attributes *)

END TermAttributes.
