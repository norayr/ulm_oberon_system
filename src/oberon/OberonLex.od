(* Ulm's Oberon Library
   Copyright (C) 1989-2001 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: OberonLex.od,v 1.1 2005/05/08 21:23:51 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: OberonLex.od,v $
   Revision 1.1  2005/05/08 21:23:51  borchert
   Initial revision

   ----------------------------------------------------------------------------
*)

(* Ulm's Oberon Library
   Copyright (C) 1989-1996 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: OberonLex.od,v 1.1 2005/05/08 21:23:51 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: OberonLex.od,v $
   Revision 1.1  2005/05/08 21:23:51  borchert
   Initial revision

   Revision 1.1  1996/11/29  15:19:42  borchert
   Initial revision

   ----------------------------------------------------------------------------
*)

DEFINITION OberonLex;

   (* lexical analyse of all known Oberon variants *)

   IMPORT ConstStrings, Events, Objects, Streams;

   CONST (* symbols *)
      (* keywords *)
      array = 0; begin = 1; case = 2; const = 3; definition = 4; div = 5;
      do = 6; else = 7; elsif = 8; end = 9; exit = 10; for = 11; if = 12;
      import = 13; in = 14; is = 15; loop = 16; mod = 17; module = 18;
      nil = 19; of = 20; or = 21; pointer = 22; procedure = 23;
      record = 24; repeat = 25; return = 26; then = 27; to = 28;
      type = 29; until = 30; var = 31; while = 32; with = 33;

      (* operators and delimiters *)
      plus = 40; minus = 41; times = 42; slash = 43; tilde = 44;
      ampersand = 45; period = 46; comma = 47; semicolon = 48; bar = 49;
      lparen = 50 (* "(" *); lbracket = 51 (* "[" *); lbrace = 52 (* "{" *);
      becomes = 53; arrow = 54;
      eql = 55; neq = 56; lst = 57; grt = 58; leq = 59; geq = 60;
      range = 61; colon = 62;
      rparen = 63 (* ")" *); rbracket = 64 (* "]" *); rbrace = 65 (* "}" *);

      (* miscellaneous symbols *)
      ident = 70;
      intconst = 71; hexconst = 72; realconst = 73; longrealconst = 74;
      charconst = 75; string = 76; comment = 77; eop = 78;

      symbols = 79; (* # of symbols *)

   TYPE
      Symbol = SHORTINT;
      Location = Streams.Count;
      Token =
	 RECORD
	    (Objects.ObjectRec)
	    begin, end: Location;
	    sy: Symbol;
	    ident: ConstStrings.String; (* if sy = ident, NIL otherwise *)
	    text: Streams.Stream; (* constants and comments, NIL otherwise *)
	 END;

   CONST
      ioError = 0; (* unable to read from source stream *)
      backFailed = 1; (* unable to push back look-ahead *)
      errors = 2;
   TYPE
      ErrorCode = SHORTINT;
      ErrorEvent = POINTER TO ErrorEventRec;
      ErrorEventRec =
	 RECORD
	    (Events.EventRec)
	    src: Streams.Stream;
	    errorcode: ErrorCode;
	 END;
   VAR
      error: Events.EventType;
      errormsg: ARRAY errors OF Events.Message;

   PROCEDURE GetToken(s: Streams.Stream; VAR token: Token);

   PROCEDURE GetSymString(sy: Symbol; VAR string: ARRAY OF CHAR);

   PROCEDURE SetStringDomain(s: Streams.Stream;
                             domain: ConstStrings.Domain);
      (* all subsequent returned idents will belong to
	 the given domain
      *)

END OberonLex.
