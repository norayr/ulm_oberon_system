(* Ulm's Oberon Library
   Copyright (C) 1989-2001 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: SysSolarisI.om,v 1.1 2001/03/07 18:27:13 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: SysSolarisI.om,v $
   Revision 1.1  2001/03/07 18:27:13  borchert
   Initial revision

   ----------------------------------------------------------------------------
*)

MODULE SysSolarisInfo;

   (* interfaces sysinfo(2) for Solaris 2.x,
      not to be mixed up with sysinfo(2) under Linux
   *)

   IMPORT Sys, SYS := SYSTEM, SysErrors;

   CONST
      sysname = 1; hostname = 2; release = 3; version = 4;
      machine = 5; architecture = 6; hwserial = 7; hwprovider = 8;
      platform = 513; isalist = 514;

   PROCEDURE SysInfo(command: INTEGER; VAR buf: ARRAY OF CHAR);
      VAR
	 d0, d1: INTEGER;
   BEGIN
      IF ~SYS.UNIXCALL(Sys.systeminfo, d0, d1,
		      command, SYS.ADR(buf), LEN(buf)) THEN
	 SysErrors.Raise(NIL, d0, Sys.systeminfo, "");
	 buf[0] := 0X;
      END;
   END SysInfo;

   PROCEDURE GetArchitecture(VAR name: ARRAY OF CHAR);
   BEGIN
      SysInfo(architecture, name);
   END GetArchitecture;

   PROCEDURE GetIsAList(VAR name: ARRAY OF CHAR);
   BEGIN
      SysInfo(isalist, name);
   END GetIsAList;

   PROCEDURE GetPlatform(VAR name: ARRAY OF CHAR);
   BEGIN
      SysInfo(platform, name);
   END GetPlatform;

   PROCEDURE GetHardwareProvider(VAR name: ARRAY OF CHAR);
   BEGIN
      SysInfo(hwprovider, name);
   END GetHardwareProvider;

   PROCEDURE GetHardwareSerial(VAR name: ARRAY OF CHAR);
   BEGIN
      SysInfo(hwserial, name);
   END GetHardwareSerial;

END SysSolarisInfo.
