(* Ulm's Oberon Library
   Copyright (C) 1989-1994 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: Math.od,v 1.4 2006/08/11 15:08:16 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: Math.od,v $
   Revision 1.4  2006/08/11 15:08:16  borchert
   signatures of Arctan2, Arctan2E, Arctan2L, and Arctan2LE fixed

   Revision 1.3  2004/05/21 10:48:43  borchert
   Arctan2 added

   Revision 1.2  2004/04/07 14:41:53  borchert
   ErrorCode type added

   Revision 1.1  1994/02/23  07:55:30  borchert
   Initial revision

   ----------------------------------------------------------------------------
   AFB 5/93
   ----------------------------------------------------------------------------
*)

DEFINITION Math;

   IMPORT Events, RelatedEvents;

   CONST
      e = 2.7182818284590452354;
      log2e = 1.4426950408889634074;
      log10e = 0.43429448190325182765;
      ln2 = 0.69314718055994530942;
      ln10 = 2.30258509299404568402;
      pi = 3.14159265358979323846;
      pidiv2 = 1.57079632679489661923;
      pidiv4 = 0.78539816339744830962;
      onedivpi = 0.31830988618379067154;
      twodivpi = 0.63661977236758134308;
      twodivsqrtpi = 1.12837916709551257390;
      sqrt2 = 1.41421356237309504880;
      sqrt1div2 = 0.70710678118654752440;


   CONST
      domain = 0; (* argument domain exception *)
      sing = 1; (* argument singularity *)
      overflow = 2; (* overflow range exception *)
      underflow = 3; (* underflow range exception *)
      errorcodes = 4;
   TYPE
      ErrorCode = SHORTINT; (* domain..underflow *)
      ErrorEvent = POINTER TO ErrorEventRec;
      ErrorEventRec =
	 RECORD
	    (Events.EventRec)
	    errorcode: ErrorCode;
	 END;
   VAR
      errormsg: ARRAY errorcodes OF Events.Message;
      error: Events.EventType;

   PROCEDURE Sin(x: REAL) : REAL;
   PROCEDURE Cos(x: REAL) : REAL;
   PROCEDURE Tan(x: REAL) : REAL;
   PROCEDURE Arctan(x: REAL) : REAL;
   PROCEDURE Arctan2(y, x: REAL) : REAL;
   PROCEDURE Ln(x: REAL) : REAL;
   PROCEDURE Exp(x: REAL) : REAL;
   PROCEDURE Sqrt(x: REAL) : REAL;

   PROCEDURE SinE(x: REAL; errors: RelatedEvents.Object) : REAL;
   PROCEDURE CosE(x: REAL; errors: RelatedEvents.Object) : REAL;
   PROCEDURE TanE(x: REAL; errors: RelatedEvents.Object) : REAL;
   PROCEDURE ArctanE(x: REAL; errors: RelatedEvents.Object) : REAL;
   PROCEDURE Arctan2E(y, x: REAL; errors: RelatedEvents.Object) : REAL;
   PROCEDURE LnE(x: REAL; errors: RelatedEvents.Object) : REAL;
   PROCEDURE ExpE(x: REAL; errors: RelatedEvents.Object) : REAL;
   PROCEDURE SqrtE(x: REAL; errors: RelatedEvents.Object) : REAL;

   PROCEDURE SinL(x: LONGREAL) : LONGREAL;
   PROCEDURE CosL(x: LONGREAL) : LONGREAL;
   PROCEDURE TanL(x: LONGREAL) : LONGREAL;
   PROCEDURE ArctanL(x: LONGREAL) : LONGREAL;
   PROCEDURE Arctan2L(y, x: LONGREAL) : LONGREAL;
   PROCEDURE LnL(x: LONGREAL) : LONGREAL;
   PROCEDURE ExpL(x: LONGREAL) : LONGREAL;
   PROCEDURE SqrtL(x: LONGREAL) : LONGREAL;

   PROCEDURE SinLE(x: LONGREAL; errors: RelatedEvents.Object) : LONGREAL;
   PROCEDURE CosLE(x: LONGREAL; errors: RelatedEvents.Object) : LONGREAL;
   PROCEDURE TanLE(x: LONGREAL; errors: RelatedEvents.Object) : LONGREAL;
   PROCEDURE ArctanLE(x: LONGREAL; errors: RelatedEvents.Object) : LONGREAL;
   PROCEDURE Arctan2LE(y, x: LONGREAL; errors: RelatedEvents.Object) : LONGREAL;
   PROCEDURE LnLE(x: LONGREAL; errors: RelatedEvents.Object) : LONGREAL;
   PROCEDURE ExpLE(x: LONGREAL; errors: RelatedEvents.Object) : LONGREAL;
   PROCEDURE SqrtLE(x: LONGREAL; errors: RelatedEvents.Object) : LONGREAL;

END Math.
