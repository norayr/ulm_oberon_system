(* Ulm's Oberon Library
   Copyright (C) 1989-1994 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: Comments.od,v 1.1 1994/02/23 08:03:14 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: Comments.od,v $
   Revision 1.1  1994/02/23  08:03:14  borchert
   Initial revision

   ----------------------------------------------------------------------------
   AFB 10/91
   ----------------------------------------------------------------------------
*)

DEFINITION Comments;

   (* separate comments from ordinary input *)

   IMPORT Objects, Sets, Streams;

   CONST
      delimlen = 4;
   TYPE
      Delimiter = ARRAY delimlen OF CHAR;
      Syntax = POINTER TO SyntaxRec;
      SyntaxRec =
	 RECORD                   (* comment syntax *)
	    (Objects.ObjectRec)
	    start: Delimiter;     (* starts a comment *)
	    inclStart: BOOLEAN;   (* belongs start to the comment? *)
	    end: Delimiter;       (* ends a comment *)
	    inclEnd: BOOLEAN;     (* belongs end to the comment? *)
	    nested: BOOLEAN;      (* may comments be nested? *)
	 END;

   PROCEDURE Open(VAR s: Streams.Stream; input: Streams.Stream;
		  commentSyntax: Syntax);

END Comments.
