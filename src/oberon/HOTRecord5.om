MODULE HOTRecord5;	(** prk  **)

TYPE
	R0 = RECORD
		a, b, c: LONGINT
	END;
	
	R1 = RECORD (R0)
		e, f, g: LONGINT
	END;

VAR
	r0: R0;  r1: R1;

PROCEDURE Check(r: R0;  a, b, c: LONGINT);
BEGIN
	ASSERT(r.a = a);
	ASSERT(r.b = b);
	ASSERT(r.c = c)
END Check;

PROCEDURE CheckV(VAR r: R0;  a, b, c: LONGINT);
BEGIN
	ASSERT(r.a = a);
	ASSERT(r.b = b);
	ASSERT(r.c = c);
END CheckV;

PROCEDURE Set(VAR r: R0;  a, b, c: LONGINT);
BEGIN
	r.a := a;  r.b := b;  r.c := c;
END Set;

PROCEDURE Test1;
BEGIN
	Set(r1, 1, 3, 5);
	Check(r1, 1, 3, 5);
	CheckV(r1, 1, 3, 5);
END Test1;

PROCEDURE Test2;
VAR  r1: R1;
BEGIN
	Set(r1, 1, 3, 5);
	Check(r1, 1, 3, 5);
	CheckV(r1, 1, 3, 5);
END Test2;

PROCEDURE Test3;
VAR  r0: R0;  r1: R1;
BEGIN
	Set(r1, 7, 9, 12);
	r0 := r1;
	Check(r0, 7, 9, 12);
END Test3;

PROCEDURE CheckType(VAR r: R0;  ext: BOOLEAN);
BEGIN
	IF ext THEN
		ASSERT(r IS R1)
	ELSE
		ASSERT( ~(r IS R1))
	END
END CheckType;

PROCEDURE Test4;
VAR r0: R0;  r1: R1;
BEGIN
	CheckType(r0, FALSE);
	CheckType(r1, TRUE)
END Test4;

PROCEDURE SetR1(VAR r: R0;  e, f, g: LONGINT);
BEGIN
	r(R1).e := e;
	r(R1).f := f;
	r(R1).g := g;
END SetR1;

PROCEDURE Test5;
VAR r: R1;
BEGIN
	SetR1(r, 45, 54, 63);
	ASSERT(r.e = 45);
	ASSERT(r.f = 54);
	ASSERT(r.g = 63);
END Test5;

PROCEDURE Test;
BEGIN
	Test1;  Test2;  Test3;  Test4;  Test5
END Test;



BEGIN
   Test;
END HOTRecord5.
