(* Ulm's Oberon Library
   Copyright (C) 1989-1994 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: Write.od,v 1.2 1994/07/05 12:52:09 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: Write.od,v $
   Revision 1.2  1994/07/05  12:52:09  borchert
   Indent/IndentS added

   Revision 1.1  1994/02/23  07:47:00  borchert
   Initial revision

   ----------------------------------------------------------------------------
   AFB 7/89
   ----------------------------------------------------------------------------
*)

DEFINITION Write;

   IMPORT Streams;

   (* procedures writing to Streams.stdout *)

   PROCEDURE Int(int: LONGINT; width: LONGINT);

   PROCEDURE Real(real: LONGREAL; width: LONGINT);

   PROCEDURE Char(ch: CHAR);

   PROCEDURE Byte(byte: BYTE);

   PROCEDURE Line(s: ARRAY OF CHAR);

   PROCEDURE Ln;

   PROCEDURE String(s: ARRAY OF CHAR);

   PROCEDURE Indent;


   PROCEDURE IntS(s: Streams.Stream; int: LONGINT; width: LONGINT);

   PROCEDURE RealS(s: Streams.Stream; real: LONGREAL; width: LONGINT);
      (* write real in exponential format *)

   PROCEDURE CharS(s: Streams.Stream; ch: CHAR);

   PROCEDURE ByteS(s: Streams.Stream; byte: BYTE);

   PROCEDURE LineS(s: Streams.Stream; str: ARRAY OF CHAR);

   PROCEDURE LnS(s: Streams.Stream);

   PROCEDURE StringS(s: Streams.Stream; str: ARRAY OF CHAR);

   PROCEDURE IndentS(s: Streams.Stream);

END Write.
