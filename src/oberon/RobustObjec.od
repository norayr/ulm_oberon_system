(* Ulm's Oberon Library
   Copyright (C) 1989-1995 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: RobustObjec.od,v 1.2 1996/11/14 07:55:13 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: RobustObjec.od,v $
   Revision 1.2  1996/11/14  07:55:13  borchert
   LongLivingObjects renamed to RobustObjects

   Revision 1.1  1996/01/01  09:08:36  borchert
   Initial revision

   ----------------------------------------------------------------------------
*)

DEFINITION RobustObjects;

   IMPORT Events, Names, RelatedEvents, Services, Shards;

   CONST
      typeGuardFailure = 0;
      notARobustObject = 1;
      errors = 2;
   TYPE
      ErrorCode = SHORTINT;
      ErrorEvent = POINTER TO ErrorEventRec;
      ErrorEventRec =
	 RECORD
	    (Events.EventRec)
	    errorcode: ErrorCode;
	 END;
   VAR
      error: Events.EventType;
      errormsg: ARRAY errors OF Events.Message;

   PROCEDURE Export(object: Services.Object; status: Names.Status;
		    path: ARRAY OF CHAR; auth: Shards.Lid;
		    errors: RelatedEvents.Object) : BOOLEAN;
   PROCEDURE ExportR(object: Services.Object; status: Names.Status;
		     root: Names.Node; path: ARRAY OF CHAR;
		     auth: Shards.Lid; errors: RelatedEvents.Object) : BOOLEAN;

   PROCEDURE Import(VAR object: Services.Object; path: ARRAY OF CHAR;
		    auth: Shards.Lid; errors: RelatedEvents.Object) : BOOLEAN;
   PROCEDURE ImportR(VAR object: Services.Object;
		     root: Names.Node; path: ARRAY OF CHAR;
		     auth: Shards.Lid; errors: RelatedEvents.Object) : BOOLEAN;
   PROCEDURE GuardedImportR(VAR object: Services.Object; guard: Services.Type;
			    root: Names.Node; path: ARRAY OF CHAR;
			    auth: Shards.Lid;
			    errors: RelatedEvents.Object) : BOOLEAN;
   PROCEDURE GuardedImport(VAR object: Services.Object; guard: Services.Type;
			   path: ARRAY OF CHAR; auth: Shards.Lid;
			   errors: RelatedEvents.Object) : BOOLEAN;

END RobustObjects.
