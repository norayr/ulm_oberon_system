(* Ulm's Oberon Library
   Copyright (C) 1989-1997 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: QuickPrimeT.om,v 1.1 1997/04/03 09:39:20 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: QuickPrimeT.om,v $
   Revision 1.1  1997/04/03  09:39:20  borchert
   Initial revision

   ----------------------------------------------------------------------------
*)

MODULE QuickPrimeTest; (* Frank B.J. Fischer *)
    
   IMPORT Disciplines, IntOperations, Objects, Operations, Primes, 
	  Services, Types;

   CONST
      smallSieve = 63;
      bigSieve = 303;
      hugeSieve = 1028;

   TYPE
      Element = POINTER TO ElementRec;
      ElementRec = RECORD
		      (Objects.ObjectRec)
		      prime: Operations.Operand;
		      next: Element;
                   END;
      PrimeDiscipline = POINTER TO PrimeDisciplineRec;
      PrimeDisciplineRec = RECORD    
			      (Disciplines.DisciplineRec)
			      primelist: Element;
                           END;
   VAR
      primeDiscID: Disciplines.Identifier;
      p          : ARRAY hugeSieve OF Types.Int32;
      if         : Primes.Interface;
      test       : Primes.Test;


   PROCEDURE Init(op: IntOperations.Operand; operandtype: Services.Type);
      VAR
	 primeDisc     : PrimeDiscipline;
	 el, head, tail: Element;
	 prime         : Operations.Operand;
	 begin         : BOOLEAN;
	 i, nrOfPrimes : INTEGER;
	 bits          : LONGINT;
   BEGIN
      (* init *)
      bits := IntOperations.Log2(op);
      IF bits<=32 THEN
	 nrOfPrimes := smallSieve;
      ELSIF bits<=96 THEN
	 nrOfPrimes := bigSieve;
      ELSE
	 nrOfPrimes := hugeSieve;
      END;
      Operations.Assign(prime, op);
      begin := TRUE;
      i := 0;
      
      (* create list *)
      WHILE i<nrOfPrimes DO
	 NEW(el);
	 IntOperations.IntToOp(p[i], prime);
	 el.prime := prime;
	 el.next := NIL;
	 IF begin THEN
	    head := el;
	    tail := el;
	    begin := FALSE;
         ELSE
	    tail.next := el;
	    tail := el;
         END;
	 INC(i);
      END;

      (* connect prime list to type *)
      NEW(primeDisc);
      primeDisc.id := primeDiscID;
      primeDisc.primelist := head;
      Disciplines.Add(operandtype, primeDisc);

   END Init;


   PROCEDURE PerformTest(test: Primes.Test; value: IntOperations.Operand;
			 VAR p: REAL): INTEGER;
      VAR
	 val0, tVal : Operations.Operand;  
	 operandtype: Services.Type;
         primeDisc  : PrimeDiscipline;
	 current    : Element;
   BEGIN
      (* init *)
      p := 0.0;
      Operations.Assign(val0, value);
      IntOperations.IntToOp(0, val0);

      (* quicktest *)
      Services.GetType(value, operandtype);
      IF ~Disciplines.Seek(operandtype, primeDiscID, primeDisc) THEN
	 Init(value, operandtype);
         IF ~Disciplines.Seek(operandtype, primeDiscID, primeDisc) THEN
	    RETURN Primes.indefinite
         END;
      END;
      current := primeDisc.primelist;
      WHILE (current # NIL) DO
	 IF Operations.Compare(value, current.prime)=0 THEN
	    RETURN Primes.prime
         END;
	 tVal := IntOperations.Mod(value, current.prime);
	 IF Operations.Compare(tVal, val0)=0 THEN
	    RETURN Primes.composite
	 END;
	 current := current.next;
      END;
      RETURN Primes.indefinite
   END PerformTest;


   PROCEDURE Create(VAR test: Primes.Test);
   BEGIN
      NEW(test);
      Primes.Init(test, if);
   END Create;
		    
BEGIN
   (* initialize the array p *)
   p[   0] :=    2; p[   1] :=    3; p[   2] :=    5; p[   3] :=    7; 
   p[   4] :=   11; p[   5] :=   13; p[   6] :=   17; p[   7] :=   19; 
   p[   8] :=   23; p[   9] :=   29; p[  10] :=   31; p[  11] :=   37; 
   p[  12] :=   41; p[  13] :=   43; p[  14] :=   47; p[  15] :=   53; 
   p[  16] :=   59; p[  17] :=   61; p[  18] :=   67; p[  19] :=   71; 
   p[  20] :=   73; p[  21] :=   79; p[  22] :=   83; p[  23] :=   89; 
   p[  24] :=   97; p[  25] :=  101; p[  26] :=  103; p[  27] :=  107; 
   p[  28] :=  109; p[  29] :=  113; p[  30] :=  127; p[  31] :=  131; 
   p[  32] :=  137; p[  33] :=  139; p[  34] :=  149; p[  35] :=  151; 
   p[  36] :=  157; p[  37] :=  163; p[  38] :=  167; p[  39] :=  173; 
   p[  40] :=  179; p[  41] :=  181; p[  42] :=  191; p[  43] :=  193; 
   p[  44] :=  197; p[  45] :=  199; p[  46] :=  211; p[  47] :=  223; 
   p[  48] :=  227; p[  49] :=  229; p[  50] :=  233; p[  51] :=  239; 
   p[  52] :=  241; p[  53] :=  251; p[  54] :=  257; p[  55] :=  263; 
   p[  56] :=  269; p[  57] :=  271; p[  58] :=  277; p[  59] :=  281; 
   p[  60] :=  283; p[  61] :=  293; p[  62] :=  307; p[  63] :=  311; 
   p[  64] :=  313; p[  65] :=  317; p[  66] :=  331; p[  67] :=  337; 
   p[  68] :=  347; p[  69] :=  349; p[  70] :=  353; p[  71] :=  359; 
   p[  72] :=  367; p[  73] :=  373; p[  74] :=  379; p[  75] :=  383; 
   p[  76] :=  389; p[  77] :=  397; p[  78] :=  401; p[  79] :=  409; 
   p[  80] :=  419; p[  81] :=  421; p[  82] :=  431; p[  83] :=  433; 
   p[  84] :=  439; p[  85] :=  443; p[  86] :=  449; p[  87] :=  457; 
   p[  88] :=  461; p[  89] :=  463; p[  90] :=  467; p[  91] :=  479; 
   p[  92] :=  487; p[  93] :=  491; p[  94] :=  499; p[  95] :=  503; 
   p[  96] :=  509; p[  97] :=  521; p[  98] :=  523; p[  99] :=  541; 
   p[ 100] :=  547; p[ 101] :=  557; p[ 102] :=  563; p[ 103] :=  569; 
   p[ 104] :=  571; p[ 105] :=  577; p[ 106] :=  587; p[ 107] :=  593; 
   p[ 108] :=  599; p[ 109] :=  601; p[ 110] :=  607; p[ 111] :=  613; 
   p[ 112] :=  617; p[ 113] :=  619; p[ 114] :=  631; p[ 115] :=  641; 
   p[ 116] :=  643; p[ 117] :=  647; p[ 118] :=  653; p[ 119] :=  659; 
   p[ 120] :=  661; p[ 121] :=  673; p[ 122] :=  677; p[ 123] :=  683; 
   p[ 124] :=  691; p[ 125] :=  701; p[ 126] :=  709; p[ 127] :=  719; 
   p[ 128] :=  727; p[ 129] :=  733; p[ 130] :=  739; p[ 131] :=  743; 
   p[ 132] :=  751; p[ 133] :=  757; p[ 134] :=  761; p[ 135] :=  769; 
   p[ 136] :=  773; p[ 137] :=  787; p[ 138] :=  797; p[ 139] :=  809; 
   p[ 140] :=  811; p[ 141] :=  821; p[ 142] :=  823; p[ 143] :=  827; 
   p[ 144] :=  829; p[ 145] :=  839; p[ 146] :=  853; p[ 147] :=  857; 
   p[ 148] :=  859; p[ 149] :=  863; p[ 150] :=  877; p[ 151] :=  881; 
   p[ 152] :=  883; p[ 153] :=  887; p[ 154] :=  907; p[ 155] :=  911; 
   p[ 156] :=  919; p[ 157] :=  929; p[ 158] :=  937; p[ 159] :=  941; 
   p[ 160] :=  947; p[ 161] :=  953; p[ 162] :=  967; p[ 163] :=  971; 
   p[ 164] :=  977; p[ 165] :=  983; p[ 166] :=  991; p[ 167] :=  997; 
   p[ 168] := 1009; p[ 169] := 1013; p[ 170] := 1019; p[ 171] := 1021; 
   p[ 172] := 1031; p[ 173] := 1033; p[ 174] := 1039; p[ 175] := 1049; 
   p[ 176] := 1051; p[ 177] := 1061; p[ 178] := 1063; p[ 179] := 1069; 
   p[ 180] := 1087; p[ 181] := 1091; p[ 182] := 1093; p[ 183] := 1097; 
   p[ 184] := 1103; p[ 185] := 1109; p[ 186] := 1117; p[ 187] := 1123; 
   p[ 188] := 1129; p[ 189] := 1151; p[ 190] := 1153; p[ 191] := 1163; 
   p[ 192] := 1171; p[ 193] := 1181; p[ 194] := 1187; p[ 195] := 1193; 
   p[ 196] := 1201; p[ 197] := 1213; p[ 198] := 1217; p[ 199] := 1223; 
   p[ 200] := 1229; p[ 201] := 1231; p[ 202] := 1237; p[ 203] := 1249; 
   p[ 204] := 1259; p[ 205] := 1277; p[ 206] := 1279; p[ 207] := 1283; 
   p[ 208] := 1289; p[ 209] := 1291; p[ 210] := 1297; p[ 211] := 1301; 
   p[ 212] := 1303; p[ 213] := 1307; p[ 214] := 1319; p[ 215] := 1321; 
   p[ 216] := 1327; p[ 217] := 1361; p[ 218] := 1367; p[ 219] := 1373; 
   p[ 220] := 1381; p[ 221] := 1399; p[ 222] := 1409; p[ 223] := 1423; 
   p[ 224] := 1427; p[ 225] := 1429; p[ 226] := 1433; p[ 227] := 1439; 
   p[ 228] := 1447; p[ 229] := 1451; p[ 230] := 1453; p[ 231] := 1459; 
   p[ 232] := 1471; p[ 233] := 1481; p[ 234] := 1483; p[ 235] := 1487; 
   p[ 236] := 1489; p[ 237] := 1493; p[ 238] := 1499; p[ 239] := 1511; 
   p[ 240] := 1523; p[ 241] := 1531; p[ 242] := 1543; p[ 243] := 1549; 
   p[ 244] := 1553; p[ 245] := 1559; p[ 246] := 1567; p[ 247] := 1571; 
   p[ 248] := 1579; p[ 249] := 1583; p[ 250] := 1597; p[ 251] := 1601; 
   p[ 252] := 1607; p[ 253] := 1609; p[ 254] := 1613; p[ 255] := 1619; 
   p[ 256] := 1621; p[ 257] := 1627; p[ 258] := 1637; p[ 259] := 1657; 
   p[ 260] := 1663; p[ 261] := 1667; p[ 262] := 1669; p[ 263] := 1693; 
   p[ 264] := 1697; p[ 265] := 1699; p[ 266] := 1709; p[ 267] := 1721; 
   p[ 268] := 1723; p[ 269] := 1733; p[ 270] := 1741; p[ 271] := 1747; 
   p[ 272] := 1753; p[ 273] := 1759; p[ 274] := 1777; p[ 275] := 1783; 
   p[ 276] := 1787; p[ 277] := 1789; p[ 278] := 1801; p[ 279] := 1811; 
   p[ 280] := 1823; p[ 281] := 1831; p[ 282] := 1847; p[ 283] := 1861; 
   p[ 284] := 1867; p[ 285] := 1871; p[ 286] := 1873; p[ 287] := 1877; 
   p[ 288] := 1879; p[ 289] := 1889; p[ 290] := 1901; p[ 291] := 1907; 
   p[ 292] := 1913; p[ 293] := 1931; p[ 294] := 1933; p[ 295] := 1949; 
   p[ 296] := 1951; p[ 297] := 1973; p[ 298] := 1979; p[ 299] := 1987; 
   p[ 300] := 1993; p[ 301] := 1997; p[ 302] := 1999; p[ 303] := 2003; 
   p[ 304] := 2011; p[ 305] := 2017; p[ 306] := 2027; p[ 307] := 2029; 
   p[ 308] := 2039; p[ 309] := 2053; p[ 310] := 2063; p[ 311] := 2069; 
   p[ 312] := 2081; p[ 313] := 2083; p[ 314] := 2087; p[ 315] := 2089; 
   p[ 316] := 2099; p[ 317] := 2111; p[ 318] := 2113; p[ 319] := 2129; 
   p[ 320] := 2131; p[ 321] := 2137; p[ 322] := 2141; p[ 323] := 2143; 
   p[ 324] := 2153; p[ 325] := 2161; p[ 326] := 2179; p[ 327] := 2203; 
   p[ 328] := 2207; p[ 329] := 2213; p[ 330] := 2221; p[ 331] := 2237; 
   p[ 332] := 2239; p[ 333] := 2243; p[ 334] := 2251; p[ 335] := 2267; 
   p[ 336] := 2269; p[ 337] := 2273; p[ 338] := 2281; p[ 339] := 2287; 
   p[ 340] := 2293; p[ 341] := 2297; p[ 342] := 2309; p[ 343] := 2311; 
   p[ 344] := 2333; p[ 345] := 2339; p[ 346] := 2341; p[ 347] := 2347; 
   p[ 348] := 2351; p[ 349] := 2357; p[ 350] := 2371; p[ 351] := 2377; 
   p[ 352] := 2381; p[ 353] := 2383; p[ 354] := 2389; p[ 355] := 2393; 
   p[ 356] := 2399; p[ 357] := 2411; p[ 358] := 2417; p[ 359] := 2423; 
   p[ 360] := 2437; p[ 361] := 2441; p[ 362] := 2447; p[ 363] := 2459; 
   p[ 364] := 2467; p[ 365] := 2473; p[ 366] := 2477; p[ 367] := 2503; 
   p[ 368] := 2521; p[ 369] := 2531; p[ 370] := 2539; p[ 371] := 2543; 
   p[ 372] := 2549; p[ 373] := 2551; p[ 374] := 2557; p[ 375] := 2579; 
   p[ 376] := 2591; p[ 377] := 2593; p[ 378] := 2609; p[ 379] := 2617; 
   p[ 380] := 2621; p[ 381] := 2633; p[ 382] := 2647; p[ 383] := 2657; 
   p[ 384] := 2659; p[ 385] := 2663; p[ 386] := 2671; p[ 387] := 2677; 
   p[ 388] := 2683; p[ 389] := 2687; p[ 390] := 2689; p[ 391] := 2693; 
   p[ 392] := 2699; p[ 393] := 2707; p[ 394] := 2711; p[ 395] := 2713; 
   p[ 396] := 2719; p[ 397] := 2729; p[ 398] := 2731; p[ 399] := 2741; 
   p[ 400] := 2749; p[ 401] := 2753; p[ 402] := 2767; p[ 403] := 2777; 
   p[ 404] := 2789; p[ 405] := 2791; p[ 406] := 2797; p[ 407] := 2801; 
   p[ 408] := 2803; p[ 409] := 2819; p[ 410] := 2833; p[ 411] := 2837; 
   p[ 412] := 2843; p[ 413] := 2851; p[ 414] := 2857; p[ 415] := 2861; 
   p[ 416] := 2879; p[ 417] := 2887; p[ 418] := 2897; p[ 419] := 2903; 
   p[ 420] := 2909; p[ 421] := 2917; p[ 422] := 2927; p[ 423] := 2939; 
   p[ 424] := 2953; p[ 425] := 2957; p[ 426] := 2963; p[ 427] := 2969; 
   p[ 428] := 2971; p[ 429] := 2999; p[ 430] := 3001; p[ 431] := 3011; 
   p[ 432] := 3019; p[ 433] := 3023; p[ 434] := 3037; p[ 435] := 3041; 
   p[ 436] := 3049; p[ 437] := 3061; p[ 438] := 3067; p[ 439] := 3079; 
   p[ 440] := 3083; p[ 441] := 3089; p[ 442] := 3109; p[ 443] := 3119; 
   p[ 444] := 3121; p[ 445] := 3137; p[ 446] := 3163; p[ 447] := 3167; 
   p[ 448] := 3169; p[ 449] := 3181; p[ 450] := 3187; p[ 451] := 3191; 
   p[ 452] := 3203; p[ 453] := 3209; p[ 454] := 3217; p[ 455] := 3221; 
   p[ 456] := 3229; p[ 457] := 3251; p[ 458] := 3253; p[ 459] := 3257; 
   p[ 460] := 3259; p[ 461] := 3271; p[ 462] := 3299; p[ 463] := 3301; 
   p[ 464] := 3307; p[ 465] := 3313; p[ 466] := 3319; p[ 467] := 3323; 
   p[ 468] := 3329; p[ 469] := 3331; p[ 470] := 3343; p[ 471] := 3347; 
   p[ 472] := 3359; p[ 473] := 3361; p[ 474] := 3371; p[ 475] := 3373; 
   p[ 476] := 3389; p[ 477] := 3391; p[ 478] := 3407; p[ 479] := 3413; 
   p[ 480] := 3433; p[ 481] := 3449; p[ 482] := 3457; p[ 483] := 3461; 
   p[ 484] := 3463; p[ 485] := 3467; p[ 486] := 3469; p[ 487] := 3491; 
   p[ 488] := 3499; p[ 489] := 3511; p[ 490] := 3517; p[ 491] := 3527; 
   p[ 492] := 3529; p[ 493] := 3533; p[ 494] := 3539; p[ 495] := 3541; 
   p[ 496] := 3547; p[ 497] := 3557; p[ 498] := 3559; p[ 499] := 3571; 
   p[ 500] := 3581; p[ 501] := 3583; p[ 502] := 3593; p[ 503] := 3607; 
   p[ 504] := 3613; p[ 505] := 3617; p[ 506] := 3623; p[ 507] := 3631; 
   p[ 508] := 3637; p[ 509] := 3643; p[ 510] := 3659; p[ 511] := 3671; 
   p[ 512] := 3673; p[ 513] := 3677; p[ 514] := 3691; p[ 515] := 3697; 
   p[ 516] := 3701; p[ 517] := 3709; p[ 518] := 3719; p[ 519] := 3727; 
   p[ 520] := 3733; p[ 521] := 3739; p[ 522] := 3761; p[ 523] := 3767; 
   p[ 524] := 3769; p[ 525] := 3779; p[ 526] := 3793; p[ 527] := 3797; 
   p[ 528] := 3803; p[ 529] := 3821; p[ 530] := 3823; p[ 531] := 3833; 
   p[ 532] := 3847; p[ 533] := 3851; p[ 534] := 3853; p[ 535] := 3863; 
   p[ 536] := 3877; p[ 537] := 3881; p[ 538] := 3889; p[ 539] := 3907; 
   p[ 540] := 3911; p[ 541] := 3917; p[ 542] := 3919; p[ 543] := 3923; 
   p[ 544] := 3929; p[ 545] := 3931; p[ 546] := 3943; p[ 547] := 3947; 
   p[ 548] := 3967; p[ 549] := 3989; p[ 550] := 4001; p[ 551] := 4003; 
   p[ 552] := 4007; p[ 553] := 4013; p[ 554] := 4019; p[ 555] := 4021; 
   p[ 556] := 4027; p[ 557] := 4049; p[ 558] := 4051; p[ 559] := 4057; 
   p[ 560] := 4073; p[ 561] := 4079; p[ 562] := 4091; p[ 563] := 4093; 
   p[ 564] := 4099; p[ 565] := 4111; p[ 566] := 4127; p[ 567] := 4129; 
   p[ 568] := 4133; p[ 569] := 4139; p[ 570] := 4153; p[ 571] := 4157; 
   p[ 572] := 4159; p[ 573] := 4177; p[ 574] := 4201; p[ 575] := 4211; 
   p[ 576] := 4217; p[ 577] := 4219; p[ 578] := 4229; p[ 579] := 4231; 
   p[ 580] := 4241; p[ 581] := 4243; p[ 582] := 4253; p[ 583] := 4259; 
   p[ 584] := 4261; p[ 585] := 4271; p[ 586] := 4273; p[ 587] := 4283; 
   p[ 588] := 4289; p[ 589] := 4297; p[ 590] := 4327; p[ 591] := 4337; 
   p[ 592] := 4339; p[ 593] := 4349; p[ 594] := 4357; p[ 595] := 4363; 
   p[ 596] := 4373; p[ 597] := 4391; p[ 598] := 4397; p[ 599] := 4409; 
   p[ 600] := 4421; p[ 601] := 4423; p[ 602] := 4441; p[ 603] := 4447; 
   p[ 604] := 4451; p[ 605] := 4457; p[ 606] := 4463; p[ 607] := 4481; 
   p[ 608] := 4483; p[ 609] := 4493; p[ 610] := 4507; p[ 611] := 4513; 
   p[ 612] := 4517; p[ 613] := 4519; p[ 614] := 4523; p[ 615] := 4547; 
   p[ 616] := 4549; p[ 617] := 4561; p[ 618] := 4567; p[ 619] := 4583; 
   p[ 620] := 4591; p[ 621] := 4597; p[ 622] := 4603; p[ 623] := 4621; 
   p[ 624] := 4637; p[ 625] := 4639; p[ 626] := 4643; p[ 627] := 4649; 
   p[ 628] := 4651; p[ 629] := 4657; p[ 630] := 4663; p[ 631] := 4673; 
   p[ 632] := 4679; p[ 633] := 4691; p[ 634] := 4703; p[ 635] := 4721; 
   p[ 636] := 4723; p[ 637] := 4729; p[ 638] := 4733; p[ 639] := 4751; 
   p[ 640] := 4759; p[ 641] := 4783; p[ 642] := 4787; p[ 643] := 4789; 
   p[ 644] := 4793; p[ 645] := 4799; p[ 646] := 4801; p[ 647] := 4813; 
   p[ 648] := 4817; p[ 649] := 4831; p[ 650] := 4861; p[ 651] := 4871; 
   p[ 652] := 4877; p[ 653] := 4889; p[ 654] := 4903; p[ 655] := 4909; 
   p[ 656] := 4919; p[ 657] := 4931; p[ 658] := 4933; p[ 659] := 4937; 
   p[ 660] := 4943; p[ 661] := 4951; p[ 662] := 4957; p[ 663] := 4967; 
   p[ 664] := 4969; p[ 665] := 4973; p[ 666] := 4987; p[ 667] := 4993; 
   p[ 668] := 4999; p[ 669] := 5003; p[ 670] := 5009; p[ 671] := 5011; 
   p[ 672] := 5021; p[ 673] := 5023; p[ 674] := 5039; p[ 675] := 5051; 
   p[ 676] := 5059; p[ 677] := 5077; p[ 678] := 5081; p[ 679] := 5087; 
   p[ 680] := 5099; p[ 681] := 5101; p[ 682] := 5107; p[ 683] := 5113; 
   p[ 684] := 5119; p[ 685] := 5147; p[ 686] := 5153; p[ 687] := 5167; 
   p[ 688] := 5171; p[ 689] := 5179; p[ 690] := 5189; p[ 691] := 5197; 
   p[ 692] := 5209; p[ 693] := 5227; p[ 694] := 5231; p[ 695] := 5233; 
   p[ 696] := 5237; p[ 697] := 5261; p[ 698] := 5273; p[ 699] := 5279; 
   p[ 700] := 5281; p[ 701] := 5297; p[ 702] := 5303; p[ 703] := 5309; 
   p[ 704] := 5323; p[ 705] := 5333; p[ 706] := 5347; p[ 707] := 5351; 
   p[ 708] := 5381; p[ 709] := 5387; p[ 710] := 5393; p[ 711] := 5399; 
   p[ 712] := 5407; p[ 713] := 5413; p[ 714] := 5417; p[ 715] := 5419; 
   p[ 716] := 5431; p[ 717] := 5437; p[ 718] := 5441; p[ 719] := 5443; 
   p[ 720] := 5449; p[ 721] := 5471; p[ 722] := 5477; p[ 723] := 5479; 
   p[ 724] := 5483; p[ 725] := 5501; p[ 726] := 5503; p[ 727] := 5507; 
   p[ 728] := 5519; p[ 729] := 5521; p[ 730] := 5527; p[ 731] := 5531; 
   p[ 732] := 5557; p[ 733] := 5563; p[ 734] := 5569; p[ 735] := 5573; 
   p[ 736] := 5581; p[ 737] := 5591; p[ 738] := 5623; p[ 739] := 5639; 
   p[ 740] := 5641; p[ 741] := 5647; p[ 742] := 5651; p[ 743] := 5653; 
   p[ 744] := 5657; p[ 745] := 5659; p[ 746] := 5669; p[ 747] := 5683; 
   p[ 748] := 5689; p[ 749] := 5693; p[ 750] := 5701; p[ 751] := 5711; 
   p[ 752] := 5717; p[ 753] := 5737; p[ 754] := 5741; p[ 755] := 5743; 
   p[ 756] := 5749; p[ 757] := 5779; p[ 758] := 5783; p[ 759] := 5791; 
   p[ 760] := 5801; p[ 761] := 5807; p[ 762] := 5813; p[ 763] := 5821; 
   p[ 764] := 5827; p[ 765] := 5839; p[ 766] := 5843; p[ 767] := 5849; 
   p[ 768] := 5851; p[ 769] := 5857; p[ 770] := 5861; p[ 771] := 5867; 
   p[ 772] := 5869; p[ 773] := 5879; p[ 774] := 5881; p[ 775] := 5897; 
   p[ 776] := 5903; p[ 777] := 5923; p[ 778] := 5927; p[ 779] := 5939; 
   p[ 780] := 5953; p[ 781] := 5981; p[ 782] := 5987; p[ 783] := 6007; 
   p[ 784] := 6011; p[ 785] := 6029; p[ 786] := 6037; p[ 787] := 6043; 
   p[ 788] := 6047; p[ 789] := 6053; p[ 790] := 6067; p[ 791] := 6073; 
   p[ 792] := 6079; p[ 793] := 6089; p[ 794] := 6091; p[ 795] := 6101; 
   p[ 796] := 6113; p[ 797] := 6121; p[ 798] := 6131; p[ 799] := 6133; 
   p[ 800] := 6143; p[ 801] := 6151; p[ 802] := 6163; p[ 803] := 6173; 
   p[ 804] := 6197; p[ 805] := 6199; p[ 806] := 6203; p[ 807] := 6211; 
   p[ 808] := 6217; p[ 809] := 6221; p[ 810] := 6229; p[ 811] := 6247; 
   p[ 812] := 6257; p[ 813] := 6263; p[ 814] := 6269; p[ 815] := 6271; 
   p[ 816] := 6277; p[ 817] := 6287; p[ 818] := 6299; p[ 819] := 6301; 
   p[ 820] := 6311; p[ 821] := 6317; p[ 822] := 6323; p[ 823] := 6329; 
   p[ 824] := 6337; p[ 825] := 6343; p[ 826] := 6353; p[ 827] := 6359; 
   p[ 828] := 6361; p[ 829] := 6367; p[ 830] := 6373; p[ 831] := 6379; 
   p[ 832] := 6389; p[ 833] := 6397; p[ 834] := 6421; p[ 835] := 6427; 
   p[ 836] := 6449; p[ 837] := 6451; p[ 838] := 6469; p[ 839] := 6473; 
   p[ 840] := 6481; p[ 841] := 6491; p[ 842] := 6521; p[ 843] := 6529; 
   p[ 844] := 6547; p[ 845] := 6551; p[ 846] := 6553; p[ 847] := 6563; 
   p[ 848] := 6569; p[ 849] := 6571; p[ 850] := 6577; p[ 851] := 6581; 
   p[ 852] := 6599; p[ 853] := 6607; p[ 854] := 6619; p[ 855] := 6637; 
   p[ 856] := 6653; p[ 857] := 6659; p[ 858] := 6661; p[ 859] := 6673; 
   p[ 860] := 6679; p[ 861] := 6689; p[ 862] := 6691; p[ 863] := 6701; 
   p[ 864] := 6703; p[ 865] := 6709; p[ 866] := 6719; p[ 867] := 6733; 
   p[ 868] := 6737; p[ 869] := 6761; p[ 870] := 6763; p[ 871] := 6779; 
   p[ 872] := 6781; p[ 873] := 6791; p[ 874] := 6793; p[ 875] := 6803; 
   p[ 876] := 6823; p[ 877] := 6827; p[ 878] := 6829; p[ 879] := 6833; 
   p[ 880] := 6841; p[ 881] := 6857; p[ 882] := 6863; p[ 883] := 6869; 
   p[ 884] := 6871; p[ 885] := 6883; p[ 886] := 6899; p[ 887] := 6907; 
   p[ 888] := 6911; p[ 889] := 6917; p[ 890] := 6947; p[ 891] := 6949; 
   p[ 892] := 6959; p[ 893] := 6961; p[ 894] := 6967; p[ 895] := 6971; 
   p[ 896] := 6977; p[ 897] := 6983; p[ 898] := 6991; p[ 899] := 6997; 
   p[ 900] := 7001; p[ 901] := 7013; p[ 902] := 7019; p[ 903] := 7027; 
   p[ 904] := 7039; p[ 905] := 7043; p[ 906] := 7057; p[ 907] := 7069; 
   p[ 908] := 7079; p[ 909] := 7103; p[ 910] := 7109; p[ 911] := 7121; 
   p[ 912] := 7127; p[ 913] := 7129; p[ 914] := 7151; p[ 915] := 7159; 
   p[ 916] := 7177; p[ 917] := 7187; p[ 918] := 7193; p[ 919] := 7207; 
   p[ 920] := 7211; p[ 921] := 7213; p[ 922] := 7219; p[ 923] := 7229; 
   p[ 924] := 7237; p[ 925] := 7243; p[ 926] := 7247; p[ 927] := 7253; 
   p[ 928] := 7283; p[ 929] := 7297; p[ 930] := 7307; p[ 931] := 7309; 
   p[ 932] := 7321; p[ 933] := 7331; p[ 934] := 7333; p[ 935] := 7349; 
   p[ 936] := 7351; p[ 937] := 7369; p[ 938] := 7393; p[ 939] := 7411; 
   p[ 940] := 7417; p[ 941] := 7433; p[ 942] := 7451; p[ 943] := 7457; 
   p[ 944] := 7459; p[ 945] := 7477; p[ 946] := 7481; p[ 947] := 7487; 
   p[ 948] := 7489; p[ 949] := 7499; p[ 950] := 7507; p[ 951] := 7517; 
   p[ 952] := 7523; p[ 953] := 7529; p[ 954] := 7537; p[ 955] := 7541; 
   p[ 956] := 7547; p[ 957] := 7549; p[ 958] := 7559; p[ 959] := 7561; 
   p[ 960] := 7573; p[ 961] := 7577; p[ 962] := 7583; p[ 963] := 7589; 
   p[ 964] := 7591; p[ 965] := 7603; p[ 966] := 7607; p[ 967] := 7621; 
   p[ 968] := 7639; p[ 969] := 7643; p[ 970] := 7649; p[ 971] := 7669; 
   p[ 972] := 7673; p[ 973] := 7681; p[ 974] := 7687; p[ 975] := 7691; 
   p[ 976] := 7699; p[ 977] := 7703; p[ 978] := 7717; p[ 979] := 7723; 
   p[ 980] := 7727; p[ 981] := 7741; p[ 982] := 7753; p[ 983] := 7757; 
   p[ 984] := 7759; p[ 985] := 7789; p[ 986] := 7793; p[ 987] := 7817; 
   p[ 988] := 7823; p[ 989] := 7829; p[ 990] := 7841; p[ 991] := 7853; 
   p[ 992] := 7867; p[ 993] := 7873; p[ 994] := 7877; p[ 995] := 7879; 
   p[ 996] := 7883; p[ 997] := 7901; p[ 998] := 7907; p[ 999] := 7919; 
   p[1000] := 7927; p[1001] := 7933; p[1002] := 7937; p[1003] := 7949; 
   p[1004] := 7951; p[1005] := 7963; p[1006] := 7993; p[1007] := 8009; 
   p[1008] := 8011; p[1009] := 8017; p[1010] := 8039; p[1011] := 8053; 
   p[1012] := 8059; p[1013] := 8069; p[1014] := 8081; p[1015] := 8087; 
   p[1016] := 8089; p[1017] := 8093; p[1018] := 8101; p[1019] := 8111; 
   p[1020] := 8117; p[1021] := 8123; p[1022] := 8147; p[1023] := 8161; 
   p[1024] := 8167; p[1025] := 8171; p[1026] := 8179; p[1027] := 8191; 

   NEW(if);
   if.performTest := PerformTest;
   Create(test);
   primeDiscID := Disciplines.Unique();
END QuickPrimeTest.
