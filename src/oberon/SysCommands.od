(* Ulm's Oberon Library
   Copyright (C) 1989-1994 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: SysCommands.od,v 1.2 2004/05/22 06:13:28 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: SysCommands.od,v $
   Revision 1.2  2004/05/22 06:13:28  borchert
   CommandList and ModuleList embedded in $O- and $O=

   Revision 1.1  1994/02/23 07:49:00  borchert
   Initial revision

   ----------------------------------------------------------------------------
   AFB 9/89
   ----------------------------------------------------------------------------
*)

DEFINITION SysCommands;

   (* data structure for command interpreters;

      this data structure is built up automatically during initialization

      the data structure must be consistent with GenBlocks of the
      Oberon-compiler
   *)

   TYPE
      (* $P- don't trace any pointers *)
      (* names are read-only and 0X-terminated *)
      Name = POINTER TO ARRAY 1024 OF CHAR;

      CommandList = (* $O- *) POINTER TO CommandRec (* $O= *);
      CommandRec =
	 RECORD
	    next: CommandList; (* in order of appearance *)
	    name: Name;
	    proc: PROCEDURE;
	 END;

      ModuleList = (* $O- *) POINTER TO ModuleRec (* $O= *);
      ModuleRec =
	 RECORD
	    next: ModuleList; (* topological order (if possible) *)
	    name: Name;
	    init: PROCEDURE;
	    commands: CommandList;
	 END;
      (* $P= *)

   VAR
      modules: ModuleList;

END SysCommands.
