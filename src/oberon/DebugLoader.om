MODULE DebugLoader;

   IMPORT ASCII, Errors, Events, Loader, Streams, Strings, Write;

   PROCEDURE WriteErrorEvent(s: Streams.Stream; event: Events.Event);

      PROCEDURE WriteString(string: ARRAY OF CHAR);
      BEGIN
	 IF ~Streams.WritePart(s, string, 0, Strings.Len(string)) THEN END;
      END WriteString;

      PROCEDURE WriteChar(ch: CHAR);
      BEGIN
	 IF ~Streams.WriteByte(s, ch) THEN END;
      END WriteChar;

   BEGIN
      WITH event: Loader.ErrorEvent DO
	 WriteChar(ASCII.quote);
	 WriteString(event.module);
	 WriteChar(ASCII.quote);
	 IF event.for # "" THEN
	    WriteString(" for ");
	    WriteChar(ASCII.quote);
	    WriteString(event.for);
	    WriteChar(ASCII.quote);
	 END;
	 WriteString(": ");
	 WriteString(event.message);
      END;
   END WriteErrorEvent;

   PROCEDURE ErrorHandler(event: Events.Event);
   BEGIN
      Errors.Write(Streams.stderr, event); Write.LnS(Streams.stderr);
   END ErrorHandler;

   PROCEDURE Init;
   BEGIN
      Errors.AssignWriteProcedure(Loader.error, WriteErrorEvent);
      Events.Handler(Loader.error, ErrorHandler);
   END Init;

BEGIN
   Init;
END DebugLoader.
