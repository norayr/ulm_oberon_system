(* Ulm's Oberon Library
   Copyright (C) 1989-1998 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: CompilerStr.om,v 1.1 1998/03/05 07:52:18 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: CompilerStr.om,v $
   Revision 1.1  1998/03/05 07:52:18  borchert
   Initial revision

   ----------------------------------------------------------------------------
*)

MODULE CompilerStreamPosKeys;

   (* service provider of StreamPosKeys for CompilerObjects.Object *)

   IMPORT StreamPosKeys, CompilerObjects, Keys, Services;

   PROCEDURE Extract(object: Services.Object; key: Keys.Key;
		     VAR keyval: Keys.Value);
      VAR
	 value: StreamPosKeys.Value;
	 loc: CompilerObjects.Location;
   BEGIN
      WITH object: CompilerObjects.Object DO
	 StreamPosKeys.CreateValue(value);
	 value.pos := object.loc.begin;
	 keyval := value;
      END;
   END Extract;

   PROCEDURE Init;
      VAR
	 objectType: Services.Type;
	 service: Services.Service;
   BEGIN
      Services.SeekType("CompilerObjects.Object", objectType);
      Services.Seek("StreamPosKeys", service);
      Keys.Support(service, objectType, Extract);
   END Init;

BEGIN
   Init;
END CompilerStreamPosKeys.
