(* Ulm's Oberon Library
   Copyright (C) 1989-1994 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: UnixEnviron.od,v 1.1 1994/02/23 07:27:22 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: UnixEnviron.od,v $
   Revision 1.1  1994/02/23  07:27:22  borchert
   Initial revision

   ----------------------------------------------------------------------------
   AFB 9/89
   ----------------------------------------------------------------------------
*)

DEFINITION UnixEnvironment;

   (* the UNIX environment is a list of parameters of the form name=value *)
      
   IMPORT Streams;

   TYPE
      Stream = POINTER TO StreamRec;
      StreamRec =
	 RECORD
	    (Streams.StreamRec)
	 END;

   PROCEDURE String(name: ARRAY OF CHAR; VAR value: ARRAY OF CHAR) : BOOLEAN;
      (* look for environment parameter with name `name' and
	 store its associated value (behind '=') into `value';
	 `String' returns FALSE if `name' is not found
      *)

   PROCEDURE Open(VAR value: Streams.Stream; name: ARRAY OF CHAR) : BOOLEAN;
      (* opens `value' as stream for reading the value
	 associated with `name';
	 `Open' returns FALSE if `name' is not found
      *)

   PROCEDURE OpenAll(VAR stream: Streams.Stream);
      (* opens `stream' to read all environment parameters;
	 environment parameters are 0X-terminated
      *)

END UnixEnvironment.
