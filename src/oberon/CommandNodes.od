(* Ulm's Oberon Library
   Copyright (C) 1989-2004 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id$
   ----------------------------------------------------------------------------
   $Log$
   ----------------------------------------------------------------------------
*)

DEFINITION CommandNodes;

   IMPORT Args, Names, Objects, RelatedEvents, Shards, Streams;

   TYPE
      Node = POINTER TO NodeRec;
      NodeRec = RECORD (Names.NodeRec) END;

   TYPE
      GetArgsProc = PROCEDURE (node: Node; VAR args: Args.Arguments) : BOOLEAN;
      InvokeProc = PROCEDURE (node: Node; args: Args.Arguments;
			      in, out: Streams.Stream;
                              auth: Shards.Lid) : BOOLEAN;
      Interface = POINTER TO InterfaceRec;
      InterfaceRec =
	 RECORD
	    (Objects.ObjectRec)
	    getArgs: GetArgsProc;
	    invoke: InvokeProc;
	 END;

   PROCEDURE Init(node: Node; if: Interface);

   PROCEDURE GetArgs(node: Node; VAR args: Args.Arguments) : BOOLEAN;
   PROCEDURE Invoke(node: Node; args: Args.Arguments;
		    in, out: Streams.Stream;
                    auth: Shards.Lid) : BOOLEAN;

END CommandNodes.
