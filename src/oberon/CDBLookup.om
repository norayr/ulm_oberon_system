MODULE CDBLookup;

   IMPORT Args := UnixArguments, CDB := ConstantDatabases, Conclusions,
      Errors, RelatedEvents, Streams, UnixFiles, Write;

   PROCEDURE DoIt;
      VAR
	 cdb: CDB.ConstantDatabase;
	 cdbfilename: ARRAY 512 OF CHAR;
	 key: ARRAY 1024 OF CHAR;
	 cdbin: Streams.Stream;
	 errors: RelatedEvents.Object;
	 value: Streams.Stream;
   BEGIN
      Args.Init("cdb-file key...");
      Args.FetchString(cdbfilename);
      NEW(errors); RelatedEvents.QueueEvents(errors);
      IF ~UnixFiles.Open(cdbin, cdbfilename,
	    UnixFiles.read, Streams.bufpool, errors) THEN
	 Conclusions.Conclude(errors, Errors.fatal, "");
      END;
      CDB.Open(cdb, cdbin);
      RelatedEvents.Forward(cdb, errors);
      WHILE Args.GetArg(key) DO
	 IF ~CDB.Lookup(cdb, key, value) OR
	       ~Streams.Copy(value, Streams.stdout, -1) THEN
	    IF RelatedEvents.EventsPending(errors) THEN
	       Conclusions.Conclude(errors, Errors.error, key);
	    ELSE
	       Write.StringS(Streams.stderr, key);
	       Write.LineS(Streams.stderr, ": not found");
	    END;
	 END;
      END;
      CDB.Close(cdb);
   END DoIt;

BEGIN
   DoIt;
END CDBLookup.
