(* Ulm's Oberon Library
   Copyright (C) 1989-2004 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: I386OberonA.od,v 1.2 2005/04/11 09:59:37 ehrhardt Exp $
   ----------------------------------------------------------------------------
   $Log: I386OberonA.od,v $
   Revision 1.2  2005/04/11 09:59:37  ehrhardt
   Formatting fixes.

   Revision 1.1  2004/09/06 17:14:09  borchert
   Initial revision

   ----------------------------------------------------------------------------
*)

DEFINITION I386OberonAnalyzer; (* Christian Ehrhardt *)

   IMPORT Disciplines, FragmentedStreams, RelatedEvents, Scopes,
      Sym := OberonSymbols, Types;

   PROCEDURE Process(module: Sym.Ident; errors: RelatedEvents.Object);

   (* these two functions mustn't be called for external procedures! *)
   PROCEDURE ProcedureLabel(proc : Sym.Ident) : FragmentedStreams.Label;
   PROCEDURE ProcedureLevel(proc : Sym.Ident) : INTEGER;

   PROCEDURE VarOffset(obj: Disciplines.Object) : LONGINT;
   PROCEDURE SetVarOffset(obj: Disciplines.Object; offset : LONGINT);
   PROCEDURE VarScope(obj: Disciplines.Object) : Scopes.Scope;
   PROCEDURE SizesOffset(ident: Sym.Ident) : LONGINT;
   PROCEDURE ParamIdent(param: Sym.ParamList) : Sym.Ident;
   PROCEDURE DataBlockSize(module: Sym.Ident; obj: Disciplines.Object;
                           errors: RelatedEvents.Object) : LONGINT;
   PROCEDURE DataBlockAlign(obj: Disciplines.Object) : LONGINT;
   PROCEDURE ResOffset(obj: Disciplines.Object) : LONGINT;

END I386OberonAnalyzer.
