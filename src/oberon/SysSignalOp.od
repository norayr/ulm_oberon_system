(* Ulm's Oberon Library
   Copyright (C) 1989-1994 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: SysSignalOp.od,v 1.3 2004/05/20 18:25:00 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: SysSignalOp.od,v $
   Revision 1.3  2004/05/20 18:25:00  borchert
   additional operations that accept internal signal sets allow
   to save CPU time if the same signal set is used multiple times

   Revision 1.2  2001/06/18 08:29:51  borchert
   signal sets are no longer assumed to fit into a single SET

   Revision 1.1  1994/02/23  08:00:23  borchert
   Initial revision

   ----------------------------------------------------------------------------
   AFB 10/93
   ----------------------------------------------------------------------------
*)

DEFINITION SysSignalOperations;

   (* misc signal operations *)

   IMPORT Objects, Sets, SysSignals;

   CONST
      sigsetlen = (SysSignals.nsigs + Sets.setsize - 1) DIV Sets.setsize;
   TYPE
      SignalSet = ARRAY sigsetlen OF SET;

   TYPE
      InternalSignalSet = RECORD (Objects.ObjectRec) END;

   PROCEDURE Block(VAR signals: SignalSet);

   PROCEDURE SetMask(VAR signals: SignalSet);

   (* operations that directly work with the internal data structure *)

   PROCEDURE ConvertSetToInternalSet(signals: SignalSet;
                                     VAR isignals: InternalSignalSet);
   PROCEDURE ConvertInternalSetToSet(isignals: InternalSignalSet;
                                     VAR signals: SignalSet);
   PROCEDURE InternalBlock(VAR signals: InternalSignalSet);
   PROCEDURE InternalSetMask(VAR signals: InternalSignalSet);
   PROCEDURE CopyInternalSet(VAR from, to: InternalSignalSet);

END SysSignalOperations.
