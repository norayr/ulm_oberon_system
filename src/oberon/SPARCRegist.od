(* Ulm's Oberon Library
   Copyright (C) 1989-1999 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id$
   ----------------------------------------------------------------------------
   $Log$
   ----------------------------------------------------------------------------
*)

DEFINITION SPARCRegisters;

   CONST
      (* general registers *)
      g0 =  0; g1 =  1; g2 =  2; g3 =  3; g4 =  4; g5 =  5; g6 =  6; g7 =  7;
      o0 =  8; o1 =  9; o2 = 10; o3 = 11; o4 = 12; o5 = 13; o6 = 14; o7 = 15;
      l0 = 16; l1 = 17; l2 = 18; l3 = 19; l4 = 20; l5 = 21; l6 = 22; l7 = 23;
      i0 = 24; i1 = 25; i2 = 26; i3 = 27; i4 = 28; i5 = 29; i6 = 30; i7 = 31;
   TYPE
      Reg = SHORTINT; (* 0..31 *)
      RegSet = SET (* OF GenReg *);

   CONST
      (* conventional register assignments *)
      top = o6;        (* stack pointer *)
      base = i6;       (* pointer to current stack frame *)
      return = i7;     (* holds return address *)
      intrval = i0;    (* integer RETURN values are to be stored here *)
      tmpreg = g1;     (* may be used for temporary values at any time *)

   CONST
      single = 0; double = 1; quad = 2;
   TYPE
      FPPrecision = SHORTINT; (* single..quad *)
      FPRegNumber = SHORTINT; (* 0..63 *)
      FPReg =
	 RECORD
	    precision: FPPrecision;
	    reg: FPRegNumber;
	 END;

END SPARCRegisters.
