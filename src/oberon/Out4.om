MODULE Out4;

   IMPORT SYS := SYSTEM;

   CONST nl = 0AX;

   CONST
      outfd = 4;

   (* conversions *)

   CONST
      oct = 0;
      dec = 1;
      hex = 2;
   TYPE 
      Basetype = SHORTINT; (* oct..hex *)

   (* basic IO *)

   VAR
      Done: BOOLEAN;

   (* ==================== conversions ================================= *)

   PROCEDURE ConvertNumber(num, len: LONGINT; btyp: Basetype; neg: BOOLEAN;
      VAR str: ARRAY OF CHAR);

      (* conversion of a number into a string of characters *)
      (* num must get the absolute value of the number      *)
      (* len is the minimal length of the generated string  *)
      (* neg means: "the number is negative" for btyp = dec *)

      CONST
	 NumberLen = 11;
      VAR 
	 digits          : ARRAY NumberLen+1 OF CHAR;
	 base            : INTEGER;
	 cnt, ix         : INTEGER;
	 maxlen          : LONGINT;
	 dig             : LONGINT;

   BEGIN 
      ASSERT(num >= 0);
      ix := 1;
      WHILE ix <= NumberLen DO
	 digits[ix] := "0";
	 INC(ix);
      END;                              (* initialisation *)
      IF btyp = oct THEN 
	 base := 8;
      ELSIF btyp = dec THEN 
	 base := 10;
      ELSIF btyp = hex THEN 
	 base := 10H;
      END;
      cnt := 0;
      REPEAT 
	 INC(cnt);
	 dig := num MOD base;
	 num := num DIV base;
	 IF dig < 10 THEN 
	    dig := dig + ORD("0");
	 ELSE 
	    dig := dig - 10 + ORD("A");
	 END;
	 digits[cnt] := CHR(dig);
      UNTIL num = 0;
      (* (* i don't like this *)
      IF btyp = oct THEN 
	 cnt := 11;
      ELSIF btyp = hex THEN 
	 cnt := 8;
      ELSIF neg THEN 
      *)
      IF neg THEN
	 INC(cnt);
	 digits[cnt] := "-";
      END;
      maxlen := LEN(str);          (* get maximal length *)
      IF len > maxlen THEN 
	 len := SHORT(maxlen); 
      END;
      IF cnt > maxlen THEN 
	 cnt := SHORT(maxlen); 
      END;
      ix := 0;
      WHILE len > cnt DO 
	 str[ix] := " ";
	 INC(ix);
	 DEC(len);
      END;
      WHILE cnt > 0 DO 
	 str[ix] := digits[cnt];
	 INC(ix);
	 DEC(cnt);
      END;
      IF ix < maxlen THEN 
	 str[ix] := 0X;
      END;
   END ConvertNumber;

   PROCEDURE ConvertInteger(num: LONGINT; len: INTEGER; VAR str: ARRAY OF 
      CHAR);
   (* conversion of an integer decimal number to a string *)
   BEGIN 
      IF num = MIN(LONGINT) THEN
	 COPY("-2147483648", str);
      ELSE
	 ConvertNumber(ABS(num),len,dec,num < 0,str);
      END;
   END ConvertInteger;

   (* ========================= terminal ============================ *)

   PROCEDURE WriteChar(ch: CHAR) : BOOLEAN;
      CONST write = 4;
      VAR r0, r1: INTEGER;
   BEGIN
      RETURN SYS.UNIXCALL(write, r0, r1, outfd, SYS.ADR(ch), 1)
   END WriteChar;

   PROCEDURE Write(ch: CHAR);
   BEGIN
      Done := WriteChar(ch);
   END Write;

   PROCEDURE WriteLn;
      CONST nl = 0AX;
   BEGIN
      Write(nl);
   END WriteLn;

   PROCEDURE WriteString(s: ARRAY OF CHAR);
      VAR i: INTEGER;
   BEGIN
      i := 0;
      WHILE (i < LEN(s)) & (s[i] # 0X) DO
	 Write(s[i]);
	 INC(i);
      END;
   END WriteString;

   PROCEDURE WriteInt(arg: LONGINT);
      VAR field: ARRAY 11 OF CHAR;
   BEGIN
      ConvertInteger(arg, 1, field);
      WriteString(field);
   END WriteInt;

BEGIN
   Done := TRUE;
END Out4.
