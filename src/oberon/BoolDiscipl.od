(* Ulm's Oberon Library
   Copyright (C) 1989-1994 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: BoolDiscipl.od,v 1.2 1995/04/10 12:02:10 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: BoolDiscipl.od,v $
   Revision 1.2  1995/04/10  12:02:10  borchert
   - reformatted
   - simpler names

   Revision 1.1  1994/10/28  10:25:40  borchert
   Initial revision

   ----------------------------------------------------------------------------
   Jan Oliver Stibane -- October 1994
   ----------------------------------------------------------------------------
*)

DEFINITION BoolDisciplines;

   (* discipline for BoolArgs *)

   IMPORT Disciplines, Iterators, Objects;

   PROCEDURE InclTrue (obj: Disciplines.Object; name: ARRAY OF CHAR);
      (* includes  `name' as one possible `TRUE' argument *)

   PROCEDURE InclFalse (obj: Disciplines.Object; name: ARRAY OF CHAR);
      (* includes  `name' as one possible `FALSE' argument *)

   PROCEDURE ExclTrue (obj: Disciplines.Object; name: ARRAY OF CHAR);
      (* exclude `name' as a possible `TRUE' Argument *)

   PROCEDURE ExclFalse (obj: Disciplines.Object; name: ARRAY OF CHAR);
      (* exclude `name' as a possible `FALSE' Argument *)

   PROCEDURE IsTrue(obj: Disciplines.Object;
		    name: ARRAY OF CHAR) : BOOLEAN;
      (* TRUE if name was include by InclTrue *)

   PROCEDURE IsFalse(obj: Disciplines.Object;
		     name: ARRAY OF CHAR) : BOOLEAN;
      (* TRUE if name was include by InclFalse *)

   PROCEDURE CreateIterator(VAR it: Iterators.Iterator;
                            obj: Disciplines.Object;
	                    bool: BOOLEAN);
      (* the returned strings are of the type ConstStrings.String *)

END BoolDisciplines.
