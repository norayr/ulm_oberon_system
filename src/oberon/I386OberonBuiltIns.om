(* Ulm's Oberon Library
   Copyright (C) 1989-2000 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: I386OberonB.om,v 1.1 2004/05/06 08:39:44 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: I386OberonB.om,v $
   Revision 1.1  2004/05/06 08:39:44  borchert
   Initial revision

   ----------------------------------------------------------------------------
*)

MODULE I386OberonBuiltIns;

   (* defines I386 specific extensions of SYSTEM for access to cr registers *)

   IMPORT Args, OberonBuiltIns, Procs := I386OberonProcedures, Scopes,
      Sym := OberonSymbols, Types := OberonBaseTypes;

   PROCEDURE Add(scope: Scopes.Scope; args: Args.Arguments);
      (* insert all standard constants, types, procedures and functions
	 into scope in dependence of args
      *)

      PROCEDURE AddIdent(ident: Sym.Ident);
      BEGIN
	 OberonBuiltIns.AddIdent(scope, ident, args, "i386sys");
      END AddIdent;

   BEGIN (* Add *)
      AddIdent(Procs.getcrF);
      AddIdent(Procs.getfsrP);
      AddIdent(Procs.setfsrP);
      AddIdent(Procs.sqrtF);
      AddIdent(Procs.sinF);
      AddIdent(Procs.cosF);
   END Add;

   PROCEDURE Init;
      VAR
	 if: OberonBuiltIns.Interface;
   BEGIN
      NEW(if); if.add := Add; if.defArgs := NIL;
      OberonBuiltIns.RegisterSet("i386sys", if);
   END Init;

BEGIN
   Init;
END I386OberonBuiltIns.
