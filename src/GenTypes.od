DEFINITION GenTypes;

   IMPORT Sym := OberonSymbols, PC := ProcContext, Op := Operands,
          Regs := Registers, CompilerObjects, FragmentedStreams,
	  ConstStrings, Disciplines;

   CONST
      sizeoff = 0;
      moduleoff = 4;
      typenooff = 8;
      hierlenoff = 12;
      pointeroff = 16;

      sentinel = MIN (LONGINT);

   (* Create the symbol name that references the Tag of the global Variables *)
   PROCEDURE CreateGTAGName (VAR name : ConstStrings.String);

   (* Call these function at the start and end of each block. *)
   PROCEDURE BlockStart (proc : PC.Context; type : Sym.Type);
   PROCEDURE BlockEnd (proc : PC.Context; type : Sym.Type);

   (* The return value is the offset of the type tag in the type tag
    * block of the module that declares the type. *)
   PROCEDURE GenType (proc : PC.Context; type : Sym.Type);

   (* Generate a type tag for a procedure. *)
   PROCEDURE GenTagForBlock (proc : PC.Context; pident : Sym.Ident);

   (* Generate an immediate Operand with the Type Tag for type. *)
   PROCEDURE GenTag (proc : PC.Context; type : Sym.Type) : Op.Operand;

   (* Generate the list of all Blocks (BlockListRec) *)
   PROCEDURE GenBlockList (proc : PC.Context);

   (* Generate the module Record *)
   PROCEDURE GenModuleTag (proc : PC.Context);

   (* Generate a Memory Operand that points to the type description of type *)
   PROCEDURE GenTagRef (proc : PC.Context; type : Sym.Type) : Op.Operand;

   (* Mark all exported Types for GenAllTypes *)
   PROCEDURE MarkExportedTypes (proc : PC.Context);

   (* Generate type Tags for all types on the list. *)
   PROCEDURE GenAllTypes (proc : PC.Context);

   (* Initialize local pointers on the stack *)
   PROCEDURE InitLocalPointers (proc : PC.Context; pident : Sym.Ident);

   PROCEDURE MaxTag (proc : PC.Context; tag : Regs.Value;
          type : Sym.Type; caller : Regs.Owner; reuse : BOOLEAN) : Regs.Value;

   PROCEDURE SetTmpTag (obj : Disciplines.Object; tag : Regs.Value);
   PROCEDURE GetTmpTag (obj : Disciplines.Object) : Regs.Value;
   PROCEDURE RemoveTmpTag (obj : Disciplines.Object) : Regs.Value;

   PROCEDURE TypeGuard (proc : PC.Context; tag : Regs.Value; static : Sym.Type;
			truelab : FragmentedStreams.Label;
			loc : CompilerObjects.Location);

   PROCEDURE StaticTypeGuard (proc : PC.Context; base, ext : Sym.Type;
                              loc : CompilerObjects.Location; warn : BOOLEAN)
			      : BOOLEAN;

   PROCEDURE AssignmentTypeGuard (proc : PC.Context; base, ext : Regs.Value;
                                  loc : CompilerObjects.Location);


END GenTypes.
