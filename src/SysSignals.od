(* Ulm's Oberon Library - I386/Linux 2.2 -  cae 02/01
   (C) University of Ulm, SAI, 89069 Ulm
   Note: This file is no longer auto generated on I386.
*)

DEFINITION SysSignals;

   IMPORT Events, SysTypes;

   TYPE
      Signal = INTEGER; (* signal number: [1..nsigs-1] *)
      EventType = POINTER TO EventTypeRec;
      EventTypeRec =
	 RECORD
	    (Events.EventTypeRec)
	    signo: Signal;
	 END;
      Name = ARRAY 12 OF CHAR; (* traditional name, e.g. "SIGHUP" *)
      Event = POINTER TO EventRec;
      EventRec =
	 RECORD
	    (Events.EventRec)
	    signo: Signal;
	    (* see siginfo(5) for meaning of these fields *)
	    sigcode: INTEGER;
	    addr: SysTypes.UntracedAddress;
	    (* "hard" errors need to be fixed -- else we loop endless;
	       if event.fixed is set to TRUE by one of the handlers,
	       continuation is allowed else the program aborts
	    *)
	    fixed: BOOLEAN;
	 END;


   CONST 
      sigHUP    = 1;          (*  *)
      sigINT    = 2;          (*  *)
      sigQUIT   = 3;          (*  *)
      sigILL    = 4;          (*  *)
      sigTRAP   = 5;          (*  *)
      sigABRT   = 6;          (*  *)
      sigBUS    = 7;          (*  *)
      sigFPE    = 8;          (*  *)
      sigKILL   = 9;          (*  *)
      sigUSR1   = 10;         (*  *)
      sigSEGV   = 11;         (*  *)
      sigUSR2   = 12;         (*  *)
      sigPIPE   = 13;         (*  *)
      sigALRM   = 14;         (*  *)
      sigTERM   = 15;         (*  *)
      sigSTKFLT = 16;         (*  *)
      sigCHLD   = 17;         (*  *)
      sigCONT   = 18;         (*  *)
      sigSTOP   = 19;         (*  *)
      sigTSTP   = 20;         (*  *)
      sigTTIN   = 21;         (*  *)
      sigTTOU   = 22;         (*  *)
      sigURG    = 23;         (*  *)
      sigXCPU   = 24;         (*  *)
      sigXFSZ   = 25;         (*  *)
      sigVTALRM = 26;         (*  *)
      sigPROF   = 27;         (*  *)
      sigWINCH  = 28;         (*  *)
      sigIO     = 29;         (*  *)
      sigPWR    = 30;         (*  *)
      sigSYS    = 31;         (*  *)

      sigRTMIN  = 32;         (* first realtime signal *)
      sigRTMAX  = 63;         (* last realtime signal *)
      allsigs   = 64;         (* number of all signals *)
      nsigs     = allsigs;
   VAR 
      HUP    : EventType;
      INT    : EventType;
      QUIT   : EventType;
      ILL    : EventType;
      TRAP   : EventType;
      ABRT   : EventType;
      BUS    : EventType;
      FPE    : EventType;
      KILL   : EventType;
      USR1   : EventType;
      SEGV   : EventType;
      USR2   : EventType;
      PIPE   : EventType;
      ALRM   : EventType;
      TERM   : EventType;
      STKFLT : EventType;
      CHLD   : EventType;
      CONT   : EventType;
      STOP   : EventType;
      TSTP   : EventType;
      TTIN   : EventType;
      TTOU   : EventType;
      URG    : EventType;
      XCPU   : EventType;
      XFSZ   : EventType;
      VTALRM : EventType;
      PROF   : EventType;
      WINCH  : EventType;
      POLL   : EventType;
      PWR    : EventType;
      SYS    : EventType;

   VAR
      unknownSignal: Events.EventType;
      text: ARRAY allsigs OF Events.Message;
      name: ARRAY allsigs OF Name;
      eventType: ARRAY nsigs OF EventType;

END SysSignals.
