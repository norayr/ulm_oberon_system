(* Ulm's Oberon Library
   Copyright (C) 1989-2001 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id$
   ----------------------------------------------------------------------------
   $Log$
   ----------------------------------------------------------------------------
*)

DEFINITION FTPJobs;

   IMPORT Conditions, Disciplines, FTPSessions, PrioritySchedulers;

   CONST
      timerPriority = 0;
      logPriority = 100;
      commandPriority = 200;
      dataPriority = 300;
      writerPriority = 400;
      readerPriority = 500;

   TYPE
      Job = POINTER TO JobRec;
      JobRec = RECORD (Disciplines.ObjectRec) END;
      Procedure = PROCEDURE (job: Job);

   PROCEDURE Submit(job: Job;
		    session: FTPSessions.Session;
		    priority: PrioritySchedulers.Priority;
		    proc: Procedure);
      (* submit the given job for being done by the given procedure;
	 note that ``job'' must not be given twice to Submit
      *)

   PROCEDURE CreateCondition(VAR condition: Conditions.Condition; job: Job);
      (* create condition which becomes TRUE when the job is finished;
	 NIL may be returned if the job is already done
      *)

END FTPJobs.
