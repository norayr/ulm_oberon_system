(* Ulm's Oberon Library
   Copyright (C) 1989-1994 by University of Ulm, SAI, D-89069 Ulm, Germany
   ----------------------------------------------------------------------------
   Ulm's Oberon Library is free software; you can redistribute it
   and/or modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either version
   2 of the License, or (at your option) any later version.

   Ulm's Oberon Library is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
   ----------------------------------------------------------------------------
   E-mail contact: oberon@mathematik.uni-ulm.de
   ----------------------------------------------------------------------------
   $Id: Texts.od,v 1.2 1995/03/20 19:17:07 borchert Exp $
   ----------------------------------------------------------------------------
   $Log: Texts.od,v $
   Revision 1.2  1995/03/20  19:17:07  borchert
   some error events added

   Revision 1.1  1994/02/22  20:11:03  borchert
   Initial revision

   ----------------------------------------------------------------------------
   AFB 8/89
   ----------------------------------------------------------------------------
*)

DEFINITION Texts;

   (* management of texts (dynamic strings) *)

   IMPORT Events, Streams;

   CONST
      posBeyondCurrentLength = 0;
      invalidTruncPos = 1;
      errors = 2;
   TYPE
      ErrorEvent = POINTER TO ErrorEventRec;
      ErrorEventRec =
	 RECORD
	    (Events.EventRec)
	    errorcode: SHORTINT;
	 END;
   VAR
      errormsg: ARRAY errors OF Events.Message;
      error: Events.EventType;

   TYPE
      Text = POINTER TO TextRec;
      TextRec =
	 RECORD
	    (Streams.StreamRec)
	 END;

   PROCEDURE Open(VAR text: Streams.Stream);
      (* for reading and writing (holes are not permitted);
	 text will be of type Text
      *)

END Texts.
